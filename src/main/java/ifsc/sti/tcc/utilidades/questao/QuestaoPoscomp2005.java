package ifsc.sti.tcc.utilidades.questao;

import java.util.ArrayList;
import java.util.List;

import ifsc.sti.tcc.modelos.questao.Questao;
import ifsc.sti.tcc.modelos.questao.QuestaoAlternativa;
import ifsc.sti.tcc.props.EArea;
import ifsc.sti.tcc.props.EDisciplina;
import ifsc.sti.tcc.props.ETipoQuestaoProva;

public class QuestaoPoscomp2005 {

	final static Integer ANO = 2005;
	static Integer INICIOQUESTAO = 211;
	static Integer NUMEROQUESTAO = 1;

	public static List<Questao> registerPoscomp() {

		QuestaoAlternativa questaoAlternativa1 = new QuestaoAlternativa();
		questaoAlternativa1.setId(INICIOQUESTAO.longValue());
		questaoAlternativa1.setAno(ANO);
		questaoAlternativa1.setDescricao("A representação polar do número complexo $−3i$ é dada por:");
		questaoAlternativa1.setArea(EArea.MATEMATICA);
		questaoAlternativa1.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa1.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa1.setAlternativaCorreta("a");

		questaoAlternativa1.setAlternativasA("$(3, −90^{\\circ})$.");
		questaoAlternativa1.setAlternativasB("$(3, 90^{\\circ})$.");
		questaoAlternativa1.setAlternativasC("(-3, 180^{\\circ})$.");
		questaoAlternativa1.setAlternativasD("$(3,-180^{\\circ})$.");
		questaoAlternativa1.setAlternativasE("$(-3, 270^{\\circ})$.");
		questaoAlternativa1.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa2 = new QuestaoAlternativa();
		questaoAlternativa2.setId(INICIOQUESTAO.longValue());
		questaoAlternativa2.setAno(ANO);
		questaoAlternativa2.setDescricao("Se $x = 3 − 2i \\,\\, e \\,\\, y = 1 + 4i$ são números complexos, então o produto $x \\cdot y$ é dado por:");
		questaoAlternativa2.setArea(EArea.MATEMATICA);
		questaoAlternativa2.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa2.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa2.setAlternativaCorreta("c");
		questaoAlternativa2.setAlternativasA("$3 − 8i$");
		questaoAlternativa2.setAlternativasB("$4 + 2i$");
		questaoAlternativa2.setAlternativasC("$11 + 10i$");
		questaoAlternativa2.setAlternativasD("$−8 + 3i$");
		questaoAlternativa2.setAlternativasE("$3 + 2i$");
		questaoAlternativa2.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa3 = new QuestaoAlternativa();
		questaoAlternativa3.setId(INICIOQUESTAO.longValue());
		questaoAlternativa3.setAno(ANO);
		questaoAlternativa3.setDescricao("Considere a matriz abaixo: $\newline A = \\left(\\begin{array}{c}1 & 3 & 1 & 1 & 5 \\ -2 & -6 & 0 & 4 & -2 \\ 1 & 3 & 2 & 3 & 9\\end{array}\\right) \newline$ O posto de A, as dimensões dos dois subespaços: imagem de A e núcleo de A, e uma base para a imagem de A são, respectivamente:");
		questaoAlternativa3.setArea(EArea.MATEMATICA);
		questaoAlternativa3.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa3.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa3.setAlternativaCorreta("a");
		questaoAlternativa3.setAlternativasA("3, 3, 2, {(1, −2, 1),(1, 0, 2),(1, 4, 3)}");
		questaoAlternativa3.setAlternativasB("3, 3, 2, {(1, −2, 1),(1, 0, 2),(5, −2, 9)}");
		questaoAlternativa3.setAlternativasC("3, 2, 3, {(1, −2, 1),(1, 0, 2)}");
		questaoAlternativa3.setAlternativasD("2, 3, 2, {(1, −2, 1),(1, 0, 2),(5, −2, 9)}");
		questaoAlternativa3.setAlternativasE("2, 3, 2, {(1, −2, 1),(1, 0, 2)}");
		questaoAlternativa3.setNumeroQuestao(NUMEROQUESTAO);

		
//		FEITO
		
		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa4 = new QuestaoAlternativa();
		questaoAlternativa4.setId(INICIOQUESTAO.longValue());
		questaoAlternativa4.setAno(ANO);
		questaoAlternativa4.setDescricao("Dada a matriz de transformação linear $\\newline A = \\left(\\begin{array}{c}1 & 3 & 2 \\newline 2 & 1 & 1 \\newline 3 & 2 & 3\\end{array}\\right)\\newline$ pode-se afirmar que:");
		questaoAlternativa4.setArea(EArea.MATEMATICA);
		questaoAlternativa4.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa4.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa4.setAlternativaCorreta("c");

		questaoAlternativa4.setAlternativasA("o vetor (1, 0, 0) é mapeado para (1, 3, 2).");
		questaoAlternativa4.setAlternativasB("o vetor (1, 0, 1) é mapeado para (3, 0, 2).");
		questaoAlternativa4.setAlternativasC("o vetor (0, 1, 0) é mapeado para (3, 1, 2).");
		questaoAlternativa4.setAlternativasD("o vetor (0, 0, 1) é mapeado para (3, 2, 3).");
		questaoAlternativa4.setAlternativasE("o vetor (1, 1, 0) é mapeado para (3, 2, 3).");
		questaoAlternativa4.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa5 = new QuestaoAlternativa();
		questaoAlternativa5.setId(INICIOQUESTAO.longValue());
		questaoAlternativa5.setAno(ANO);
		questaoAlternativa5.setDescricao("Seja $T_{n,m}$ um tabuleiro xadrez $n \\times m$. Denominamos um circuito equestre em $T_{n,m}$ a um percurso de um cavalo, se movendo como num jogo de xadrez, que passa por cada uma das células de $T_{n,m}$ exatamente uma vez, e que começa e termina numa mesma célula (arbitrária). A figura abaixo apresenta os movimentos válidos de um cavalo. O número de circuitos equestres em $T_{5,5}$ é.");
		questaoAlternativa5.setArea(EArea.MATEMATICA);
		questaoAlternativa5.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa5.setDisciplina(EDisciplina.ESTATÍSTICA_E_PROBABILIDADE);
		questaoAlternativa5.setAlternativaCorreta("a");

		questaoAlternativa5.setAlternativasA("0");
		questaoAlternativa5.setAlternativasB("1");
		questaoAlternativa5.setAlternativasC("5");
		questaoAlternativa5.setAlternativasD("25");
		questaoAlternativa5.setAlternativasE("5!");
		questaoAlternativa5.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa6 = new QuestaoAlternativa();
		questaoAlternativa6.setId(INICIOQUESTAO.longValue());
		questaoAlternativa6.setAno(ANO);
		questaoAlternativa6.setDescricao("Considere a função $f(x) = 1/x$. Seja A a área compreendida entre o gráfico de f e o eixo x no intervalo $[1, \\infty)$ e seja V o volume do sólido obtido pela revolução do gráfico de $f$ em torno do eixo x no intervalo $[1, \\infty)$. Escolha a alternativa correta:");
		questaoAlternativa6.setArea(EArea.MATEMATICA);
		questaoAlternativa6.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa6.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa6.setAlternativaCorreta("e");

		questaoAlternativa6.setAlternativasA("$A < \\infty \\,\\, e \\,\\, A < V$.");
		questaoAlternativa6.setAlternativasB("$A < \\infty \\,\\, e \\,\\, V < \\infty$.");
		questaoAlternativa6.setAlternativasC("$A < \\infty \\,\\, e \\,\\, V = \\infty$.");
		questaoAlternativa6.setAlternativasD("$A = \\infty \\,\\, e \\,\\, V = \\infty$.");
		questaoAlternativa6.setAlternativasE("$A = \\infty \\,\\, e \\,\\, V < \\infty$.");
		questaoAlternativa6.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa7 = new QuestaoAlternativa();
		questaoAlternativa7.setId(INICIOQUESTAO.longValue());
		questaoAlternativa7.setAno(ANO);
		questaoAlternativa7.setDescricao("Considere as afirmações a seguir:\r\n" + 
				"$\\newline$(I) Se $f: \\mathbb{R} \\rightarrow \\mathbb{R}$ é uma função tal que $f(x) = f(-x)$ para todo $x \\in \\mathbb{R}$ e $f$ é derivável no ponto $a = 0$, então $f'(0) = 0$.\r\n" + 
				"$\\newline$(II) Se $\\lim_{n \\rightarrow 0} b_n = + \\infty \\,\\, e\\,\\, \\lim_{n \\rightarrow 0} a_n = 0$, então $\\lim_{n \\rightarrow 0} a_n b_n$ não existe.\r\n" + 
				"$\\newline$(III) $\\lim_{n \\rightarrow 3} [3] = 3$.\r\n" + 
				"$\\newline$(IV) Se $c \\in [a,b]$ é um máximo local de uma função $f:[a,b] \\rightarrow \\mathbb{R}$ então $f'(c) = 0$.\r\n" + 
				"$\\newline$(V) Se $\\lim_{n \\rightarrow \\infty} a_n$ existe e $\\lim_{n \\rightarrow \\infty} b_n$ não existe, então $\\lim_{n \\rightarrow \\infty} (a_n+b_n)$ não existe.\r\n" + 
				"$\\newline$Quais são as afirmações verdadeiras?");
		questaoAlternativa7.setArea(EArea.MATEMATICA);
		questaoAlternativa7.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa7.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa7.setAlternativaCorreta("c");

		questaoAlternativa7.setAlternativasA("Somente as afirmações (I), (III) e (V) são verdadeiras.");
		questaoAlternativa7.setAlternativasB("Somente as afirmações (I), (II) e (III) são verdadeiras.");
		questaoAlternativa7.setAlternativasC("Somente as afirmações (I) e (V) são verdadeiras.");
		questaoAlternativa7.setAlternativasD("Somente as afirmações (I), (IV) e (V) são verdadeiras.");
		questaoAlternativa7.setAlternativasE("Somente as afirmações (II), (III) e (IV) são verdadeiras.");
		questaoAlternativa7.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa8 = new QuestaoAlternativa();
		questaoAlternativa8.setId(INICIOQUESTAO.longValue());
		questaoAlternativa8.setAno(ANO);
		questaoAlternativa8.setDescricao("Na figura abaixo, a curva é o gráfico da função $f(x) = x^2$ e a região marcada no retângulo corresponde a $R = \\left\\{(x, y) \\in \\mathbb{R}^2: i \\leq x \\leq i + 1 \\,\\, e \\,\\, x^2 \\leq y \\leq (i + 1)^2\\right\\}$. $\newline$ A área de R é:");
		questaoAlternativa8.setArea(EArea.MATEMATICA);
		questaoAlternativa8.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa8.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa8.setAlternativaCorreta("c");

		questaoAlternativa8.setAlternativasA("$\\frac{(i+1)^2}{3}$");
		questaoAlternativa8.setAlternativasB("$\\frac{2i+1}{2}$");
		questaoAlternativa8.setAlternativasC("$\\frac{3i+2}{3}$");
		questaoAlternativa8.setAlternativasD("$\\frac{3i^2 + 3i + 1}{3}$");
		questaoAlternativa8.setAlternativasE("$i+1$");
		questaoAlternativa8.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa9 = new QuestaoAlternativa();
		questaoAlternativa9.setId(INICIOQUESTAO.longValue());
		questaoAlternativa9.setAno(ANO);
		questaoAlternativa9.setDescricao("A sequência $x_n$ é definida recursivamente por $x_{n+1} = \\begin{cases}1 & se\\,\\, n = 0,\\newline 1+\\frac{1}{1+x_{n}} & caso\\,\\, contrário.\\end{cases}$ Se $\\lim_{n \\rightarrow \\infty} x_n = L$, então");
		questaoAlternativa9.setArea(EArea.MATEMATICA);
		questaoAlternativa9.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa9.setDisciplina(EDisciplina.CALCULO);
		questaoAlternativa9.setAlternativaCorreta("e");
		questaoAlternativa9.setAlternativasA("$L = 1$");
		questaoAlternativa9.setAlternativasB("$L = 1 + \\frac{1}{2}$");
		questaoAlternativa9.setAlternativasC("$L = 2 $");
		questaoAlternativa9.setAlternativasD("$L = \\sqrt{1 + \\frac{1}{2}}$");
		questaoAlternativa9.setAlternativasE("$L = \\sqrt{2}$");
		questaoAlternativa9.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa10 = new QuestaoAlternativa();
		questaoAlternativa10.setId(INICIOQUESTAO.longValue());
		questaoAlternativa10.setAno(ANO);
		questaoAlternativa10.setDescricao("Uma equação do segundo grau em $x$ e $y$, da forma $ax^2 + by^2 + cxy + dx + ey + f = 0$, com $a, b > 0$ pode descrever:");
		questaoAlternativa10.setArea(EArea.MATEMATICA);
		questaoAlternativa10.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa10.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa10.setAlternativaCorreta("c");
		questaoAlternativa10.setAlternativasA("Uma curva arbitrária.");
		questaoAlternativa10.setAlternativasB("Uma circunferência ou uma elipse, mas não uma reta.");
		questaoAlternativa10.setAlternativasC("Uma reta.");
		questaoAlternativa10.setAlternativasD("Uma parábola ou uma hipérbole, mas não uma reta.");
		questaoAlternativa10.setAlternativasE(" Simultaneamente duas parábolas.");
		questaoAlternativa10.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa11 = new QuestaoAlternativa();
		questaoAlternativa11.setId(INICIOQUESTAO.longValue());
		questaoAlternativa11.setAno(ANO);
		questaoAlternativa11.setDescricao("Denote por $\\langle x,y \\rangle$ o produto escalar dos vetores $x = (x_1, x_2, x_3)$ e $y = (y_1, y_2, y_3)$ em $\\mathbb{R}^3$. O lugar geométrico dado por $\\langle x,y \\rangle = r$, onde $1 = (1, 1, 1)$ e $r \\in \\mathbb{R}$ é");
		questaoAlternativa11.setArea(EArea.MATEMATICA);
		questaoAlternativa11.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa11.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa11.setAlternativaCorreta("c");
		questaoAlternativa11.setAlternativasA("a circunferência de raio $r$ e centro 1");
		questaoAlternativa11.setAlternativasB("um parabolóide com foco em 1");
		questaoAlternativa11.setAlternativasC("um plano com vetor normal 1");
		questaoAlternativa11.setAlternativasD("um cilindro de raio $r$ e altura 1");
		questaoAlternativa11.setAlternativasE("um hiperbolóide");
		questaoAlternativa11.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa12 = new QuestaoAlternativa();
		questaoAlternativa12.setId(INICIOQUESTAO.longValue());
		questaoAlternativa12.setAno(ANO);
		questaoAlternativa12.setDescricao("Determine qual das seguintes proposições não pode ser provada a partir da premissa: $((a \\wedge b) \\vee c) \\wedge (c \\rightarrow d)$");
		questaoAlternativa12.setArea(EArea.MATEMATICA);
		questaoAlternativa12.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa12.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa12.setAlternativaCorreta("c");

		questaoAlternativa12.setAlternativasA("$(a \\vee d) \\wedge (b \\vee d)$");
		questaoAlternativa12.setAlternativasB("$(\\neg a \\vee \\neg b) \\rightarrow (c \\wedge d)$");
		questaoAlternativa12.setAlternativasC("$(a \\wedge b) \\rightarrow \\neg d$");
		questaoAlternativa12.setAlternativasD("$\\neg a \\rightarrow d$");
		questaoAlternativa12.setAlternativasE("$\\neg d \\rightarrow b$");
		questaoAlternativa12.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa13 = new QuestaoAlternativa();
		questaoAlternativa13.setId(INICIOQUESTAO.longValue());
		questaoAlternativa13.setAno(ANO);
		questaoAlternativa13.setDescricao("Dadas as quatro premissas:\r\n" + 
				"$\\newline$- Se o universo é finito, então a vida é curta.\r\n" + 
				"$\\newline$- Se a vida vale a pena, então a vida é complexa.\r\n" + 
				"$\\newline$- Se a vida é curta ou complexa, então a vida tem sentido.\r\n" + 
				"$\\newline$- A vida não tem sentido. e as assertivas lógicas:\r\n" + 
				"$\\newline$(I) se o universo é finito e a vida vale a pena, então a vida tem sentido;\r\n" + 
				"$\\newline$(II) a vida não é curta;\r\n" + 
				"$\\newline$(III) a vida tem sentido ou o universo é finito;\r\n" + 
				"$\\newline$quais assertivas pode-se dizer que se seguem logicamente das premissas dadas?");
		questaoAlternativa13.setArea(EArea.MATEMATICA);
		questaoAlternativa13.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa13.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa13.setAlternativaCorreta("c");
		questaoAlternativa13.setImagem(true);
		questaoAlternativa13.setAlternativasA("Somente (I) e (III)");
		questaoAlternativa13.setAlternativasB("Somente (II) e (III)");
		questaoAlternativa13.setAlternativasC("Somente (I) e (II)");
		questaoAlternativa13.setAlternativasD("(I), (II) e (III)");
		questaoAlternativa13.setAlternativasE(" Somente a assertiva (I).");
		questaoAlternativa13.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa14 = new QuestaoAlternativa();
		questaoAlternativa14.setId(INICIOQUESTAO.longValue());
		questaoAlternativa14.setAno(ANO);
		questaoAlternativa14.setDescricao("Considere a seguinte proposição: $\\newline P : \\forall x[Bx \\rightarrow [Lx \\wedge Cx]] \\newline$ Assinale a alternativa que contém uma proposição equivalente a $\\neg P$.");
		questaoAlternativa14.setArea(EArea.MATEMATICA);
		questaoAlternativa14.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa14.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa14.setAlternativaCorreta("b");

		questaoAlternativa14.setAlternativasA("$\\forall x\\neg[Bx \\rightarrow [Lx \\wedge Cx]]$");
		questaoAlternativa14.setAlternativasB("$\\exists x[Bx \\wedge [\\neg Lx \\vee \\neg Cx]].$");
		questaoAlternativa14.setAlternativasC("$\\forall x[Bx \\rightarrow \\neg[Lx \\wedge Cx]].$");
		questaoAlternativa14.setAlternativasD("$\\exists x[\\neg Bx \\wedge [\\neg Lx \\vee \\neg Cx]].$");
		questaoAlternativa14.setAlternativasE("$\\exists x[\\neg Bx \\vee [Lx \\wedge Cx]].$");
		questaoAlternativa14.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa15 = new QuestaoAlternativa();
		questaoAlternativa15.setId(INICIOQUESTAO.longValue());
		questaoAlternativa15.setAno(ANO);
		questaoAlternativa15.setDescricao("Quantas cadeias de 7 bits contêm pelo menos 3 zeros consecutivos?");
		questaoAlternativa15.setArea(EArea.MATEMATICA);
		questaoAlternativa15.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa15.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa15.setAlternativaCorreta("d");
		questaoAlternativa15.setAlternativasA("81");
		questaoAlternativa15.setAlternativasB("80");
		questaoAlternativa15.setAlternativasC("48");
		questaoAlternativa15.setAlternativasD("47");
		questaoAlternativa15.setAlternativasE("16");
		questaoAlternativa15.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa16 = new QuestaoAlternativa();
		questaoAlternativa16.setId(INICIOQUESTAO.longValue());
		questaoAlternativa16.setAno(ANO);
		questaoAlternativa16.setDescricao("Sejam a, b e n inteiros, com n > 0. Considere a equação $ax\\equiv b \\,\\,(mod\\,\\,n)$.");
		questaoAlternativa16.setArea(EArea.MATEMATICA);
		questaoAlternativa16.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa16.setDisciplina(EDisciplina.CALCULO);
		questaoAlternativa16.setAlternativaCorreta("c");
		questaoAlternativa16.setAlternativasA("A equação acima não tem solução.");
		questaoAlternativa16.setAlternativasB("A equação acima sempre tem solução.");
		questaoAlternativa16.setAlternativasC("A equação acima tem soluçãao se mdc(a, n) = 1.");
		questaoAlternativa16.setAlternativasD("A equação acima tem solução se mdc(a, b) = 1");
		questaoAlternativa16.setAlternativasE("A equação acima tem solução se mdc(b, n) = 1.");
		questaoAlternativa16.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa17 = new QuestaoAlternativa();
		questaoAlternativa17.setId(INICIOQUESTAO.longValue());
		questaoAlternativa17.setAno(ANO);
		questaoAlternativa17.setDescricao("O número máximo de nós no nível i de uma arvóre binária é: (Considere o nível da raiz igual a 1.)");
		questaoAlternativa17.setArea(EArea.MATEMATICA);
		questaoAlternativa17.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa17.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa17.setAlternativaCorreta("b");

		questaoAlternativa17.setAlternativasA("$2^{i+1}, i \\geq 0$");
		questaoAlternativa17.setAlternativasB("$2^{i-1}, i \\geq 1$");
		questaoAlternativa17.setAlternativasC("$2^i, i \\geq 1$");
		questaoAlternativa17.setAlternativasD("$2^i + 1, i \\geq 1$");
		questaoAlternativa17.setAlternativasE("$2^i - 1, i \\geq 1$");
		questaoAlternativa17.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa18 = new QuestaoAlternativa();
		questaoAlternativa18.setId(INICIOQUESTAO.longValue());
		questaoAlternativa18.setAno(ANO);
		questaoAlternativa18.setDescricao("Dadas as seguintes afirmações:\r\n" + 
				"$\\newline$(I) se R é uma relação transitiva, a sua inversa também é transitiva.\r\n" + 
				"$\\newline$(II) se R é uma relação reflexiva, anti-simétrica e transitiva, então a sua inversa também é uma relação reflexiva, anti-simétrica e transitiva.\r\n" + 
				"$\\newline$(III) se R é uma relação simétrica e transitiva, então R é reflexiva.\r\n" + 
				"$\\newline$São verdadeiras:");
		questaoAlternativa18.setArea(EArea.MATEMATICA);
		questaoAlternativa18.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa18.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa18.setAlternativaCorreta("a");
		questaoAlternativa18.setAlternativasA("Somente (I) e (II)");
		questaoAlternativa18.setAlternativasB("Somente (II) e (III)");
		questaoAlternativa18.setAlternativasC("Somente (I) e (III)");
		questaoAlternativa18.setAlternativasD("(I), (II) e (III)");
		questaoAlternativa18.setAlternativasE("Somente (I) é verdadeira.");
		questaoAlternativa18.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa19 = new QuestaoAlternativa();
		questaoAlternativa19.setId(INICIOQUESTAO.longValue());
		questaoAlternativa19.setAno(ANO);
		questaoAlternativa19.setDescricao("Considere que todos os relês do circuito representado na figura abaixo funcionam independentemente e que a probabilidade de fechamento de cada relê é dada por p. Qual a probabilidade de que haja corrente entre os terminais A e B?");
		questaoAlternativa19.setArea(EArea.MATEMATICA);
		questaoAlternativa19.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa19.setDisciplina(EDisciplina.ESTATÍSTICA_E_PROBABILIDADE);
		questaoAlternativa19.setAlternativaCorreta("d");
		questaoAlternativa19.setImagem(true);
		questaoAlternativa19.setImagemQuestao("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d9xxh7/bBYEUQEly6qmn+neAtGJalLTAoGMdGTLnPh1up0Mr586da1piT4fK6XADXTS/sIFUFahSetB1113njyHQxXRjTSfenHvuuf6WWs2bNzetcJneSmjRooX/qLd+Ym3UqFH+hy4ybXsPYAAImgYAveb26dPH7/jH2vr16/2JKzNmzPC3kob7NJQ++OCD/rKZRx99tGmNnb59+/pDBoJauL9QoVS3xDrvvPP8ntS1115rWoOn1VgdxKtjLjSUovh48skn/er2Z5995i9zESt6+6B169Yyc+ZMdhsBUGLpZCfdyVDfU3WJpljRbS+vvvpqadu2rTz00EOmFcXBbbfd5u+T//bbb8e0QDNhwgTp2bOnf05qJT8Ihaq1avUrJSXFH+ep40tjQQOpDuDV2X9Dhw41rSgudOyvLqivnZa8bp+WXxpI27RpI2+++SaBFECJpguljx492n9PjdV60BpIr7nmGr9KSiAtfrR4t2vXLr+aHqvlOzWQ6nCSyZMnBxZIVaEHADRq1MifmafBdOzYsaY1GDpgV3tpGkx10ky5cuXMMygudAa83lKvXbu2/yan40yDpC8IDaRvvPGG//MBoKTTu0IjR470g6neiQqS3rLXCqnOtLc12x+Fc9RRR8nHH38sO3bs8It6uhNXkF577TU/kGq1PujJ7oUflRqlwXTKlCkyaNAgufHGG/1ZgoWllVcdQ1qrVi0CaTF3MJjqLScd7hFE50XHGOukJl2C4qOPPiKQAggVDabvvvuuP+FYA0IQd6I0bGh1VJdcJJAWbxpMdXyprtSgK9JoRiustLQ0/7zTu9bTp0+PzepLOqY0KJmZmV7fvn29KlWqeAMGDPA2b95snsm7mTNnem3btvUSEhL8z1GyLF682It2NrxoQPWiHQ8vEomYZ/Jm586d3gsvvODFx8d7d911lxcNp+YZAAifXbt2eV26dPFq1KjhDRkyxNuzZ495Jm9yc3O9lJQU7/LLL/fOP/9877vvvjPPoKSYNm2aV716da99+/benDlzTGvepaamek888YQXDbje448/7mVnZ5tngleoiU5/RHcCir44/ApWy5YtD41N0TXWjlzQXJea0E38Fy5cKG+99Za/BqoOnO3cuXNMJ8bAHp1BqktFaU9cbyvooOwLL7zQP0d+byknXXNUt7bVnpmeUzqjX5cF0+3YAAAi8+bN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");
		questaoAlternativa19.setAlternativasA("$p^2$");
		questaoAlternativa19.setAlternativasB("$2p^2$");
		questaoAlternativa19.setAlternativasC("$p^4$");
		questaoAlternativa19.setAlternativasD("$2p^2 - p^4$");
		questaoAlternativa19.setAlternativasE("$4p$");
		questaoAlternativa19.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa20 = new QuestaoAlternativa();
		questaoAlternativa20.setId(INICIOQUESTAO.longValue());
		questaoAlternativa20.setAno(ANO);
		questaoAlternativa20.setDescricao("Seja R o reticulado no plano formado pelos pares de números inteiros no intervalo $[−2n, 2n]$, n inteiro maior que 1, e S o circulo de raio n e centro (0, 0): $\\newline R = \\left\\{(i,j) \\in \\mathbb{Z}^2 : -2n \\leq i \\leq 2n\\,\\,e\\,\\,-2n \\leq j \\leq 2n\\right\\},\\newline S = \\left\\{(x,y) \\in \\mathbb{R}^2 : x^2 + y^2 = n^2\\right\\} \\newline$ Uma amostra aleatória é tomada do reticulado de modo que cada ponto tem probabilidade 0, 5 de ser escolhido, com as escolhas feitas de maneira independente. Qual o número de pontos esperados no interior do círculo S?");
		questaoAlternativa20.setArea(EArea.MATEMATICA);
		questaoAlternativa20.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa20.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa20.setAlternativaCorreta("e");
		questaoAlternativa20.setAlternativasA("$0,5 \\cdot (4n + 1)^2$");
		questaoAlternativa20.setAlternativasB("$0,5 \\cdot 4 \\cdot |\\left\\{(i,j) \\in \\mathbb{Z}^2 : i^2 + j^2 < n^2 \\,\\, e \\,\\, i>0, j > 0\\right\\}|$.");
		questaoAlternativa20.setAlternativasC("$0,5 \\cdot \\pi n^2$.");
		questaoAlternativa20.setAlternativasD("$0,5 \\cdot \\frac{\\pi n^2}{ (4n+1)^2 }$.");
		questaoAlternativa20.setAlternativasE("$0,5 \\cdot |\\left\\{(i,j) \\in \\mathbb{Z}^2 : i^2 + j^2 < n^2 \\right\\}|$.");
		questaoAlternativa20.setNumeroQuestao(NUMEROQUESTAO);

//		PAREI AQUI
		
		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa21 = new QuestaoAlternativa();
		questaoAlternativa21.setId(INICIOQUESTAO.longValue());
		questaoAlternativa21.setAno(ANO);
		questaoAlternativa21.setDescricao("Considere uma cpu usando uma estrutura pipeline com 5 estágios (IF, ID, EX, MEM, WB) e com memórias de dados e de instruções separadas, sem mecanismo de data forwarding, escrita no banco de registradores na borda de subida do clock e leitura na borda de descida do clock e o conjunto de instruções conforme a figura abaixo.\r\n" + 
				"$\\newline$I1: lw $2, 100($5)\r\n" + 
				"$\\newline$I2: add $1, $2, $3\r\n" + 
				"$\\newline$I3: sub $3, $2, $1\r\n" + 
				"$\\newline$I4: sw $2, 50($1)\r\n" + 
				"$\\newline$I5: add $2, $3, $3\r\n" + 
				"$\\newline$I6: sub $2, $2, $4\r\n" + 
				"$\\newline$ ciclos de clock são gastos para a execução deste código?");
		questaoAlternativa21.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa21.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa21.setDisciplina(EDisciplina.ARQUITETURA_E_ORGANIZACAO_DE_COMPUTADORES);
		questaoAlternativa21.setAlternativaCorreta("b");
		questaoAlternativa21.setAlternativasA("30");
		questaoAlternativa21.setAlternativasB("17");
		questaoAlternativa21.setAlternativasC("16");
		questaoAlternativa21.setAlternativasD("11");
		questaoAlternativa21.setAlternativasE("10");
		questaoAlternativa21.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa22 = new QuestaoAlternativa();
		questaoAlternativa22.setId(INICIOQUESTAO.longValue());
		questaoAlternativa22.setAno(ANO);
		questaoAlternativa22.setDescricao("Para a representação de número ponto flutuante no padrão IEEE, quais das afirmações a seguir são verdadeiras?\r\n" + 
				"$\\newline$(I) Quando a fração e o expoente são zero, o número representado é zero.\r\n" + 
				"$\\newline$(II) Quando o expoente é zero, o número representado é desnormalizado.\r\n" + 
				"$\\newline$(III) Quando todos os bits do expoente são iguais a um e a fração é zero, o número é\r\n" + 
				"$+ \\infty \\,\\, ou \\,\\, - \\infty$.\r\n" + 
				"$\\newline$(IV) Quando todos os bits do expoente são iguais a um e a fração é diferente de zero, a representação não é número");
		questaoAlternativa22.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa22.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa22.setDisciplina(EDisciplina.ELETRONICA_DIGITAL);
		questaoAlternativa22.setAlternativaCorreta("e");
		questaoAlternativa22.setAlternativasA("Somente as afirmações (II), (III) e (IV).");
		questaoAlternativa22.setAlternativasB("Somente as afirmações (I), (II) e (IV).");
		questaoAlternativa22.setAlternativasC("Somente as afirmações (I), (II) e (III).");
		questaoAlternativa22.setAlternativasD("Somente as afirmações (I), (III) e (IV).");
		questaoAlternativa22.setAlternativasE("Todas as afirmações.");
		questaoAlternativa22.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa23 = new QuestaoAlternativa();
		questaoAlternativa23.setId(INICIOQUESTAO.longValue());
		questaoAlternativa23.setAno(ANO);
		questaoAlternativa23.setDescricao("Das afirmações a seguir, sobre memória cache, quais são verdadeiras?\r\n" + 
				"$\\newline$(I) Numa estrutura totalmente associativa, um bloco de memória pode ser mapeado em qualquer slot do cache.\r\n" + 
				"$\\newline$(II) O campo tag do endereço é usado para identificar um bloco válido no cache, junto com o campo de índice.\r\n" + 
				"$\\newline$(III) Um cache de nível 2 serve para reduzir a penalidade no caso de falta no nível 1.\r\n" + 
				"$\\newline$(IV) O esquema de substituição LRU é o mais usado para a estrutura de mapeamento direto.");
		questaoAlternativa23.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa23.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa23.setDisciplina(EDisciplina.ARQUITETURA_E_ORGANIZACAO_DE_COMPUTADORES);
		questaoAlternativa23.setAlternativaCorreta("d");
		questaoAlternativa23.setAlternativasA("Somente as afirmações (I), (III) e (IV).");
		questaoAlternativa23.setAlternativasB("Somente as afirmações (II), (III) e (IV).");
		questaoAlternativa23.setAlternativasC("Somente as afirmações (I) e (II).");
		questaoAlternativa23.setAlternativasD("Somente as afirmações (I), (II) e (III).");
		questaoAlternativa23.setAlternativasE("Somente as afirmações (II) e (III).");
		questaoAlternativa23.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa24 = new QuestaoAlternativa();
		questaoAlternativa24.setId(INICIOQUESTAO.longValue());
		questaoAlternativa24.setAno(ANO);
		questaoAlternativa24.setDescricao("Considere as seguintes expressões booleanas: $\\newline (A) (a \\cdot b) + (c \\cdot d \\cdot e)\r\n" + 
				"\\newline(B) \\overline{(\\overline{a \\cdot b}) \\cdot (\\overline{c \\cdot d \\cdot e})} \\newline (C) (a + b) \\cdot (c + d + e) \\newline(D) \\overline{(\\overline{a + b}) + (\\overline{c + d + e})} \\newline$\r\n" + 
				"Considere ainda as seguintes afirmações:\r\n" + 
				"$\\newline$(I) A é equivalente a B.\r\n" + 
				"$\\newline$(II) C é equivalente a D.\r\n" + 
				"$\\newline$(III) A é equivalente a D.\r\n" + 
				"$\\newline$(IV) B é equivalente a C.\r\n" + 
				"$\\newline$Quais das alternativas acima são verdadeiras?");
		questaoAlternativa24.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa24.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa24.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa24.setAlternativaCorreta("a");
		questaoAlternativa24.setAlternativasA("Somente as afirmações (I) e (II) são verdadeiras.");
		questaoAlternativa24.setAlternativasB("Somente as afirmações (I) e (III) são verdadeiras.");
		questaoAlternativa24.setAlternativasC("Somente as afirmações (II) e (IV) são verdadeiras");
		questaoAlternativa24.setAlternativasD("odas as afirmações são verdadeiras.");
		questaoAlternativa24.setAlternativasE("Todas as afirmações são falsas.");
		questaoAlternativa24.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------
		
		QuestaoAlternativa questaoAlternativa25 = new QuestaoAlternativa();
		questaoAlternativa25.setId(INICIOQUESTAO.longValue());
		questaoAlternativa25.setAno(ANO);
		questaoAlternativa25.setDescricao("Uma lista ligada possui a seguinte definição de nó, conforme a Figura 1. Como o procedimento, representado na Figura 2, deve ser completado para inverter uma lista ligada?");
		questaoAlternativa25.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa25.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa25.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa25.setAlternativaCorreta("d");
		questaoAlternativa25.setImagem(true);
		questaoAlternativa25.setImagemQuestao("");
		questaoAlternativa25.setAlternativasA("18");
		questaoAlternativa25.setAlternativasB("15");
		questaoAlternativa25.setAlternativasC("14");
		questaoAlternativa25.setAlternativasD("13");
		questaoAlternativa25.setAlternativasE("12");
	    questaoAlternativa25.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa26 = new QuestaoAlternativa();
		questaoAlternativa26.setId(INICIOQUESTAO.longValue());
		questaoAlternativa26.setAno(ANO);
		questaoAlternativa26.setDescricao("Considere um heap H com 24 elementos tendo seu maior elemento na raiz. Em quantos nós de H pode estar o seu segundo menor elemento?");
		questaoAlternativa26.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa26.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa26.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa26.setAlternativaCorreta("d");
		questaoAlternativa26.setAlternativasA("18");
		questaoAlternativa26.setAlternativasB("15");
		questaoAlternativa26.setAlternativasC("14");
		questaoAlternativa26.setAlternativasD("13");
		questaoAlternativa26.setAlternativasE("12");
		questaoAlternativa26.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa27 = new QuestaoAlternativa();
		questaoAlternativa27.setId(INICIOQUESTAO.longValue());
		questaoAlternativa27.setAno(ANO);
		questaoAlternativa27.setDescricao("Dadas as seguintes caracteríısticas para uma Arvóre B de ordem n:\r\n" + 
				"$\\newline$(I) Toda página contém no máximo 2n itens (chaves).\r\n" + 
				"$\\newline$(II) Toda página, exceto a página raiz, contém no mínimo n itens.\r\n" + 
				"$\\newline$(III) Toda página ou é uma página folha, ou tem m + 1 descendentes, onde m é o número de chaves.\r\n" + 
				"$\\newline$(IV) Todas as páginas folhas aparecem no mesmo nível.\r\n" + 
				"$\\newline$Qual das seguintes opções é verdadeira:");
		questaoAlternativa27.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa27.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa27.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa27.setAlternativaCorreta("c");
		questaoAlternativa27.setAlternativasA("As características (I), (II), (III) e (IV) são falsas.");
		questaoAlternativa27.setAlternativasB("As características (I) e (IV) são verdadeiras.");
		questaoAlternativa27.setAlternativasC("As características (II), (III) e (IV) são verdadeiras.");
		questaoAlternativa27.setAlternativasD("As características (I), (II), (III) e (IV) são verdadeiras.");
		questaoAlternativa27.setAlternativasE("As características(II), (III) e (IV) são falsas");
		questaoAlternativa27.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa28 = new QuestaoAlternativa();
		questaoAlternativa28.setId(INICIOQUESTAO.longValue());
		questaoAlternativa28.setAno(ANO);
		questaoAlternativa28.setDescricao("Qual das seguintes afirmações é falsa?");
		questaoAlternativa28.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa28.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa28.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa28.setAlternativaCorreta("d");
		questaoAlternativa28.setAlternativasA("Dada uma máquina de Turing M com alfabeto de entrada $\\sum$ e uma string $w \\in \\sum$, não se sabe se a computação de M com entrada w vai ou não parar.");
		questaoAlternativa28.setAlternativasB("O problema da parada é indecidível.");
		questaoAlternativa28.setAlternativasC("Não existe algoritmo que determina quando uma gramática livre de contexto arbitrária é ambuígua.");
		questaoAlternativa28.setAlternativasD("Não existe autômato finito determinístico que reconheça alguma linguagem livre de contexto.");
		questaoAlternativa28.setAlternativasE("Um autômato com duas pilhas pode ser simulado por uma máquina de Turing.");
		questaoAlternativa28.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa29 = new QuestaoAlternativa();
		questaoAlternativa29.setId(INICIOQUESTAO.longValue());
		questaoAlternativa29.setAno(ANO);
		questaoAlternativa29.setDescricao("Considere as seguintes afirmações:\r\n" + 
				"$\\newline$(I) O paradigma da programação funcional é baseado em funções matemáticas e composição de funçoes.\r\n" + 
				"$\\newline$(II) prolog é uma linguagem de programação cuja sintaxe é uma versão simplificada do CALCULO de predicados e seu método de inferência é uma forma restrita de Resolução.\r\n" + 
				"$\\newline$(III) O conceito de “Classe” foi primeiramente introduzido por Simula67.\r\n" + 
				"$\\newline$(IV) O paradigma orientado a objeto surgiu em paralelo ao desenvolvimento de Smalltalk.\r\n" + 
				"$\\newline$(V) No paradigma declarativo, programas são expressos na forma de lógica simbólica\r\n" + 
				"e usam um processo de inferência lógica para produzir resultados.\r\n" + 
				"$\\newline$Quais são as afirmações verdadeiras?");
		questaoAlternativa29.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa29.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa29.setDisciplina(EDisciplina.LINGUAGENS_E_PARADIGMAS_DE_PROGRAMACAO);
		questaoAlternativa29.setAlternativaCorreta("e");
		questaoAlternativa29.setAlternativasA("Somente (I) e (V).");
		questaoAlternativa29.setAlternativasB("Somente (II) e (V).");
		questaoAlternativa29.setAlternativasC("Somente (I), (II) e (V).");
		questaoAlternativa29.setAlternativasD("Somente (I) e (II).");
		questaoAlternativa29.setAlternativasE("Todas as afirmações são verdadeiras.");
		questaoAlternativa29.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa30 = new QuestaoAlternativa();
		questaoAlternativa30.setId(INICIOQUESTAO.longValue());
		questaoAlternativa30.setAno(ANO);
		questaoAlternativa30.setDescricao("Dadas duas funções $f,g: \\mathbb{N} \\rightarrow \\mathbb{R}$, dizemos que $f = o(g)\\,\\,se\\,\\, \\lim_{n \\rightarrow \\infty} f(n)/g(n) = 0$. Suponha que o tempo de execução de um certo algoritmo em função do tamanho n de sua entrada é descrito por $T(n) = log_2 n + o(1)$. A alternativa que melhor expressa esta afirmação é");
		questaoAlternativa30.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa30.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa30.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa30.setAlternativaCorreta("a");
		questaoAlternativa30.setAlternativasA("para todo $\\in > 0$, existe $n_0 > 0$ tal que $|T(n) − log_2 n| < \\in$ para todo $n > n_0$.");
		questaoAlternativa30.setAlternativasB("para todo $c > 0$, existe $n_0 > 0$ tal que $T(n) \\leq log_2n + c$ para todo $n > n_0$.");
		questaoAlternativa30.setAlternativasC("existem constantes $c > 0$ e $n_0 > 0$ tais que $T(n) \\leq c\\,\\, log_2 n $ para todo $n > n_0$.");
		questaoAlternativa30.setAlternativasD("existem constantes $c_1 > 0, c_2 > 0 \\,\\,e\\,\\, n_0 > 0$ tais que $c_1\\, log_2 n \\leq T(n) \\leq c_2 log_2 n$ para todo $n > n_0$");
		questaoAlternativa30.setAlternativasE("existem constantes $c > 0 \\,\\,e\\,\\, n_0 > 0$ tais que $T(n) \\geq c\\,\\,log_2n$ para todo $n > n_0$.");
		questaoAlternativa30.setNumeroQuestao(NUMEROQUESTAO);
 
		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa31 = new QuestaoAlternativa();
		questaoAlternativa31.setId(INICIOQUESTAO.longValue());
		questaoAlternativa31.setAno(ANO);
		questaoAlternativa31.setDescricao("Considere o algoritmo da busca sequencial de um elemento em um conjunto com $n$ elementos. A expressão que representa o tempo médio de execução desse algoritmo para uma busca bem sucedida é:");
		questaoAlternativa31.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa31.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa31.setDisciplina(EDisciplina.PROGRAMACAO);
		questaoAlternativa31.setAlternativaCorreta("d");
		questaoAlternativa31.setImagem(true);
		questaoAlternativa31.setImagemQuestao("");
		questaoAlternativa31.setAlternativasA("5, 4, 5;");
		questaoAlternativa31.setAlternativasB("5, 4, 120;");
		questaoAlternativa31.setAlternativasC("1, 4, 14400;");
		questaoAlternativa31.setAlternativasD("5, 4, 165;");
		questaoAlternativa31.setAlternativasE("1, 4, 120;");
		questaoAlternativa31.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa32 = new QuestaoAlternativa();
		questaoAlternativa32.setId(INICIOQUESTAO.longValue());
		questaoAlternativa32.setAno(ANO);
		questaoAlternativa32.setDescricao("Considere o algoritmo máximo$(v, i, f)$ que devolve o índice de um elemento máximo de $\\left\\{v[i], . . . , v[f]\\right\\}$. Apresentado na imagem abaixo." +
				"Considerando $n = f − i + 1$, o número de comparações entre elementos de $v$ numa execução de máximo$(v, i, f)$ é");
		questaoAlternativa32.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa32.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa32.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa32.setAlternativaCorreta("c");
		questaoAlternativa32.setAlternativasA("$n\\,\\, log_2\\,\\, n$");
		questaoAlternativa32.setAlternativasB("$n/2$");
		questaoAlternativa32.setAlternativasC("$n -1$");
		questaoAlternativa32.setAlternativasD("$log_2 \\,\\, n$");
		questaoAlternativa32.setAlternativasE("$2n$");
		questaoAlternativa32.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa33 = new QuestaoAlternativa();
		questaoAlternativa33.setId(INICIOQUESTAO.longValue());
		questaoAlternativa33.setAno(ANO);
		questaoAlternativa33.setDescricao("Um algoritmo de ordenação é estável se a ordem relativa dos itens com chaves iguais mantém-se inalterada após a ordenação. Quais dos seguintes algoritmos de ordenação são estavéis?\r\n" + 
				"$\\newline$(I) BubbleSort (ordenação por bolha);\r\n" + 
				"$\\newline$(II) InsertionSort (ordenação por inserção);\r\n" + 
				"$\\newline$(III) HeapSort;\r\n" + 
				"$\\newline$(IV) QuickSort;");
		questaoAlternativa33.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa33.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa33.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa33.setAlternativaCorreta("b");
		questaoAlternativa33.setAlternativasA("Somente (II).");
		questaoAlternativa33.setAlternativasB("Somente (I) e (II).");
		questaoAlternativa33.setAlternativasC("Somente (I), (II) e (III).");
		questaoAlternativa33.setAlternativasD("Somente (II), (III) e (IV).");
		questaoAlternativa33.setAlternativasE("Somente (I), (III) e (IV).");
		questaoAlternativa33.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa34 = new QuestaoAlternativa();
		questaoAlternativa34.setId(INICIOQUESTAO.longValue());
		questaoAlternativa34.setAno(ANO);
		questaoAlternativa34.setDescricao("Seja $A = a_1, . . . , a_n$ uma sequência de n números, todos distintos entre si. Dados $1 \\leq i < j \\leq n$, dizemos que o par $(i, j)$ é uma inversão em A se $a_j < a_i$. Qual o número máximo de inversões possível numa sequência de $n$ elementos?");
		questaoAlternativa34.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa34.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa34.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa34.setAlternativaCorreta("b");
		questaoAlternativa34.setAlternativaCorreta("b");
		questaoAlternativa34.setAlternativasA("$n$");
		questaoAlternativa34.setAlternativasB("$\\left(\\begin{array}{c}n \\newline 2\\end{array}\\right)$");
		questaoAlternativa34.setAlternativasC("$n - 1$");
		questaoAlternativa34.setAlternativasD("$n!$");
		questaoAlternativa34.setAlternativasE("$n^2$");
		questaoAlternativa34.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa35 = new QuestaoAlternativa();
		questaoAlternativa35.setId(INICIOQUESTAO.longValue());
		questaoAlternativa35.setAno(ANO);
		questaoAlternativa35.setDescricao("Em uma estrutura de arvóre binária de busca, foram inseridos os elementos “h”,“a”,“b”, “c”,“i”,“j”, nesta sequência. O tamanho do caminho entre um nó qualquer da arvóre e a raiz é dado pelo número de arestas neste caminho. Qual o tamanho do maior aminho na arvóre, após a inserção dos dados acima?");
		questaoAlternativa35.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa35.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa35.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa35.setAlternativaCorreta("e");
		questaoAlternativa35.setAlternativasA("2");
		questaoAlternativa35.setAlternativasB("6");
		questaoAlternativa35.setAlternativasC("4");
		questaoAlternativa35.setAlternativasD("5");
		questaoAlternativa35.setAlternativasE("3");
		questaoAlternativa35.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa36 = new QuestaoAlternativa();
		questaoAlternativa36.setId(INICIOQUESTAO.longValue());
		questaoAlternativa36.setAno(ANO);
		questaoAlternativa36.setDescricao("Quatro tarefas, A, B, C e D, estão prontas para serem executadas num único processador. Seus tempos de execução esperados são 9, 6, 3 e 5 segundos respectivamente. Em qual ordem eles devem ser executados para diminuir o tempo médio de resposta");
		questaoAlternativa36.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa36.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa36.setDisciplina(EDisciplina.SISTEMAS_OPERACIONAIS);
		questaoAlternativa36.setAlternativaCorreta("a");
		questaoAlternativa36.setAlternativasA("C, D, B, A");
		questaoAlternativa36.setAlternativasB("A, B, D, C");
		questaoAlternativa36.setAlternativasC("C, B, D, A");
		questaoAlternativa36.setAlternativasD("A, C, D, B");
		questaoAlternativa36.setAlternativasE("O tempo médio de resposta independe da ordem");
		questaoAlternativa36.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa37 = new QuestaoAlternativa();
		questaoAlternativa37.setId(INICIOQUESTAO.longValue());
		questaoAlternativa37.setAno(ANO);
		questaoAlternativa37.setDescricao("Qual das alternativas a seguir melhor define uma Região Crítica em Sistemas Operacionais?");
		questaoAlternativa37.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa37.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa37.setDisciplina(EDisciplina.SISTEMAS_OPERACIONAIS);
		questaoAlternativa37.setAlternativaCorreta("c");
		questaoAlternativa37.setAlternativasA("Um trecho de programa que deve ser executado em paralelo com a Região Crítica de outro programa.");
		questaoAlternativa37.setAlternativasB("Um trecho de programa cujas instruções podem ser executadas em paralelo e em qualquer ordem.");
		questaoAlternativa37.setAlternativasC("Um trecho de programa onde existe o compartilhamento de algum recurso que não permite o acesso concomitante por mais de um programa.");
		questaoAlternativa37.setAlternativasD("Um trecho de programa onde existe algum recurso cujo acesso é dado por uma prioridade");
		questaoAlternativa37.setAlternativasE("Um trecho de programa onde existe algum recurso a que somente o sistema operacional pode ter acesso.");
		questaoAlternativa37.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa38 = new QuestaoAlternativa();
		questaoAlternativa38.setId(INICIOQUESTAO.longValue());
		questaoAlternativa38.setAno(ANO);
		questaoAlternativa38.setDescricao("Árvores binárias podem ser usadas para guardar e recuperar informações com número de operações proporcional à altura da árvore. Quais das seguintes figuras representam árvores binárias de altura balanceada ou do tipo AVL (Adelson-Velski e Landis):");
		questaoAlternativa38.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa38.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa38.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa38.setAlternativaCorreta("c");
		questaoAlternativa38.setImagem(true);
		questaoAlternativa38.setImagemQuestao("");
		questaoAlternativa38.setAlternativasA("Somente (I) e (IV) são árores binárias AVL.");
		questaoAlternativa38.setAlternativasB("Somente (I) é árvore binária AVL.");
		questaoAlternativa38.setAlternativasC("Somente (I), (II) e (III) são árvores binárias AVL.");
		questaoAlternativa38.setAlternativasD("Somente (II) e (III) são árvores binárias AVL.");
		questaoAlternativa38.setAlternativasE("Todas (I), (II), (III) e (IV) são árvores binárias AVL.");
		questaoAlternativa38.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa39 = new QuestaoAlternativa();
		questaoAlternativa39.setId(INICIOQUESTAO.longValue());
		questaoAlternativa39.setAno(ANO);
		questaoAlternativa39.setDescricao("Os grafos $G = (V_G, E_G) \\,\\,e\\,\\, H = (V_H,E_H)$ são isomorfos. Assinale a alternativa que justifica esta afirmação.<IMAGEM = 39>");
		questaoAlternativa39.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa39.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa39.setDisciplina(EDisciplina.GRAFOS);
		questaoAlternativa39.setAlternativaCorreta("c");
		questaoAlternativa39.setAlternativasA("As sequências dos graus dos vértices de $G$ e $H$ são iguais.");
		questaoAlternativa39.setAlternativasB("Os grafos têm o mesmo número de vértices e o mesmo número de arestas.");
		questaoAlternativa39.setAlternativasC("Existe uma bijeção de $V_G$ em $V_H$ que preserva adjacências.");
		questaoAlternativa39.setAlternativasD("Cada vértice de $G$ e de $H$ pertence a exatamente quatro triângulos distintos.");
		questaoAlternativa39.setAlternativasE("Ambos os grafos admitem um circuito que passa por cada aresta exatamente uma vez.");
		questaoAlternativa39.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa40 = new QuestaoAlternativa();
		questaoAlternativa40.setId(INICIOQUESTAO.longValue());
		questaoAlternativa40.setAno(ANO);
		questaoAlternativa40.setDescricao("Dadas as seguintes afirmações "
				+ "$\\newline$(I) Qualquer grafo conexo com $n$ vértices deve ter pelo menos $n − 1$ arestas. "
				+ "$\\newline$(II) O grafo bipartido completo $K_{m,n}$ é Euleriano desde que $m$ e $n$ sejam ímpares. "
				+ "$\\newline$(III) Em um grafo o número de vértices de grau ímpar é sempre par. "
				+ "$\\newline$São verdadeiras:");
		questaoAlternativa40.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa40.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa40.setDisciplina(EDisciplina.GRAFOS);
		questaoAlternativa40.setAlternativaCorreta("b");
		questaoAlternativa40.setAlternativasA("Somente a afirmação (I).");
		questaoAlternativa40.setAlternativasB("Somente as afirmações (I) e (III).");
		questaoAlternativa40.setAlternativasC("Somente as afirmações (II) e (III).");
		questaoAlternativa40.setAlternativasD("Somente as afirmações (I) e (II).");
		questaoAlternativa40.setAlternativasE("Todas as afirmações.");
		questaoAlternativa40.setNumeroQuestao(NUMEROQUESTAO);


		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa41 = new QuestaoAlternativa();
		questaoAlternativa41.setId(INICIOQUESTAO.longValue());
		questaoAlternativa41.setAno(ANO);
		questaoAlternativa41.setDescricao("Qual das seguintes afirmações é verdadeira?");
		questaoAlternativa41.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa41.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa41.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa41.setAlternativaCorreta("e");
		questaoAlternativa41.setAlternativasA("Nem toda relação que está na FNBC (Forma Normal de “Boyce-Codd”) está também na 3FN (Terceira Forma Normal).");
		questaoAlternativa41.setAlternativasB("Se a relação R possui somente uma chave candidata, ela sempre está na FNBC.");
		questaoAlternativa41.setAlternativasC("Se a relação R está na 3FN e toda chave candidata é simples, então não podemos afirmar que R esá na FNBC");
		questaoAlternativa41.setAlternativasD("Uma dependência funcional multivalorada na relação R, na forma X$\\twoheadrightarrow$Y, é dita trivial somente se XY = R");
		questaoAlternativa41.setAlternativasE("Uma dependência funcional multivalorada na relação R, na forma X$\\twoheadrightarrow$Y, é dita trivial se Y$\\subseteq$X ou XY = R");
		questaoAlternativa41.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa42 = new QuestaoAlternativa();
		questaoAlternativa42.setId(INICIOQUESTAO.longValue());
		questaoAlternativa42.setAno(ANO);
		questaoAlternativa42.setDescricao("Em um banco de dados relacional, considere os esquemas de relação:\r\n" + 
				"$\\newline$- Pessoa ($\\underline{CPF}$, Profissao)\r\n" + 
				"$\\newline$- Trabalha ($\\underline{CPF}$, $\\underline{CGC}$, Periodo)\r\n" + 
				"$\\newline$- Firma ($\\underline{CGC}$, nome, endereco)\r\n" + 
				"$\\newline$ e considere as operações de álgebra relacional União, Interseção, Diferença, Junção Natural, Projeção e Seleção. A consulta “Qual a profissão das pessoas que trabalham em alguma firma de nome X” exige ao menos a seguinte operação para ser processada:");
		questaoAlternativa42.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa42.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa42.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa42.setAlternativaCorreta("b");
		questaoAlternativa42.setAlternativasA("Interseção de Pessoa, Trabalha e Firma.");
		questaoAlternativa42.setAlternativasB("Junção Natural de Pessoa, Trabalha e Firma");
		questaoAlternativa42.setAlternativasC("União de Pessoa, Trabalha e Firma.");
		questaoAlternativa42.setAlternativasD("Seleção de Pessoa, Trabalha e Firma.");
		questaoAlternativa42.setAlternativasE("Nada pode ser afirmado porque os dados não foram fornecidos.");
		questaoAlternativa42.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa43 = new QuestaoAlternativa();
		questaoAlternativa43.setId(INICIOQUESTAO.longValue());
		questaoAlternativa43.setAno(ANO);
		questaoAlternativa43.setDescricao("Em um banco de dados relacional, considere os esquemas de relação:\r\n" + 
				"$\\newline$- Pessoa ($\\underline{CPF}$, Profissao)\r\n" + 
				"$\\newline$- Trabalha ($\\underline{CPF}$, $\\underline{CGC}$, Periodo)\r\n" + 
				"$\\newline$- Firma ($\\underline{CGC}$, nome, endereco)\r\n" + 
				"$\\newline$e considere as operações de álgebra relacional União, Interseção, Diferença, Junção Natural, Projeção e Seleção.\r\n" + 
				"Considere que cada relação tenha 1 milhão de tuplas e que existe um índice no banco de dados para cada chave de relação. Considere as consultas a seguir, supondo que antes do processamento de cada uma nenhum pedaço das relações já esteja na memória.\r\n" + 
				"$\\newline$C1 Quais as profissões de todas as pessoas?\r\n" + 
				"$\\newline$C2 Qual a profissão da pessoa de CPF = ’X’, onde X é um CPF válido?\r\n" + 
				"$\\newline$C3 Qual o endereço da firma de CGC diferente de ’Z’, onde Z é um CGC válido?\r\n" + 
				"$\\newline$C4 Quais os períodos na década 1990-1999 em que ninguém trabalhou, onde o banco de dados contém informações entre 1980 e 2005?\r\n" + 
				"$\\newline$Qual das consultas acima é mais rápida em termos de operações de E/S? Assinale a afirmação correta.");
		questaoAlternativa43.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa43.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa43.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa43.setAlternativaCorreta("b");
		questaoAlternativa43.setAlternativasA("A consulta C1 porque só exige uma projeção na relação Pessoa sem precisar olhar o índice.");
		questaoAlternativa43.setAlternativasB("A consulta C2 porque pode ser processada diretamente via índice de CPF para acessar Pessoa.");
		questaoAlternativa43.setAlternativasC("A consulta C3 porque pode ser processada sequencialmente sobre a relação Firma descartando-se a tupla com CGC de valor Z.");
		questaoAlternativa43.setAlternativasD("A consulta C4 porque requer apenas selecionar os períodos não cadastrados na relação Trabalha.");
		questaoAlternativa43.setAlternativasE("Nada se pode afirmar porque rapidez, neste caso, não pode ser medida.");
		questaoAlternativa43.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa44 = new QuestaoAlternativa();
		questaoAlternativa44.setId(INICIOQUESTAO.longValue());
		questaoAlternativa44.setAno(ANO);
		questaoAlternativa44.setDescricao("Sejam T1 e T2 duas transações sendo processadas por um SGBD. Os termos lockR e lockW correspondem a pedidos de tranca de leitura e gravação, respectivamente, e Unlock liberação de tranca. A, B e C são dados do banco de dados. O trecho a seguir é um pedaço do escalonamento de T1 e T2 definido pelo escalonador do SGBD (o trecho não está completo):\r\n" + 
						"$\\newline$start(T1); lockR(T1, A); read (T1, A); start(T2);\r\n" + 
						"$\\newline$lockR(T2, B); read (T2, B); lockW (T1, C); read(T1,C);\r\n" + 
						"$\\newline$write(T1,C); unlock(T1, C); lockW (T1, B); lockW (T2, A); lockR(T2,C);\r\n" + 
						"$\\newline$...\r\n" + 
						"$\\newline$Considere as seguintes afirmações:\r\n" + 
						"$\\newline$(I) O trecho mostra um exemplo de aplicação do protocolo 2PL (two phase lock ou tranca em 2 fases).\r\n" + 
						"$\\newline$(II) O trecho viola o protocolo 2PL.\r\n" + 
						"$\\newline$(III) O trecho mostra um exemplo em que há deadlock (impasse) entre T1 e T2.\r\n" + 
						"$\\newline$(IV) O trecho não tem deadlock entre T1 e T2.\r\n" + 
						"$\\newline$(V) Nada se pode afirmar.\r\n" + 
						"$\\newline$Estão corretas as afirmações:");
		questaoAlternativa44.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa44.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa44.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa44.setAlternativaCorreta("c");
		questaoAlternativa44.setAlternativasA("Somente (I) e (III)");
		questaoAlternativa44.setAlternativasB("Somente (II) e (IV)");
		questaoAlternativa44.setAlternativasC("Somente (II) e (III)");
		questaoAlternativa44.setAlternativasD("Somente (I) e (IV)");
		questaoAlternativa44.setAlternativasE("Somente (V)");
		questaoAlternativa44.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa45 = new QuestaoAlternativa();
		questaoAlternativa45.setId(INICIOQUESTAO.longValue());
		questaoAlternativa45.setAno(ANO);
		questaoAlternativa45.setDescricao("No processo de geração de um código executável (em linguagem de máquina) a partir de um programa fonte, escrito em linguagem de alto nível (por exemplo, C) o programa original passa por transformações e análises que são realizadas em diversas fases. De forma simplificada, pode-se dividi-las nas oito (8) fases apresentadas, em ordem alfabética, a seguir:\r\n" + 
				"$\\newline$(A) Alocação de Registradores\r\n" + 
				"$\\newline$(B) Análise Léxica\r\n" + 
				"$\\newline$(C) Análise Sintática\r\n" + 
				"$\\newline$(D) Emissão de Código Assembly\r\n" + 
				"$\\newline$(E) Link Edição\r\n" + 
				"$\\newline$(F) Montagem\r\n" + 
				"$\\newline$(G) Seleção de Instruções\r\n" + 
				"$\\newline$(H) Verificação de Tipos e Símbolos\r\n" + 
				"$\\newline$Durante o processo de geração do código executável a partir do código fonte em qual ordem essas fases são possíveis de serem executadas?");
		questaoAlternativa45.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa45.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa45.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa45.setAlternativaCorreta("a");
		questaoAlternativa45.setAlternativasA("B C H G A D F E");
		questaoAlternativa45.setAlternativasB("C B H G A D F E");
		questaoAlternativa45.setAlternativasC("B C H G A D E F");
		questaoAlternativa45.setAlternativasD("B H C G A D F E");
		questaoAlternativa45.setAlternativasE("B C H A G D E F");
		questaoAlternativa45.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa46 = new QuestaoAlternativa();
		questaoAlternativa46.setId(INICIOQUESTAO.longValue());
		questaoAlternativa46.setAno(ANO);
		questaoAlternativa46.setDescricao("No que diz respeito à geração de imagens por RayTracing, qual das afirmações a seguir não é verdadeira?");
		questaoAlternativa46.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa46.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa46.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa46.setAlternativaCorreta("a");
		questaoAlternativa46.setAlternativasA("O número de raios lançados independe do número de objetos da cena.");
		questaoAlternativa46.setAlternativasB("A refração e a reflexão da luz precisam ser tratadas neste método.");
		questaoAlternativa46.setAlternativasC("O lançamento de raios é dependente da posição da câmera.");
		questaoAlternativa46.setAlternativasD("Em algumas variações do método, o CALCULO das sombras é feito a parte.");
		questaoAlternativa46.setAlternativasE("Este método pode ser facilmente paralelizado.");
		questaoAlternativa46.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa47 = new QuestaoAlternativa();
		questaoAlternativa47.setId(INICIOQUESTAO.longValue());
		questaoAlternativa47.setAno(ANO);
		questaoAlternativa47.setDescricao("Requisitos são capacidades e condições para as quais um sistema deve ter conformidade.\r\n" + 
				"Analise as afirmações a seguir:\r\n" + 
				"$\\newline$(I) No Processo Unificado, requisitos são categorizados de acordo com o modelo FURPS+, onde o U do acrônimo representa requisitos de usabilidade.\r\n" + 
				"$\\newline$(II) Casos de uso são documentos em forma de texto, não diagramas, e modelagem de casos de uso é basicamente um ato de escrever estórias de uso de um sistema.\r\n" + 
				"$\\newline$(III) UML (Unified Modeling Language) provê notação para se construir o diagrama de casos de uso, que ilustra os nomes dos casos de uso, atores e seus relacionamentos.\r\n" + 
				"$\\newline$Considerando-se as três afirmações (I), (II) e (III) acima, identifique a única alternativa válida:");
		questaoAlternativa47.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa47.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa47.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa47.setAlternativaCorreta("d");
		questaoAlternativa47.setAlternativasA("Somente as afirmações (I) e (II) estão corretas.");
		questaoAlternativa47.setAlternativasB("Somente as afirmações (II) e (III) estão corretas.");
		questaoAlternativa47.setAlternativasC("Somente as afirmações (I) e (III) estão corretas.");
		questaoAlternativa47.setAlternativasD("As afirmações (I), (II) e (III) estão corretas.");
		questaoAlternativa47.setAlternativasE("Somente a afirmação (III) está correta.");
		questaoAlternativa47.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa48 = new QuestaoAlternativa();
		questaoAlternativa48.setId(INICIOQUESTAO.longValue());
		questaoAlternativa48.setAno(ANO);
		questaoAlternativa48.setDescricao("Qual das alternativas a seguir não representa um artefato da disciplina de Requisitos do Processo Unificado:");
		questaoAlternativa48.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa48.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa48.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa48.setAlternativaCorreta("b");
		questaoAlternativa48.setAlternativasA("Modelo de Casos de Uso.");
		questaoAlternativa48.setAlternativasB("Diagrama de Sequência de Sistema");
		questaoAlternativa48.setAlternativasC("Modelo do Domínio.");
		questaoAlternativa48.setAlternativasD("Documento de Visão.");
		questaoAlternativa48.setAlternativasE("Glossário.");
		questaoAlternativa48.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa49 = new QuestaoAlternativa();
		questaoAlternativa49.setId(INICIOQUESTAO.longValue());
		questaoAlternativa49.setAno(ANO);
		questaoAlternativa49.setDescricao("Considere as seguintes afirmações sobre o objetivo da atividade de validação de software:\r\n" + 
				"$\\newline$(I) Verificar se o produto está sendo corretamente construído.\r\n" + 
				"$\\newline$(II) Verificar se o produto está sendo corretamente avaliado.\r\n" + 
				"$\\newline$(III) Verificar se o produto correto está  sendo construído.\r\n" + 
				"$\\newline$Quais são as afirmações verdadeiras?");
		questaoAlternativa49.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa49.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa49.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa49.setAlternativaCorreta("b");
		questaoAlternativa49.setAlternativasA("Somente a afirmação (II).");
		questaoAlternativa49.setAlternativasB("Somente a afirmação (III).");
		questaoAlternativa49.setAlternativasC("Somente as afirmações (I) e (II).");
		questaoAlternativa49.setAlternativasD("Somente as afirmações (II) e (III).");
		questaoAlternativa49.setAlternativasE("Afirmações (I), (II) e (III).");
		questaoAlternativa49.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa50 = new QuestaoAlternativa();
		questaoAlternativa50.setId(INICIOQUESTAO.longValue());
		questaoAlternativa50.setAno(ANO);
		questaoAlternativa50.setDescricao("Considere as seguintes afirmações sobre o diagrama de classes e outros modelos UML (Unified Modeling Language):\r\n" + 
						"$\\newline$(I) O diagrama de classes pode representar as classes sob diferentes perspectivas, tais como a conceitual, a de especificação e a de implementação.\r\n" + 
						"$\\newline$(II) O diagrama de classes, diferentemente do diagrama de estados, é estático.\r\n" + 
						"$\\newline$(III) O diagrama de classes, diferentemente do diagrama de atividades, não contém mensagens.\r\n" + 
						"$\\newline$Quais são as afirmações verdadeiras?");
		questaoAlternativa50.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa50.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa50.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa50.setAlternativaCorreta("e");
		questaoAlternativa50.setAlternativasA("Somente a afirmação (I).");
		questaoAlternativa50.setAlternativasB("Somente a afirmação (II).");
		questaoAlternativa50.setAlternativasC("Somente as afirmações (I) e (III).");
		questaoAlternativa50.setAlternativasD("Somente as afirmações (II) e (III).");
		questaoAlternativa50.setAlternativasE("Afirmações (I), (II) e (III).");
		questaoAlternativa50.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa51 = new QuestaoAlternativa();
		questaoAlternativa51.setId(INICIOQUESTAO.longValue());
		questaoAlternativa51.setAno(ANO);
		questaoAlternativa51.setDescricao("A Atividade de Teste é considerada uma atividade dinâmica, pois implica na execução do código. Ela é composta das etapas de planejamento, definição dos casos de teste, execução dos casos de teste e análise dos resultados. A Atividade de Teste deve iniciarse na fase:");
		questaoAlternativa51.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa51.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa51.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa51.setAlternativaCorreta("c");
		questaoAlternativa51.setAlternativasA("de projeto.");
		questaoAlternativa51.setAlternativasB("de codificação");
		questaoAlternativa51.setAlternativasC("inicial de desenvolcimento.");
		questaoAlternativa51.setAlternativasD("de análise de resultados.");
		questaoAlternativa51.setAlternativasE("de validação.");
		questaoAlternativa51.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa52 = new QuestaoAlternativa();
		questaoAlternativa52.setId(INICIOQUESTAO.longValue());
		questaoAlternativa52.setAno(ANO);
		questaoAlternativa52.setDescricao("Dentre as definições a seguir, conceitos de computação evolutiva da Inteligência Artificial, qual delas é incorreta?");
		questaoAlternativa52.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa52.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa52.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa52.setAlternativaCorreta("c");
		questaoAlternativa52.setAlternativasA("A computação evolutiva deve ser entendida como um conjunto de técnicas e procedimentos genéricos e adaptáveis, a serem aplicados na solução de problemas complexos, para os quais outras técnicas conhecidas são ineficazes ou nem sequer são aplicáveis.");
		questaoAlternativa52.setAlternativasB("Os sistemas baseados em computação evolutiva mantêm uma população de soluções potenciais, aplicam processos de seleção baseados na adaptação de um indivíduo e também empregam outros operadores “genéticos.”");
		questaoAlternativa52.setAlternativasC("A roleta é um método de seleção no qual se atribui a cada indivíduo de uma população uma probabilidade de passar para a próxima geração proporcional ao seu fitness, medido em relação á somatória do fitness de todos os indivíduos da população. Assim, algoritmos genéticos são métodos de busca puramente aleatórios.");
		questaoAlternativa52.setAlternativasD("Os algoritmos genéticos empregam uma terminologia originada da teoria da evolução natural e da genética. Um indivíduo da população é representado por um único cromossomo, o qual contém a codificação (genótipo) de uma possível solução do problema (fenótipo).");
		questaoAlternativa52.setAlternativasE("O processo de evolução executado por um algoritmo genético corresponde a um procedimento de busca em um espaçoo de soluções potenciais para o problema.");
		questaoAlternativa52.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa53 = new QuestaoAlternativa();
		questaoAlternativa53.setId(INICIOQUESTAO.longValue());
		questaoAlternativa53.setAno(ANO);
		questaoAlternativa53.setDescricao("Considere as cláusulas: L(x, y, g(A, y), D) e L(y, C, g(x, u), z) onde x, y, z, u são variáveis, A, C, D são constantes, g é função e L é predicado. A aplicação das substituições unificadoras mais gerais para a unificação das cláusulas resulta em:");
		questaoAlternativa53.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa53.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa53.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa53.setAlternativaCorreta("c");
		questaoAlternativa53.setAlternativasA("L(C, C, g(A, C), D)");
		questaoAlternativa53.setAlternativasB("L(x, u, g(A, u), D)");
		questaoAlternativa53.setAlternativasC("L(x, C, g(A, C), D)");
		questaoAlternativa53.setAlternativasD("L(u, C, g(A, u), D)");
		questaoAlternativa53.setAlternativasE("L(A, A, g(A, A), D)");
		questaoAlternativa53.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa54 = new QuestaoAlternativa();
		questaoAlternativa54.setId(INICIOQUESTAO.longValue());
		questaoAlternativa54.setAno(ANO);
		questaoAlternativa54
				.setDescricao("Considere $h(x)$ como uma função heurística que define a distância de $x$ até a meta;considere ainda $h^r(x)$ como a distância real de $x$ até a meta. $h(x)$ é dita admissível se e somente se:");
		questaoAlternativa54.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa54.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa54.setDisciplina(EDisciplina.INTELIGENCIA_ARTIFICIAL);
		questaoAlternativa54.setAlternativaCorreta("c");
		questaoAlternativa54.setAlternativasA("$\\exists \\,n\\, h(n) \\leq h^r(n)$");
		questaoAlternativa54.setAlternativasB("$\\forall\\,n\\,\\,h(n) \\leq h^r(n)$");
		questaoAlternativa54.setAlternativasC("$\\forall\\,n\\,\\,h(n) > h^r(n)$");
		questaoAlternativa54.setAlternativasD("$\\exists \\,n\\,\\,h(n) > h^r(n)$");
		questaoAlternativa54.setAlternativasE("$\\exists \\,n\\,\\,h(n) < h^r(n)$");
		questaoAlternativa54.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa55 = new QuestaoAlternativa();
		questaoAlternativa55.setId(INICIOQUESTAO.longValue());
		questaoAlternativa55.setAno(ANO);
		questaoAlternativa55.setDescricao("Inspeção de Usabilidade é o nome genérico para um conjunto de métodos baseados em se ter avaliadores inspecionando ou examinando aspectos relacionados à usabilidade de uma interface de usuário. Qual das alternativas a seguir não é um desses métodos:");
		questaoAlternativa55.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa55.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa55.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa55.setAlternativaCorreta("d");
		questaoAlternativa55.setAlternativasA("Avaliação Heurística.");
		questaoAlternativa55.setAlternativasB("Walktrough Pluralísticos.");
		questaoAlternativa55.setAlternativasC("Walktrough Cognitivo.");
		questaoAlternativa55.setAlternativasD("Testes de Usabilidade.");
		questaoAlternativa55.setAlternativasE("Revisões de Guidelines.");
		questaoAlternativa55.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa56 = new QuestaoAlternativa();
		questaoAlternativa56.setId(INICIOQUESTAO.longValue());
		questaoAlternativa56.setAno(ANO);
		questaoAlternativa56.setDescricao("Modelos gráficos, desenvolvidos para uso humano em displays convencionais devem ser representados em uma superfície bi-dimensional. As principais pistas perceptuais de profundidade que podem ser usadas para representar objetos tridimensionais em uma tela bidimensional são:\r\n" + 
				"$\\newline$(I) tamanho e textura;\r\n" + 
				"$\\newline$(II) contraste, claridade e brilho;\r\n" + 
				"$\\newline$(III) interposição, sombra e paralaxe do movimento.\r\n" + 
				"$\\newline$Considerando-se as três afirmações (I), (II) e (III) acima, identifique a única alternativa\r\n" + 
				"válida:");
		questaoAlternativa56.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa56.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa56.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa56.setAlternativaCorreta("d");
		questaoAlternativa56.setAlternativasA("Somente as afirmações (I) e (II) estão corretas.");
		questaoAlternativa56.setAlternativasB("Somente as afirmações (II) e (III) estão corretas.");
		questaoAlternativa56.setAlternativasC("Somente as afirmações (I) e (III) estão corretas.");
		questaoAlternativa56.setAlternativasD("As afirmações (I), (II) e (III) estão corretas.");
		questaoAlternativa56.setAlternativasE("Somente a afirmação (III) está correta.");
		questaoAlternativa56.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa57 = new QuestaoAlternativa();
		questaoAlternativa57.setId(INICIOQUESTAO.longValue());
		questaoAlternativa57.setAno(ANO);
		questaoAlternativa57.setDescricao("O desenvolvimento de protótipos de sistemas e suas interfaces de usuário possibilitam aos designers e desenvolvedores experimentarem ideias de design e receberem feedback do usuário em diferentes etapas do design e desenvolvimento. Vários tipos de prototipação são utilizados:\r\n" + 
				"$\\newline$(I) Na prototipação vertical, a interface de usuário é mostrada ao usuário em uma série de representações pictóricas da interface chamadas storyboards;\r\n" + 
				"$\\newline$(II) Na prototipação dirigida (Chauffeured Prototyping), o usuário observa enquanto uma outra pessoa, usualmente um membro da equipe de desenvolvimento, interage com o sistema;\r\n" + 
				"$\\newline$(III) Na prototipação Mágico de Oz, o usuário interage com a interface do sistema, mas em lugar de respostas do sistema, estas são enviadas por um desenvolvedor sentado em outra máquina.\r\n" + 
				"$\\newline$Considerando-se as três afirmações acima, identifique a única alternativa válida:");
		questaoAlternativa57.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa57.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa57.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa57.setAlternativaCorreta("b");
		questaoAlternativa57.setAlternativasA("Somente as afirmações (I) e (II) estão corretas.");
		questaoAlternativa57.setAlternativasB("Somente as afirmações (II) e (III) estão corretas.");
		questaoAlternativa57.setAlternativasC("Somente as afirmações (I) e (III) estão corretas.");
		questaoAlternativa57.setAlternativasD("As afirmações (I), (II) e (III) estão corretas.");
		questaoAlternativa57.setAlternativasE("Somente a afirmação (III) está correta.");
		questaoAlternativa57.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa58 = new QuestaoAlternativa();
		questaoAlternativa58.setId(INICIOQUESTAO.longValue());
		questaoAlternativa58.setAno(ANO);
		questaoAlternativa58.setDescricao("Considere o esquema abaixo para download de um fluxo de áudio na Internet. Considere também que o Media Server envia o fluxo de áudio a uma taxa maior do que a taxa do Media Player conforme a imagem abaixo.<IMAGEM = 58> Na abordagem de servidor push, o Media Player envia uma mensagem para o Media Server quando o buffer atinge o MAA para o Media Server parar temporariamente de transmitir o fluxo, e outra mensagem quando o buffer esvazia até o MAB para o Media Server começar a enviar o fluxo novamente. Supondo que o Media Server está a uma distância de 100 ms do Media Player, que o Media Server transmite a 1,6 Mbps e que o Media Player tem um buffer de 1 MB, que condições as posições de MAA e MAB devem satisfazer?");
		questaoAlternativa58.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa58.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa58.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa58.setAlternativaCorreta("c");
		questaoAlternativa58.setImagem(true);
		questaoAlternativa58.setImagemQuestao("");
		questaoAlternativa58.setAlternativasA("MAA $\\geq$ 40 KB e MAB $\\leq$ 980 KB.");
		questaoAlternativa58.setAlternativasB("MAA $\\geq$ 20 KB e MAB $\\leq$ 960 KB.");
		questaoAlternativa58.setAlternativasC("MAA $\\geq$ 40 KB e MAB $\\leq$ 960 KB.");
		questaoAlternativa58.setAlternativasD("MAA $\\geq$ 20 KB e MAB $\\leq$ 980 KB.");
		questaoAlternativa58.setAlternativasE("MAA $\\geq$ 20 KB e MAB $\\leq$ 1 MB.");
		questaoAlternativa58.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa59 = new QuestaoAlternativa();
		questaoAlternativa59.setId(INICIOQUESTAO.longValue());
		questaoAlternativa59.setAno(ANO);
		questaoAlternativa59.setDescricao("O processo de análise de imagens é uma sequência de etapas que são iniciadas a partir da definição do problema. A sequência correta destas etapas é:");
		questaoAlternativa59.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa59.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa59.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa59.setAlternativaCorreta("b");
		questaoAlternativa59.setAlternativasA("pré-processamento, aquisição, segmentação, representação, reconhecimento.");
		questaoAlternativa59.setAlternativasB("aquisição, pré-processamento, segmentação, representação, reconhecimento.");
		questaoAlternativa59.setAlternativasC("aquisição, pré-processamento, representação, segmentação, reconhecimento.");
		questaoAlternativa59.setAlternativasD("aquisição, representação, pré-processamento, segmentação, reconhecimento.");
		questaoAlternativa59.setAlternativasE("pré-processamento, aquisição, representação, segmentação, reconhecimento.");
		questaoAlternativa59.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa60 = new QuestaoAlternativa();
		questaoAlternativa60.setId(INICIOQUESTAO.longValue());
		questaoAlternativa60.setAno(ANO);
		questaoAlternativa60.setDescricao("O termo imagem se refere a uma função bidimensional de intensidade de luz, denotada por $f(x, y)$, onde o valor ou amplitude de $f$ nas coordenadas espaciais $(x, y)$ representa a intensidade (brilho) da imagem neste ponto. Para que uma imagem possa ser processada num computador, a função $f(x, y)$ deve ser discretizada tanto espacialmente quanto em amplitude. Estes dois processos recebem as seguintes denominações, respectivamente:");
		questaoAlternativa60.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa60.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa60.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa60.setAlternativaCorreta("d");
		questaoAlternativa60.setAlternativasA("translação e escala.");
		questaoAlternativa60.setAlternativasB("resolução e escala.");
		questaoAlternativa60.setAlternativasC("resolução e ampliação.");
		questaoAlternativa60.setAlternativasD("amostragem e quantização.");
		questaoAlternativa60.setAlternativasE("resolução e quantização.");
		questaoAlternativa60.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa61 = new QuestaoAlternativa();
		questaoAlternativa61.setId(INICIOQUESTAO.longValue());
		questaoAlternativa61.setAno(ANO);
		questaoAlternativa61.setDescricao("Qual a capacidade máxima segundo o Teorema de Nyquist de um canal de 2 MHz semruído, se sinais de 8 (oito) níveis são transmitidos?");
		questaoAlternativa61.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa61.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa61.setDisciplina(EDisciplina.INTELIGENCIA_ARTIFICIAL);
		questaoAlternativa61.setAlternativaCorreta("d");
		questaoAlternativa61.setAlternativasA("4 Mbps");
		questaoAlternativa61.setAlternativasB("6 Mbps");
		questaoAlternativa61.setAlternativasC("8 Mbps");
		questaoAlternativa61.setAlternativasD("12 Mbps");
		questaoAlternativa61.setAlternativasE("16 Mbps");
		questaoAlternativa61.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa62 = new QuestaoAlternativa();
		questaoAlternativa62.setId(INICIOQUESTAO.longValue());
		questaoAlternativa62.setAno(ANO);
		questaoAlternativa62.setDescricao("A aplicação A deseja enviar a mensagem m para a aplicação B com as propriedades de confidencialidade e autenticação de seu conteúdo, usando chaves assimétricas. A possui a chave pública $PUB_A$ e a chave privada $PRI_A$, e B possui a chave pública $PUB_B$ e a chave privada $PRI_B$. Para isso:\r\n" + 
				"$\\newline$(I) A criptografa m usando $PUB_B$ e depois $PRI_A$.\r\n" + 
				"$\\newline$(II) A criptografa m usando $PUB_B$ e depois $PUB_A$.\r\n" + 
				"$\\newline$(III) A criptografa m usando $PRI_A$ e depois $PUB_B$.\r\n" + 
				"$\\newline$(IV) A criptografa m usando $PUB_A$ e");
		questaoAlternativa62.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa62.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa62.setDisciplina(EDisciplina.SEGURANÇA_COMPUTACIONAL);
		questaoAlternativa62.setAlternativaCorreta("c");
		questaoAlternativa62.setAlternativasA("Somente (I) e (II).");
		questaoAlternativa62.setAlternativasB("Somente (II) e (IV).");
		questaoAlternativa62.setAlternativasC("Somente (I) e (III).");
		questaoAlternativa62.setAlternativasD("Somente (III) e (IV).");
		questaoAlternativa62.setAlternativasE("Todas as alternativas.");
		questaoAlternativa62.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa63 = new QuestaoAlternativa();
		questaoAlternativa63.setId(INICIOQUESTAO.longValue());
		questaoAlternativa63.setAno(ANO);
		questaoAlternativa63.setDescricao("Os protocolos de transporte atribuem a cada serviço um identificador único, o qual é empregado para encaminhar uma requisição de um aplicativo cliente ao processo servidor correto. Nos protocolos de transporte TCP e UDP, como esse identificador se denomina?");
		questaoAlternativa63.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa63.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa63.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa63.setAlternativaCorreta("b");
		questaoAlternativa63.setAlternativasA("Endereço IP.");
		questaoAlternativa63.setAlternativasB("Porta.");
		questaoAlternativa63.setAlternativasC("Conexão");
		questaoAlternativa63.setAlternativasD("Indentificador do processo(PID).");
		questaoAlternativa63.setAlternativasE("Protocolo de aplicação.");
		questaoAlternativa63.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa64 = new QuestaoAlternativa();
		questaoAlternativa64.setId(INICIOQUESTAO.longValue());
		questaoAlternativa64.setAno(ANO);
		questaoAlternativa64.setDescricao("O DNS (Domain Name System) é um serviço de diretórios na Internet que:");
		questaoAlternativa64.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa64.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa64.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa64.setAlternativaCorreta("a");
		questaoAlternativa64.setAlternativasA("Traduz o nome de um hospedeiro (host) para seu endereço IP.");
		questaoAlternativa64.setAlternativasB("Traduz o nome de um hospedeiro (host) para seu endereço IP.");
		questaoAlternativa64.setAlternativasC("Localiza a instituição à qual um dado host pertence.");
		questaoAlternativa64.setAlternativasD("Retorna a porta da conexão TCP do host.");
		questaoAlternativa64.setAlternativasE("Traduz o endereço IP de um hospedeiro para um nome de domínio na Internet.");
		questaoAlternativa64.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa65 = new QuestaoAlternativa();
		questaoAlternativa65.setId(INICIOQUESTAO.longValue());
		questaoAlternativa65.setAno(ANO);
		questaoAlternativa65.setDescricao("Um dos mecanismos de congestionamento na rede é o que utiliza temporizadores de transmissão e duas variáveis chamadas de: Janela de Congestionamento e Patamar. A Janela de Congestionamento impõe um limite à quantidade de tráfego que um host pode enviar dentro de uma conexão. O Patamar é uma variável que regula o crescimento da Janela de Congestionamento durante as transmissões daquela conexão. Assinale a alternativa correta:");
		questaoAlternativa65.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa65.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa65.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa65.setAlternativaCorreta("b");
		questaoAlternativa65.setAlternativasA("A quantidade de mensagens não confirmadas na transmissão, num dado instante, deve ser superior ao mínimo entre a Janela de Congestionamento e a Janela de Recepção desta conexão.");
		questaoAlternativa65.setAlternativasB("A Janela de Congestionamento dobra de tamanho (cresce exponencialmente) quando a confirmação das mensagens enviadas ocorre antes dos temporizadores de retransmissão se esgotarem (time-out), até o limite do Patamar..");
		questaoAlternativa65.setAlternativasC("Após exceder o valor de Patamar ainda sem esgotar os temporizadores, a janela decresce linearmente.");
		questaoAlternativa65.setAlternativasD("Quando excede o valor de Patamar e esgotam os temporizadores, a janela decresce exponencialmente.");
		questaoAlternativa65.setAlternativasE("Todas as alternativas estão corretas.");
		questaoAlternativa65.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa66 = new QuestaoAlternativa();
		questaoAlternativa66.setId(INICIOQUESTAO.longValue());
		questaoAlternativa66.setAno(ANO);
		questaoAlternativa66.setDescricao("Algoritmos de roteamento são o meio que um roteador utiliza para encaminhar mensagens na camada de rede. Assinale a alternativa incorreta.");
		questaoAlternativa66.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa66.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa66.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa66.setAlternativaCorreta("b");
		questaoAlternativa66.setAlternativasA("Nos algoritmos de roteamento estáticos as rotas são determinadas via tabelas definidas a priori e fixadas para o roteador, em geral manualmente.");
		questaoAlternativa66.setAlternativasB("No roteamento de Estado de Enlace (Link State), os valores dos enlaces são calculados pelo projetista da rede e os roteadores atualizam suas tabelas por estes valores.");
		questaoAlternativa66.setAlternativasC("No roteamento por Vetor de Distância (Distance Vector), as tabelas de roteamento definidas pelos roteadores vizinhos são repassadas periodicamente a cada roteador para obteção de sua própria tabela.");
		questaoAlternativa66.setAlternativasD("Algoritmos de roteamento buscam estabelecer o caminho de menor custo entre dois hosts através do CALCULO dos custos acumulados mínimos entre os enlaces disponíveis, dada a topologia da rede.");
		questaoAlternativa66.setAlternativasE("O OSPF é um exemplo de protocolo de roteamento baseado em Estado de Enlace e o BGP é um exemplo de protocolo de roteamento baseado em Vetor de Distâncias.");
		questaoAlternativa66.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa67 = new QuestaoAlternativa();
		questaoAlternativa67.setId(INICIOQUESTAO.longValue());
		questaoAlternativa67.setAno(ANO);
		questaoAlternativa67.setDescricao("Sejam as afirmações:\r\n" + 
				"$\\newline$(I) O HTTP e o FTP são protocolos da camada de aplicação e utilizam o protocolo de transporte TCP.\r\n" + 
				"$\\newline$(II) Ambos (HTTP e FTP) utilizam duas conexões TCP, uma para controle da transferência e outra para envio dos dados transferidos (controle fora da banda).\r\n" + 
				"$\\newline$(III) O HTTP pode usar conexões não persistentes e persistentes. O HTTP/1.0 usa conexões não persistentes. O modo default do HTTP/1.1 usa conexões persistentes.\r\n" + 
				"$\\newline$Dadas estas três afirmações, indique qual a alternativa correta:");
		questaoAlternativa67.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa67.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa67.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa67.setAlternativaCorreta("d");
		questaoAlternativa67.setAlternativasA("(I), (II) e (III) são verdadeiras.");
		questaoAlternativa67.setAlternativasB("Somente (I) e (II) são verdadeiras.");
		questaoAlternativa67.setAlternativasC("Somente (I) é verdadeira.");
		questaoAlternativa67.setAlternativasD("Somente (I) e (III) são verdadeiras.");
		questaoAlternativa67.setAlternativasE("(I), (II) e (III) são falsas.");
		questaoAlternativa67.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa68 = new QuestaoAlternativa();
		questaoAlternativa68.setId(INICIOQUESTAO.longValue());
		questaoAlternativa68.setAno(ANO);
		questaoAlternativa68
				.setDescricao("Segundo o W3C (World Wide Web Consortium), um Serviço Web é um sistema de software projetado para permitir a interação entre máquinas numa rede. Selecione a afirmação incorreta sobre Serviços Web:");
		questaoAlternativa68.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa68.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa68.setDisciplina(EDisciplina.SISTEMAS_DISTRIBUIDOS);
		questaoAlternativa68.setAlternativaCorreta("e");
		questaoAlternativa68.setAlternativasA("A interface do Serviço Web é descrita em WSDL.");
		questaoAlternativa68.setAlternativasB("A representação dos dados é feita em XML.");
		questaoAlternativa68.setAlternativasC("O transporte das mensagens é feito tipicamente pelo HTTP.");
		questaoAlternativa68.setAlternativasD("Pode-se compor Serviços Web através de orquestrção de serviços.");
		questaoAlternativa68.setAlternativasE("Cliente e Servidor devem ser escritos na mesma linguagem de programação");
		questaoAlternativa68.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa69 = new QuestaoAlternativa();
		questaoAlternativa69.setId(INICIOQUESTAO.longValue());
		questaoAlternativa69.setAno(ANO);
		questaoAlternativa69.setDescricao("Considere o diagrama espaço-tempo da Figura 2; ele representa uma computação distribuída onde os eventos de cada processo são rotulados por relógios lógicos que atendem à definição de relógio lógico realizada por Leslie Lamport. Cada processo implementa o seu relógio lógico e usa um incremento diferente do usado pelos demais; os incrementos utilizados por P0, P1 e P2 podem ser determinados a partir dos rótulos dos eventos rotulados que aparecem na Figura 2. Qual das alternativas apresenta os tempos lógicos para os eventos não rotulados de cada processo?");
		questaoAlternativa69.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa69.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa69.setDisciplina(EDisciplina.SISTEMAS_DISTRIBUIDOS);
		questaoAlternativa69.setAlternativaCorreta("b");
		questaoAlternativa69.setImagem(true);
		questaoAlternativa69.setImagemQuestao("");
		questaoAlternativa69.setAlternativasA("$P_1$(14, 21, 28, 35, 42, 49, 56, 63, 70) $P_2$(40, 45, 50)");
		questaoAlternativa69.setAlternativasB("$P_1$(14, 21, 28, 35, 42, 67, 74, 81, 88) $P_2$(40, 79, 84)");
		questaoAlternativa69.setAlternativasC("$P_1$(8, 15, 22, 29, 36, 61, 68, 75, 88) $P_2$(40, 69, 74)");
		questaoAlternativa69.setAlternativasD("$P_1$(8, 15, 22, 29, 36, 43, 50, 57, 64) $P_2$(40, 45, 50)");
		questaoAlternativa69.setAlternativasE("$P_1$(8, 15, 22, 29, 36, 49, 56, 63, 70) $P_2$(40, 45, 50)");
		questaoAlternativa69.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa70 = new QuestaoAlternativa();
		questaoAlternativa70.setId(INICIOQUESTAO.longValue());
		questaoAlternativa70.setAno(ANO);
		questaoAlternativa70.setDescricao("A abordagem geral para tolerância a falhas é o uso de redundância. Considere as afirmações a seguir:\r\n" + 
				"$\\newline$(I) Um exemplo de redundância de informação é o uso de bits extras para permitir a recuperação de bits corrompidos.\r\n" + 
				"$\\newline$(II) Redundância de tempo é útil principalmente quando as falhas são transientes ou intermitentes.\r\n" + 
				"$\\newline$(III) Um exemplo de redundância física é o uso de processadores extras.\r\n" + 
				"$\\newline$(IV) O uso de processadores extras pode ser organizado com replicação ativa ou backup primário.\r\n" + 
				"$\\newline$Estão corretas:");
		questaoAlternativa70.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa70.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa70.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa70.setAlternativaCorreta("e");
		questaoAlternativa70.setAlternativasA("Somente as afirmações (I),(II) e (III).");
		questaoAlternativa70.setAlternativasB("Somente as afirmações (I), (II) e (IV).");
		questaoAlternativa70.setAlternativasC("Somente as afirmações (I), (III) e (IV).");
		questaoAlternativa70.setAlternativasD("Somente as afirmações (II), (III) e (IV).");
		questaoAlternativa70.setAlternativasE("Todas as afirmações.");
		questaoAlternativa70.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		List<Questao> questoes = new ArrayList<>();
		questoes.add(questaoAlternativa1);
		questoes.add(questaoAlternativa2);
		questoes.add(questaoAlternativa3);
		questoes.add(questaoAlternativa4);
		questoes.add(questaoAlternativa5);
		questoes.add(questaoAlternativa6);
		questoes.add(questaoAlternativa7);
		questoes.add(questaoAlternativa8);
		questoes.add(questaoAlternativa9);
		questoes.add(questaoAlternativa10);
		questoes.add(questaoAlternativa11);
		questoes.add(questaoAlternativa12);
		questoes.add(questaoAlternativa13);
		questoes.add(questaoAlternativa14);
		questoes.add(questaoAlternativa15);
		questoes.add(questaoAlternativa16);
		questoes.add(questaoAlternativa17);
		questoes.add(questaoAlternativa18);
		questoes.add(questaoAlternativa19);
		questoes.add(questaoAlternativa20);
		questoes.add(questaoAlternativa21);
		questoes.add(questaoAlternativa22);
		questoes.add(questaoAlternativa23);
		questoes.add(questaoAlternativa24);
		questoes.add(questaoAlternativa25);
		questoes.add(questaoAlternativa26);
		questoes.add(questaoAlternativa27);
		questoes.add(questaoAlternativa28);
		questoes.add(questaoAlternativa29);
		questoes.add(questaoAlternativa30);
		questoes.add(questaoAlternativa31);
		questoes.add(questaoAlternativa32);
		questoes.add(questaoAlternativa33);
		questoes.add(questaoAlternativa34);
		questoes.add(questaoAlternativa35);
		questoes.add(questaoAlternativa36);
		questoes.add(questaoAlternativa37);
		questoes.add(questaoAlternativa38);
		questoes.add(questaoAlternativa39);
		questoes.add(questaoAlternativa40);
		questoes.add(questaoAlternativa41);
		questoes.add(questaoAlternativa42);
		questoes.add(questaoAlternativa43);
		questoes.add(questaoAlternativa44);
		questoes.add(questaoAlternativa45);
		questoes.add(questaoAlternativa46);
		questoes.add(questaoAlternativa47);
		questoes.add(questaoAlternativa48);
		questoes.add(questaoAlternativa49);
		questoes.add(questaoAlternativa50);
		questoes.add(questaoAlternativa51);
		questoes.add(questaoAlternativa52);
		questoes.add(questaoAlternativa53);
		questoes.add(questaoAlternativa54);
		questoes.add(questaoAlternativa55);
		questoes.add(questaoAlternativa56);
		questoes.add(questaoAlternativa57);
		questoes.add(questaoAlternativa58);
		questoes.add(questaoAlternativa59);
		questoes.add(questaoAlternativa60);
		questoes.add(questaoAlternativa61);
		questoes.add(questaoAlternativa62);
		questoes.add(questaoAlternativa63);
		questoes.add(questaoAlternativa64);
		questoes.add(questaoAlternativa65);
		questoes.add(questaoAlternativa66);
		questoes.add(questaoAlternativa67);
		questoes.add(questaoAlternativa68);
		questoes.add(questaoAlternativa69);
		questoes.add(questaoAlternativa70);

		return questoes;
	}

}
