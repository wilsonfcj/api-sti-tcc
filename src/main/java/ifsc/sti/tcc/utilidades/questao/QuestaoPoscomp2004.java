package ifsc.sti.tcc.utilidades.questao;

import java.util.ArrayList;
import java.util.List;

import ifsc.sti.tcc.modelos.questao.Questao;
import ifsc.sti.tcc.modelos.questao.QuestaoAlternativa;
import ifsc.sti.tcc.props.EArea;
import ifsc.sti.tcc.props.EDisciplina;
import ifsc.sti.tcc.props.ETipoQuestaoProva;

public class QuestaoPoscomp2004 {

	final static Integer ANO = 2004;
	static Integer INICIOQUESTAO = 141;
	static Integer NUMEROQUESTAO = 1;

	public static List<Questao> registerPoscomp() {

		QuestaoAlternativa questaoAlternativa1 = new QuestaoAlternativa();
		questaoAlternativa1.setId(INICIOQUESTAO.longValue());
		questaoAlternativa1.setAno(ANO);
		questaoAlternativa1.setDescricao("Qual é o número inteiro mais próximo de $\\log_{2}{1.000.000}$?");
		questaoAlternativa1.setArea(EArea.MATEMATICA);
		questaoAlternativa1.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa1.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa1.setAlternativaCorreta("c");

		questaoAlternativa1.setAlternativasA("6");
		questaoAlternativa1.setAlternativasB("10");
		questaoAlternativa1.setAlternativasC("20");
		questaoAlternativa1.setAlternativasD("100");
		questaoAlternativa1.setAlternativasE("1000");
		questaoAlternativa1.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa2 = new QuestaoAlternativa();
		questaoAlternativa2.setId(INICIOQUESTAO.longValue());
		questaoAlternativa2.setAno(ANO);
		questaoAlternativa2.setDescricao(
				"Seja V um espaço vetorial real com produto interno. Para x e y vetores quaisquer de V, a igualdade $\\mid \\mid x + y \\mid \\mid = \\mid \\mid x \\mid \\mid + \\mid \\mid y \\mid \\mid$");
		questaoAlternativa2.setArea(EArea.MATEMATICA);
		questaoAlternativa2.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa2.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa2.setAlternativaCorreta("b");
		questaoAlternativa2.setAlternativasA("x $\\neq$ 0 e y = $\\lambda$ x para todo número real $\\lambda$   ");
		questaoAlternativa2.setAlternativasB(
				"x = 0, ou y = 0, ou (x $\\neq$ 0 e y = $\\lambda$ x) onde $\\lambda$ é um número real não-negativo.        ");
		questaoAlternativa2.setAlternativasC("x = 0, ou y = 0.");
		questaoAlternativa2.setAlternativasD("x = 0, ou y = 0, ou (x $\\neq$ 0 e x, y são linearmente dependentes).");
		questaoAlternativa2.setAlternativasE("x = 0, ou y = 0, ou (x $\\neq$ 0 e x, y são linearmente independentes).");
		questaoAlternativa2.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa3 = new QuestaoAlternativa();
		questaoAlternativa3.setId(INICIOQUESTAO.longValue());
		questaoAlternativa3.setAno(ANO);
		questaoAlternativa3.setDescricao(
				"Sobre a transformação linear T : $\\mathbb{R}^2 \\rightarrow \\mathbb{R}^2$ definida pela matriz $\\begin{bmatrix}1 & 0 \\-1 & 0 \\end{bmatrix}$ podemos dizer que");
		questaoAlternativa3.setArea(EArea.MATEMATICA);
		questaoAlternativa3.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa3.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa3.setAlternativaCorreta("d");

		questaoAlternativa3
				.setAlternativasA("a imagem é a reta $y = x$ e o núcleo é $\\left\\{ \\left(0, 0 \\right) \\right\\}$");
		questaoAlternativa3.setAlternativasB("a imagem é a reta $x = 0$ e o núcleo é a reta $y = −x$");
		questaoAlternativa3.setAlternativasC("a imagem é a reta $y = x$ e o núcleo é o $\\mathbb{R}^2$");
		questaoAlternativa3.setAlternativasD("a imagem é a reta $y = −x$ e o núcleo é a reta $x = 0$");
		questaoAlternativa3.setAlternativasE("a imagem é o  $\\mathbb{R}^2$ e o núcleo é a reta $y = x$");
		questaoAlternativa3.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa4 = new QuestaoAlternativa();
		questaoAlternativa4.setId(INICIOQUESTAO.longValue());
		questaoAlternativa4.setAno(ANO);
		questaoAlternativa4.setDescricao(
				"A transformação $T(x, y) =\\frac{1}{5} (−4x + 3y, 3x + 4y)$ do plano no plano é podemos dizer que ");
		questaoAlternativa4.setArea(EArea.MATEMATICA);
		questaoAlternativa4.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa4.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa4.setAlternativaCorreta("d");

		questaoAlternativa4.setAlternativasA("uma reflexãoo através da reta $y = 3x$");
		questaoAlternativa4.setAlternativasB("uma expansão uniforme");
		questaoAlternativa4.setAlternativasC("uma contração uniforme");
		questaoAlternativa4.setAlternativasD("uma translação");
		questaoAlternativa4.setAlternativasE("um cisalhamento horizontal");
		questaoAlternativa4.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa5 = new QuestaoAlternativa();
		questaoAlternativa5.setId(INICIOQUESTAO.longValue());
		questaoAlternativa5.setAno(ANO);
		questaoAlternativa5.setDescricao(
				"No $ \\mathbb{R}^3$ com o produto escalar usual, tome $v = \\left(1, −1, 0\\right)$ e o subespaço S gerado por \\left\\{\\left(1, 2, 1\\right),\\left(−1, 1, −1\\right)\\right\\}$. O vetor de S mais próximo de v  é");
		questaoAlternativa5.setArea(EArea.MATEMATICA);
		questaoAlternativa5.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa5.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa5.setAlternativaCorreta("a");

		questaoAlternativa5.setAlternativasA("$(1/2, −1, 1/2)$");
		questaoAlternativa5.setAlternativasB("$(1, −1, 1)$");
		questaoAlternativa5.setAlternativasC("$(2/3, −1, 1/3)$");
		questaoAlternativa5.setAlternativasD("$(1/100, −1, 1/100)$");
		questaoAlternativa5.setAlternativasE("$(2, −1, 2)$");
		questaoAlternativa5.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa6 = new QuestaoAlternativa();
		questaoAlternativa6.setId(INICIOQUESTAO.longValue());
		questaoAlternativa6.setAno(ANO);
		questaoAlternativa6.setDescricao(
				"Considere o espaço amostral  $\\Omega  = \\left\\{\\omega_1, \\omega_2, . . . , \\omega_n\\right\\}$ onde $\\omega_i$ ocorre com probabilidade $p_i$ para todo $i \\ \\epsilon \\left\\{1, 2, . . . , n\\right\\}$. Defina o produto escalar"
						+ "$\\newline$"
						+ "$\\langle x, y\\rangle = p_1 x_1 y_1 + p_2 x_2 y_2 + . . . + p_n x_n y_n$,\r\n"
						+ "$\\newline$"
						+ "para $x = (x_1, x_2, . . . , x_n)$ e $y = (y_1, y_2, . . . , y_n)$, pontos quaisquer no $\\mathbb{R}^n$.\r\n"
						+ "$\\newline$\r\n"
						+ "Seja X uma variável aleatória com $X(\\omega_i) = X_i$. Para $p = (p_1, . . . , p_n), X = (X_1, . . . , X_n)$ e  $1 = (1, 1, . . . , 1) \\ \\epsilon \\ \\mathbb{R}^n$ podemos dizer que"
						+ "$\\newline$" + "$\\langle X, 1\\rangle$" + "$\\newline$\r\n"
						+ "$\\langle X - \\langle X, 1\\rangle1, X - \\langle X, 1\\rangle1\\rangle$\r\n"
						+ "$\\newline$" + "$||X - \\langle X, 1\\rangle1||$" + "$\\newline$"
						+ "são, respectivamente, com respeito a variável X a");
		questaoAlternativa6.setArea(EArea.MATEMATICA);
		questaoAlternativa6.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa6.setDisciplina(EDisciplina.ESTATÍSTICA_E_PROBABILIDADE);
		questaoAlternativa6.setAlternativaCorreta("e");

		questaoAlternativa6.setAlternativasA("média, variância, desvio padrão");
		questaoAlternativa6.setAlternativasB("variância, média, desvio padrão");
		questaoAlternativa6.setAlternativasC("média, desvio padrão, variância");
		questaoAlternativa6.setAlternativasD("desvio padrão, média, variância");
		questaoAlternativa6.setAlternativasE("desvio padrão, variância, média");
		questaoAlternativa6.setNumeroQuestao(NUMEROQUESTAO);

//		TODO FEITO
		
	
		
		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa7 = new QuestaoAlternativa();
		questaoAlternativa7.setId(INICIOQUESTAO.longValue());
		questaoAlternativa7.setAno(ANO);
		questaoAlternativa7.setDescricao("Se A é uma matriz $n×n$ de entradas reais, cujas linhas são linearmente independentes, então não se pode afirmar que:");
		questaoAlternativa7.setArea(EArea.MATEMATICA);
		questaoAlternativa7.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa7.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa7.setAlternativaCorreta("d");

		questaoAlternativa7.setAlternativasA("A é inversível.");
		questaoAlternativa7.setAlternativasB("A · X = B tem solução  única X para todo B $\\epsilon$  $\\mathbb{R}^n$.");
		questaoAlternativa7.setAlternativasC("As colunas de A são linearmente independentes.");
		questaoAlternativa7.setAlternativasD("$det(A) = 1$.");
		questaoAlternativa7.setAlternativasE("O posto de A é n.");
		questaoAlternativa7.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa8 = new QuestaoAlternativa();
		questaoAlternativa8.setId(INICIOQUESTAO.longValue());
		questaoAlternativa8.setAno(ANO);
		questaoAlternativa8.setDescricao("A soma de coeficientes binomiais $\\sum_{k=0}^n \\left(\\begin{array}{c}r + k\\ k\\end{array}\\right)$ vale");
		questaoAlternativa8.setArea(EArea.MATEMATICA);
		questaoAlternativa8.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa8.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa8.setAlternativaCorreta("e");

		questaoAlternativa8.setAlternativasA("$\\frac{1}{2}\\left(\\begin{array}{c} r - n + 1\\ n\\end{array}\\right)$");
		questaoAlternativa8.setAlternativasB("$\\frac{1}{2}\\left(\\begin{array}{c} r - 1 + n\\ n\\end{array}\\right)$");
		questaoAlternativa8.setAlternativasC("$\\left(\\begin{array}{c} r + n\\ n - 1\\end{array}\\right)$");
		questaoAlternativa8.setAlternativasD("$\\left(\\begin{array}{c} r + n\\ n + 1\\end{array}\\right)$");
		questaoAlternativa8.setAlternativasE("$\\left(\\begin{array}{c} r + n + 1\\ n\\end{array}\\right)$");
		questaoAlternativa8.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa9 = new QuestaoAlternativa();
		questaoAlternativa9.setId(INICIOQUESTAO.longValue());
		questaoAlternativa9.setAno(ANO);
		questaoAlternativa9.setDescricao("De quantas maneiras distintas podemos distribuir $m \\geq k$ centavos entre $k$ meninas e meninos de maneira que cada menina receba pelo menos um centavo?");
		questaoAlternativa9.setArea(EArea.MATEMATICA);
		questaoAlternativa9.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa9.setDisciplina(EDisciplina.ESTATÍSTICA_E_PROBABILIDADE);
		questaoAlternativa9.setAlternativaCorreta("d");

		questaoAlternativa9
				.setAlternativasA("$\\left(\\begin{array}{c}m\\ k\\end{array}\\right)\\left(\\begin{array}{c}m-k\\ \\ell \\end{array}\\right)$");
		questaoAlternativa9.setAlternativasB("$\\left(\\begin{array}{c}m - k\\ k + \\ell \\end{array}\\right)$");
		questaoAlternativa9.setAlternativasC("$\\left(\\begin{array}{c}m + \\ell + k\\ k + \\ell - 1 \\end{array}\\right)$");
		questaoAlternativa9.setAlternativasD("$\\left(\\begin{array}{c}m + \\ell - 1\\ k + \\ell - 1 \\end{array}\\right)$");
		questaoAlternativa9.setAlternativasE("$\\left(\\begin{array}{c}m + \\ell\\ k + \\ell\\end{array}\\right)$");
		questaoAlternativa9.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa10 = new QuestaoAlternativa();
		questaoAlternativa10.setId(INICIOQUESTAO.longValue());
		questaoAlternativa10.setAno(ANO);
		questaoAlternativa10.setDescricao("Quais são as raízes da equação característica da relação de recorrência: $\\begin{cases} a_1  & = 0\\ a_2  & = 1 \\ a_n  & = -a_{n-2} (n \\geq 3) \\end{cases}$");
		questaoAlternativa10.setArea(EArea.MATEMATICA);
		questaoAlternativa10.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa10.setDisciplina(EDisciplina.CALCULO_NUMERICO);
		questaoAlternativa10.setAlternativaCorreta("c");

		questaoAlternativa10.setAlternativasA("$0, 1 e -1;$");
		questaoAlternativa10.setAlternativasB("$i, 0 e - i;$");
		questaoAlternativa10.setAlternativasC("$i e -i;$");
		questaoAlternativa10.setAlternativasD("$0 e 1;$");
		questaoAlternativa10.setAlternativasE("$0 e -1;$");
		questaoAlternativa10.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa11 = new QuestaoAlternativa();
		questaoAlternativa11.setId(INICIOQUESTAO.longValue());
		questaoAlternativa11.setAno(ANO);
		questaoAlternativa11.setDescricao("A sequência definida recursivamente por $T_n = n + 1 + \\frac{2}{n} \\sum_{k = 0}^{n - 1} T_k \\left(\\forall n > 0; \\ T_0 = 0 \\right)$ pode ser definida por uma expressão na forma $a_nT_n = b_nT_n -1 + c_n$. Neste caso, quais são os valores de $a_n$, $b_n$ e $c_n$?");
		questaoAlternativa11.setArea(EArea.MATEMATICA);
		questaoAlternativa11.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa11.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa11.setAlternativaCorreta("b");
		questaoAlternativa11.setAlternativasA("$n, 1$ e $\\frac{n}{2}\\sum_{k=0}^{n-2}T_k$;");
		questaoAlternativa11.setAlternativasB("$n, (n + 1) e 2n$;");
		questaoAlternativa11.setAlternativasC("$n, 1 $ e $ 2n \\sum_{k=0}^{n-2}t_k$;");
		questaoAlternativa11.setAlternativasD("$n, (n + 1)$ e $\\frac{2}{n}$;");
		questaoAlternativa11.setAlternativasE("$n, 1$ e $\\frac{2}{n}\\sum_{k=0}^{n-2}T_k$");
		questaoAlternativa11.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa12 = new QuestaoAlternativa();
		questaoAlternativa12.setId(INICIOQUESTAO.longValue());
		questaoAlternativa12.setAno(ANO);
		questaoAlternativa12.setDescricao("Num espaço finito de probabilidades $\\Omega$ com distribuição $P: \\Omega \\rightarrow (0, 1)$, dados os eventos " + 
				"A, B, C  $\\subseteq \\Omega$ quais das afirmações abaixo são verdadeiras? $\\newline$ " + 
				"(I) Se $ \\mathbb{P} (A) = 1/2$ e $\\mathbb{P}(B) = 3/5$ então A e B não são disjuntos. $\\newline$ " + 
				"(II) Se $\\mathbb{P}(B) = 1/3$ e $\\mathbb{P}(A|B) = 3/5$ então A e B são disjuntos. $\\newline$ " + 
				"(III) Se $\\mathbb{P}(A) = 1/2$, $\\mathbb{P}(B|A) = 1$ e $\\mathbb{P}(A|B) = 1/2$ então $A \\subseteq B$ e $\\mathbb{P}(B) = 1$. $\\newline$ " + 
				"(IV) Se A, B e C são eventos dois-a-dois independentes que ocorrem com probabilidade $1/2$, $1/4$ e $1/8$, respectivamente, e A ou B ou C ocorre com probabilidade $29/32$, então a probabilidade dos três eventos ocorrerem simultaneamente é $1/64$");
		questaoAlternativa12.setArea(EArea.MATEMATICA);
		questaoAlternativa12.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa12.setDisciplina(EDisciplina.ESTATÍSTICA_E_PROBABILIDADE);
		questaoAlternativa12.setAlternativaCorreta("b");
		questaoAlternativa12.setAlternativasA("(I), (II)");
		questaoAlternativa12.setAlternativasB("(I), (III)");
		questaoAlternativa12.setAlternativasC("(I), (III), (IV)");
		questaoAlternativa12.setAlternativasD("(II), (III)");
		questaoAlternativa12.setAlternativasE("(III), (IV)");
		questaoAlternativa12.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa13 = new QuestaoAlternativa();
		questaoAlternativa13.setId(INICIOQUESTAO.longValue());
		questaoAlternativa13.setAno(ANO);
		questaoAlternativa13.setDescricao("Quantas cadeias de 7 bits não contêm 3 zeros consecutivos?");
		questaoAlternativa13.setArea(EArea.MATEMATICA);
		questaoAlternativa13.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa13.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa13.setAlternativaCorreta("d");
		questaoAlternativa13.setAlternativasA("44");
		questaoAlternativa13.setAlternativasB("48");
		questaoAlternativa13.setAlternativasC("80");
		questaoAlternativa13.setAlternativasD("81");
		questaoAlternativa13.setAlternativasE("123");
		questaoAlternativa13.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa14 = new QuestaoAlternativa();
		questaoAlternativa14.setId(INICIOQUESTAO.longValue());
		questaoAlternativa14.setAno(ANO);
		questaoAlternativa14.setDescricao("Para uma função contínua f definida no intervalo $\\left[0, 1\\right]$, quais dos itens abaixo são válidos? "
				+ "$\\newline$ (I) $\\left(\\int_{0}^{1} f(t)dt \\right)^2 \\leq \\int_{0}^{1} f(t)^2dt$"
				+ "$\\newline$ (II) $\\mid \\int_{0}^{1} f(t)dt \\mid \\ \\leq \\int_{0}^{1} \\mid f(t)\\mid dt$" 
				+ "$\\newline$(III) Existe c $\\epsilon \\left[0,1\\right]$ tal que $\\int_{0}^{1} f(t)dt = f(c) $");
		questaoAlternativa14.setArea(EArea.MATEMATICA);
		questaoAlternativa14.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa14.setDisciplina(EDisciplina.CALCULO);
		questaoAlternativa14.setAlternativaCorreta("a");

		questaoAlternativa14.setAlternativasA("(I), (II), (III)");
		questaoAlternativa14.setAlternativasB("(I), (II)");
		questaoAlternativa14.setAlternativasC("(I), (III)");
		questaoAlternativa14.setAlternativasD("(II), (III)");
		questaoAlternativa14.setAlternativasE("Nenhum, todos são falsos");
		questaoAlternativa14.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa15 = new QuestaoAlternativa();
		questaoAlternativa15.setId(INICIOQUESTAO.longValue());
		questaoAlternativa15.setAno(ANO);
		questaoAlternativa15.setDescricao("Para fazermos uma caixa, removemos de uma folha quadrada de lado a um quadrado de lado x de cada um de seus cantos (veja a figura abaixo). O valor de x que maximiza o volume da caixa obtida é:");
		questaoAlternativa15.setArea(EArea.MATEMATICA);
		questaoAlternativa15.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa15.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa15.setAlternativaCorreta("b");
		questaoAlternativa15.setImagem(true);
		questaoAlternativa15.setImagemQuestao("");
		questaoAlternativa15.setAlternativasA("a solução de $(a - 2x)(a - 6x) = 0$ no intervalo $(a/3, \\infty)$");
		questaoAlternativa15.setAlternativasB("a solução de $(a - 2x)(a - 6x) = 0$ no intervalo $(-\\infty, a/3)$");
		questaoAlternativa15.setAlternativasC("$x = a/3$");
		questaoAlternativa15.setAlternativasD("a solução positiva de $x(a - 2x)^2= 0$ ");
		questaoAlternativa15.setAlternativasE("o valor que maximiza a área da base da caixa, ou seja, o valor máximo da função $(a - 2x)^2$");
		questaoAlternativa15.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa16 = new QuestaoAlternativa();
		questaoAlternativa16.setId(INICIOQUESTAO.longValue());
		questaoAlternativa16.setAno(ANO);
		questaoAlternativa16.setDescricao("A equação $2x^2 + 2y^2 + 4xy − 4x − 4y + 2 = 0$ descreve:");
		questaoAlternativa16.setArea(EArea.MATEMATICA);
		questaoAlternativa16.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa16.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa16.setAlternativaCorreta("a");
		questaoAlternativa16.setAlternativasA("Uma única reta.");
		questaoAlternativa16.setAlternativasB("Duas retas.");
		questaoAlternativa16.setAlternativasC("Um único ponto.");
		questaoAlternativa16.setAlternativasD("Uma elipse ou uma circunferência.");
		questaoAlternativa16.setAlternativasE("Uma parábola ou uma hipérbole.");
		questaoAlternativa16.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa17 = new QuestaoAlternativa();
		questaoAlternativa17.setId(INICIOQUESTAO.longValue());
		questaoAlternativa17.setAno(ANO);
		questaoAlternativa17.setDescricao("Um reservatório cônico de altura $H$ e raio $R$ é preenchido com água de modo que $V$ é o volume de água no instante t, r é o raio da seção do cone ao nível da água no instante t e h é a altura do nível da água no instante t. Sabendo-se que $V = \\frac{1}{2} \\pi r^2h$, conforme a figura abaixo. E que $\\frac{r}{h} = \\frac{R}{H}$ podemos afirmar que a velocidade com a qual o nível da água sobe no instante em que a altura do nível da água é $H/2$ é ");
		questaoAlternativa17.setArea(EArea.MATEMATICA);
		questaoAlternativa17.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa17.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa17.setAlternativaCorreta("a");
		questaoAlternativa17.setImagem(true);
		questaoAlternativa17.setImagemQuestao("");
		questaoAlternativa17.setAlternativasA("$\\frac{dh}{dt} = \\left(\\begin{array}{c}4\\ \\pi R^2 \\end{array}\\right) \\frac{dV}{dt}$");
		questaoAlternativa17.setAlternativasB("$\\frac{dh}{dt} = \\left(\\begin{array}{c}12\\ \\pi R^2 \\end{array}\\right) \\frac{dV}{dt}$");
		questaoAlternativa17.setAlternativasC("$\\frac{dh}{dt} =\\sqrt[3]{\\left(\\begin{array}{c}H^2\\ \\pi R^2 \\end{array}\\right) \\frac{dV}{dt}} $");
		questaoAlternativa17.setAlternativasD("$\\frac{dh}{dt} =\\sqrt{\\left(\\begin{array}{c}H^2\\ \\pi R^2 \\end{array}\\right) \\frac{dV}{dt}} $");
		questaoAlternativa17.setAlternativasE("$\\frac{dh}{dt} = \\frac{12V}{\\pi R^2}$");
		questaoAlternativa17.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa18 = new QuestaoAlternativa();
		questaoAlternativa18.setId(INICIOQUESTAO.longValue());
		questaoAlternativa18.setAno(ANO);
		questaoAlternativa18.setDescricao("O valor do parâmetro m, para que o sistema \\begin{center} $\\begin{cases}x \\ + \\ y \\ + (1 - m)z = 0 \\x \\ + \\ (m - 1)y \\ - \\ z = 0 \\ x \\ + \\ my \\ +z = 0 \\end{cases}$ \\end{center} \\ \\ admita soluções distintas de (0, 0, 0) é:");
		questaoAlternativa18.setArea(EArea.MATEMATICA);
		questaoAlternativa18.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa18.setDisciplina(EDisciplina.ALGEBRA_LINEAR_E_GEOMETRIA_ANALITICA);
		questaoAlternativa18.setAlternativaCorreta("d");
		questaoAlternativa18.setAlternativasA("-2");
		questaoAlternativa18.setAlternativasB("-1");
		questaoAlternativa18.setAlternativasC("1");
		questaoAlternativa18.setAlternativasD("2");
		questaoAlternativa18.setAlternativasE("3");
		questaoAlternativa18.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa19 = new QuestaoAlternativa();
		questaoAlternativa19.setId(INICIOQUESTAO.longValue());
		questaoAlternativa19.setAno(ANO);
		questaoAlternativa19.setDescricao("Zezé tem n reais. Todo dia compra exatamente 1 chocolate (2 reais) ou 1 brigadeiro(1 real) ou 1 sorvete (2 reais). A equação de recorrência que fornece o número $b_n$ dos possíveis modos de gastar os $n$ reais é:");
		questaoAlternativa19.setArea(EArea.MATEMATICA);
		questaoAlternativa19.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa19.setDisciplina(EDisciplina.CALCULO_NUMERICO);
		questaoAlternativa19.setAlternativaCorreta("a");

		questaoAlternativa19.setAlternativasA("$b_n = b_{n−1} + 2b_{n−2}, \\ n \\geq 3; \\ b_1 = 1;\\ b_2 = 3$");
		questaoAlternativa19.setAlternativasB("$b_n = 2b_{n−1} + b_{n−2}, \\ n \\geq 3; \\ b_1 = 1; \\ b_2 = 3$");
		questaoAlternativa19.setAlternativasC("$ b_n = b_{n−1} + 2b_{n−2}, \\ n \\geq 3; \\ b_1 = 1; \\ b_2 = 2$");
		questaoAlternativa19.setAlternativasD("$b_n = 2b_{n−1} + b_{n−2}, \\ n \\geq 3; \\ b_1 = 1; \\ b_2 = 2$");
		questaoAlternativa19.setAlternativasE("$ b_n = b_{n−1} + b_{n−2}, \\ n ≥ 3; \\ b_1 = 1; \\ b_2 = 3$");
		questaoAlternativa19.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa20 = new QuestaoAlternativa();
		questaoAlternativa20.setId(INICIOQUESTAO.longValue());
		questaoAlternativa20.setAno(ANO);
		questaoAlternativa20.setDescricao("Considere a fórmula e o domínio de interpretação a seguir: $\\newline$" +
				"$\\left[ \\forall x \\left[ F x ⇒ \\left[ Ex \\wedge T xa \\right] \\right] \\right] \\wedge$ $\\newline$" + 
				"$\\left[ \\exists x \\left[ \\left[ Ex \\wedge T xa \\right] \\wedge F x \\right] \\right] \\wedge$ $\\newline$" + 
				"$\\left[ \\exists x \\left[ \\left[ Ex \\wedge T xa ]\\right] \\wedge ¬F x \\right] \\right]$ $\\newline$" + 
				"Domínio: Universo $\\newline$ "
				+ "$a$: Alberto $\\newline$ "
				+ "$Ex$: x é estudante $\\newline$ "
				+ "$Fx$: x formou-se $\\newline$ "
				+ "$Txy$: x trabalhou mais que y $\\newline$ "
				+ "Qual sentença é logicamente consistente com a fórmula usando o domínio de interpretação apresentado?");
		questaoAlternativa20.setArea(EArea.MATEMATICA);
		questaoAlternativa20.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa20.setDisciplina(EDisciplina.MATEMÁTICA_DISCRETA);
		questaoAlternativa20.setAlternativaCorreta("b");

		questaoAlternativa20.setAlternativasA("Todos os estudantes que trabalharam mais que Alberto formaram-se");
		questaoAlternativa20.setAlternativasB("Somente estudantes que trabalharam mais que Alberto formaram-se");
		questaoAlternativa20.setAlternativasC("Alberto trabalhou mais que qualquer estudante que não se formou");
		questaoAlternativa20.setAlternativasD("Somente estudantes que se formaram trabalharam mais que Alberto.");
		questaoAlternativa20.setAlternativasE("Todos os estudantes que não se formaram trabalharam menos que Alberto.");
		questaoAlternativa20.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa21 = new QuestaoAlternativa();
		questaoAlternativa21.setId(INICIOQUESTAO.longValue());
		questaoAlternativa21.setAno(ANO);
		questaoAlternativa21.setDescricao("Seja $\\sum = \\left\\{a, b\\right\\}$. Uma expressão regular denotando a linguagem $L = \\left\\{w \\in \\sum∗$ tal que toda ocorrência de \"a\" em w é imediatamente seguida de \"b\"\\right\\} é:");
		questaoAlternativa21.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa21.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa21.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa21.setAlternativaCorreta("b");

		questaoAlternativa21.setAlternativasA("$(a^*b)^*$");
		questaoAlternativa21.setAlternativasB("$(b + ab)^*$");
		questaoAlternativa21.setAlternativasC("$a^*b$");
		questaoAlternativa21.setAlternativasD("$b + (ab)^*$");
		questaoAlternativa21.setAlternativasE("$(ab)^*$");
		questaoAlternativa21.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa22 = new QuestaoAlternativa();
		questaoAlternativa22.setId(INICIOQUESTAO.longValue());
		questaoAlternativa22.setAno(ANO);
		questaoAlternativa22.setDescricao("Quanto vale k no fim da execução do seguinte trecho de código?");
		questaoAlternativa22.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa22.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa22.setDisciplina(EDisciplina.ARQUITETURA_E_ORGANIZACAO_DE_COMPUTADORES);
		questaoAlternativa22.setAlternativaCorreta("d");
		questaoAlternativa22.setImagem(true);
		questaoAlternativa22.setImagemQuestao("");
		questaoAlternativa22.setAlternativasA("$n-1$");
		questaoAlternativa22.setAlternativasB("$n$");
		questaoAlternativa22.setAlternativasC("$(n^2 - n)/2$");
		questaoAlternativa22.setAlternativasD("$n(n + 1)/2$");
		questaoAlternativa22.setAlternativasE("$n^3$");
		questaoAlternativa22.setNumeroQuestao(NUMEROQUESTAO);
		

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa23 = new QuestaoAlternativa();
		questaoAlternativa23.setId(INICIOQUESTAO.longValue());
		questaoAlternativa23.setAno(ANO);
		questaoAlternativa23.setDescricao("O programa abaixo, quando executado para A(1, 2), faz quantas chamadas recursivas (excluindo a primeira chamada da função)?");
		questaoAlternativa23.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa23.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa23.setDisciplina(EDisciplina.ELETRONICA_DIGITAL);
		questaoAlternativa23.setAlternativaCorreta("b");
		questaoAlternativa22.setImagem(true);
		questaoAlternativa22.setImagemQuestao("");
		questaoAlternativa23.setAlternativasA("6");
		questaoAlternativa23.setAlternativasB("5");
		questaoAlternativa23.setAlternativasC("4");
		questaoAlternativa23.setAlternativasD("3");
		questaoAlternativa23.setAlternativasE("2");
		questaoAlternativa23.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa24 = new QuestaoAlternativa();
		questaoAlternativa24.setId(INICIOQUESTAO.longValue());
		questaoAlternativa24.setAno(ANO);
		questaoAlternativa24.setDescricao("Considere as seguintes estruturas de dados: $\\newline$" + 
				"(I) Tabela hash $\\newline$" + 
				"(II) Fila $\\newline$" + 
				"(III) Árvore de pesquisa $\\newline$" + 
				"(IV) Pilha $\\newline$" + 
				"Qual ou quais das estruturas acima requer mais do que tempo médio constante para inserção de um elemento?");
		questaoAlternativa24.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa24.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa24.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa24.setAlternativaCorreta("c");
		questaoAlternativa24.setAlternativasA("Somente (I)");
		questaoAlternativa24.setAlternativasB("Somente (II)");
		questaoAlternativa24.setAlternativasC("Somente (III)");
		questaoAlternativa24.setAlternativasD("Somente (IV)");
		questaoAlternativa24.setAlternativasE("Todas");
		questaoAlternativa24.setNumeroQuestao(NUMEROQUESTAO);
		
		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa25 = new QuestaoAlternativa();
		questaoAlternativa25.setId(INICIOQUESTAO.longValue());
		questaoAlternativa25.setAno(ANO);
		questaoAlternativa25.setDescricao("Considere as seguintes afirmativas sobre o  algoritmo de pesquisa binária: $\\newline$" + 
				"I. a entrada deve estar ordenada $\\newline$" + 
				"II. uma pesquisa com sucesso é feita em tempo logarítmico na média $\\newline$" + 
				"III. uma pesquisa sem sucesso é feita em tempo logarítmico na média $\\newline$" + 
				"IV. o pior caso de qualquer busca é logarítmico $\\newline$" + 
				"As afirmativas corretas são:");
		questaoAlternativa25.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa25.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa25.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa25.setAlternativaCorreta("e");
		questaoAlternativa25.setAlternativasA("Somente I e II.");
		questaoAlternativa25.setAlternativasB("Somente I, II e III.");
		questaoAlternativa25.setAlternativasC("Somente II e III.");
		questaoAlternativa25.setAlternativasD("Somente III e IV.");
		questaoAlternativa25.setAlternativasE("Todas as afirmativas estão corretas.");
		questaoAlternativa25.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa26 = new QuestaoAlternativa();
		questaoAlternativa26.setId(INICIOQUESTAO.longValue());
		questaoAlternativa26.setAno(ANO);
		questaoAlternativa26.setDescricao("Em sistemas de memória virtual de paginação sob demanda, qual seria o critério ideal para substituição de páginas?");
		questaoAlternativa26.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa26.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa26.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa26.setAlternativaCorreta("b");
		questaoAlternativa26.setAlternativasA("retirar a página que acabou de ser referenciada");
		questaoAlternativa26.setAlternativasB("retirar a página que será necessária no futuro mais distante");
		questaoAlternativa26.setAlternativasC("retirar a página que está há mais tempo na memória");
		questaoAlternativa26.setAlternativasD("retirar a página que foi referenciada menos vezes");
		questaoAlternativa26.setAlternativasE("retirar a página que está há mais tempo sem ser utilizada");
		questaoAlternativa26.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa27 = new QuestaoAlternativa();
		questaoAlternativa27.setId(INICIOQUESTAO.longValue());
		questaoAlternativa27.setAno(ANO);
		questaoAlternativa27.setDescricao("Considere o seguinte programa com dois processos concorrentes. O escalonador poderá alternar entre um e outro, isto é, eles poderão ser intercalados durante sua execução. As variáveis x e y são compartilhadas pelos dois processos e inicializadas antes de sua execução. Conforme a imagem abaixo. As possíveis saídas são:");
		questaoAlternativa27.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa27.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa27.setDisciplina(EDisciplina.SISTEMAS_OPERACIONAIS);
		questaoAlternativa27.setImagem(true);
		questaoAlternativa27.setImagemQuestao("");
		questaoAlternativa27.setAlternativaCorreta("b");
		questaoAlternativa27.setAlternativasA("adbc ou bcad");
		questaoAlternativa27.setAlternativasB("badc ou bacd");
		questaoAlternativa27.setAlternativasC("abdc ou abcd");
		questaoAlternativa27.setAlternativasD("dbca ou dcab");
		questaoAlternativa27.setAlternativasE("Nenhuma das opções anteriores");
		questaoAlternativa27.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa28 = new QuestaoAlternativa();
		questaoAlternativa28.setId(INICIOQUESTAO.longValue());
		questaoAlternativa28.setAno(ANO);
		questaoAlternativa28.setDescricao("Qual das seguintes expressões posfixas é equivalente à expressão infixa $A+(B/C)*((D-E)/F)$?");
		questaoAlternativa28.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa28.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa28.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa28.setAlternativaCorreta("c");
		questaoAlternativa28.setAlternativasA("$ABC/-DE*F+/$");
		questaoAlternativa28.setAlternativasB("$ABC/DE-/F+*$");
		questaoAlternativa28.setAlternativasC("$ABC/DE-F/*+$");
		questaoAlternativa28.setAlternativasD("$ABC/D-EF*/+$");
		questaoAlternativa28.setAlternativasE("$ABD/CE+/F-*$");
		questaoAlternativa28.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa29 = new QuestaoAlternativa();
		questaoAlternativa29.setId(INICIOQUESTAO.longValue());
		questaoAlternativa29.setAno(ANO);
		questaoAlternativa29.setDescricao("Considerando A e B duas variáveis lógicas, a expressão  $(not(A) and B) or (A and not(B))$ assume o valor verdadeiro:");
		questaoAlternativa29.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa29.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa29.setDisciplina(EDisciplina.PROGRAMACAO);
		questaoAlternativa29.setAlternativaCorreta("c");
		questaoAlternativa29.setAlternativasA("para todos os valores de A e de B");
		questaoAlternativa29.setAlternativasB("sempre que A é igual a B");
		questaoAlternativa29.setAlternativasC("sempre que A é diferente de B");
		questaoAlternativa29.setAlternativasD("sempre que A é falso");
		questaoAlternativa29.setAlternativasE("sempre que B é falso");
		questaoAlternativa29.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa30 = new QuestaoAlternativa();
		questaoAlternativa30.setId(INICIOQUESTAO.longValue());
		questaoAlternativa30.setAno(ANO);
		questaoAlternativa30.setDescricao("Ao segmentar um processador, transformando-o num pipeline, obtém-se:");
		questaoAlternativa30.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa30.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa30.setDisciplina(EDisciplina.ARQUITETURA_E_ORGANIZACAO_DE_COMPUTADORES);
		questaoAlternativa30.setAlternativaCorreta("b");
		questaoAlternativa30.setAlternativasA("redução no número de ciclos necessários para executar uma instrução");
		questaoAlternativa30.setAlternativasB("redução no número de ciclos necessários para executar um programa");
		questaoAlternativa30.setAlternativasC("redução no número de ciclos necessários para tratar uma exceção");
		questaoAlternativa30.setAlternativasD("redução no número de ciclos necessários para tratar uma interrupção");
		questaoAlternativa30.setAlternativasE("o circuito do processador fica mais simples");
		questaoAlternativa30.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa31 = new QuestaoAlternativa();
		questaoAlternativa31.setId(INICIOQUESTAO.longValue());
		questaoAlternativa31.setAno(ANO);
		questaoAlternativa31.setDescricao("Um registrador de deslocamento (shift register) é um componente importante dos dispositivos listados a seguir: $\\newline$" + 
				"(I) porta serial (UART, ou universal asynchronous receiver/transmitter) $\\newline$" + 
				"(II) porta paralela $\\newline$" + 
				"(III) multiplicador sequencial $\\newline$" + 
				"(IV) somador $\\newline$" + 
				"Assinale a alternativa correta:");
		questaoAlternativa31.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa31.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa31.setDisciplina(EDisciplina.ARQUITETURA_E_ORGANIZACAO_DE_COMPUTADORES);
		questaoAlternativa31.setAlternativaCorreta("d");
		questaoAlternativa31.setAlternativasA("somente I e II");
		questaoAlternativa31.setAlternativasB("somente II e IV");
		questaoAlternativa31.setAlternativasC("somente III e IV");
		questaoAlternativa31.setAlternativasD("somente I e III");
		questaoAlternativa31.setAlternativasE("somente II e II");
		questaoAlternativa31.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa32 = new QuestaoAlternativa();
		questaoAlternativa32.setId(INICIOQUESTAO.longValue());
		questaoAlternativa32.setAno(ANO);
		questaoAlternativa32.setDescricao("Considere as seguintes afirmativas: $\\newline$" + 
				" I. Uma modificação em uma CPU fez o cycle time e o CPI aumentarem de 10% enquanto o número de instruções executadas para uma dada aplicação decresceu de 20%. Podemos concluir que o tempo de execução desta aplicação será mantido. $\\newline$" + 
				"II. Um page fault ocorre quando a entrada correspondente à página requerida não é encontrada no translation lookside buffer. $\\newline$" + 
				"III. Para armazenar uma mesma quantidade de dados, uma cache direct mapped é tipicamente menor que uma cache set associative, assumindo blocos de mesmo tamanho. $\\newline$" + 
				"IV. Aumentando–se o tamanho do bloco de uma cache aumenta–se as vantagens obtidas com a localidade espacial. $\\newline$" + 
				"V. Memória virtual tipicamente usa a estratégia write–through ao invés de estratégia write–back. $\\newline$" + 
				"Quais são as alternativas verdadeiras?");
		questaoAlternativa32.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa32.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa32.setDisciplina(EDisciplina.ARQUITETURA_E_ORGANIZACAO_DE_COMPUTADORES);
		questaoAlternativa32.setAlternativaCorreta("d");
		questaoAlternativa32.setAlternativasA("Somente as afirmativas I, II, III e IV são verdadeiras.");
		questaoAlternativa32.setAlternativasB("Somente as afirmativas I, III e IV são verdadeiras.");
		questaoAlternativa32.setAlternativasC("Somente as afirmativas II, III e IV são verdadeiras.");
		questaoAlternativa32.setAlternativasD("Somente as afirmativas III e IV são verdadeiras");
		questaoAlternativa32.setAlternativasE("Todas as afirmativas são verdadeiras.");
		questaoAlternativa32.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa33 = new QuestaoAlternativa();
		questaoAlternativa33.setId(INICIOQUESTAO.longValue());
		questaoAlternativa33.setAno(ANO);
		questaoAlternativa33.setDescricao("Considere as seguintes afirmações sobre um grafo G com $n > 0$ vértices: $\\newline$" + 
				"I - Se G é conexo o número de arestas é maior que n; $\\newline$" + 
				"II - G será acíclico somente se o número de arestas for menor que n; $\\newline$" + 
				"III - Se G não tem triângulos então G é planar; $\\newline$" + 
				"IV - G é Euleriano se, e somente se, todo grau é par. $\\newline$" + 
				"As afirmativas verdadeiras são:");
		questaoAlternativa33.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa33.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa33.setDisciplina(EDisciplina.GRAFOS);
		questaoAlternativa33.setAlternativaCorreta("d");
		questaoAlternativa33.setAlternativasA("I e II");
		questaoAlternativa33.setAlternativasB("I e III");
		questaoAlternativa33.setAlternativasC("II e III");
		questaoAlternativa33.setAlternativasD("II e IV");
		questaoAlternativa33.setAlternativasE("II, III e IV");
		questaoAlternativa33.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa34 = new QuestaoAlternativa();
		questaoAlternativa34.setId(INICIOQUESTAO.longValue());
		questaoAlternativa34.setAno(ANO);
		questaoAlternativa34.setDescricao("Um algoritmo é executado em 10 segundos para uma entrada de tamanho 50. Se o algoritmo é quadrático, quanto tempo em segundos ele gastará, aproximadamente, no mesmo computador, se a entrada tiver tamanho 100?");
		questaoAlternativa34.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa34.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa34.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa34.setAlternativaCorreta("c");
		questaoAlternativa34.setAlternativasA("10");
		questaoAlternativa34.setAlternativasB("20");
		questaoAlternativa34.setAlternativasC("40");
		questaoAlternativa34.setAlternativasD("100");
		questaoAlternativa34.setAlternativasE("500");
		questaoAlternativa34.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa35 = new QuestaoAlternativa();
		questaoAlternativa35.setId(INICIOQUESTAO.longValue());
		questaoAlternativa35.setAno(ANO);
		questaoAlternativa35.setDescricao("Considere as seguintes definições de ordens de percurso de uma árvore binária: $\\newline$\r\n" + 
				"Ordem A: $\\newline$\r\n" + 
				"      se a árvore binária não for vazia, então:" + 
				"         $\\newline$ { visitar a raiz; " + 
				"         $\\newline$ percorrer a sub-árvore esquerda em Ordem B; " + 
				"         $\\newline$ percorrer a sub-árvore direita em Ordem B;" + 
				"         $\\newline$ } $\\newline$" + 
				"Ordem B: $\\newline$" + 
				"     se a árvore binária não for vazia, então: $\\newline$" + 
				"          $\\newline${visitar a raiz;" + 
				"          $\\newline$ percorrer a sub-árvore direita em Ordem A;" + 
				"          $\\newline$ percorrer a sub-árvore esquerda em Ordem A;" + 
				"          $\\newline$} $\\newline$" + 
				"Considere a seguinte árvore binária: O percurso da árvore binária apresentada em apresentado na figura abaixo.\r\n" + 
				"Ordem A resulta em qual sequência de visitas?" + 
				"");
		questaoAlternativa35.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa35.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa35.setDisciplina(EDisciplina.ESTRUTURAS_DE_DADOS);
		questaoAlternativa35.setAlternativaCorreta("a");
		questaoAlternativa35.setImagem(true);
		questaoAlternativa35.setImagemQuestao("");
		questaoAlternativa35.setAlternativasA("A B D C E K L M F I J G H");
		questaoAlternativa35.setAlternativasB("A B C D E F G H I J K L M");
		questaoAlternativa35.setAlternativasC("A B D C E K L M F G H I J");
		questaoAlternativa35.setAlternativasD("A B E C D F K G I L M H J");
		questaoAlternativa35.setAlternativasE("A B D C E F I J G H K L M");
		questaoAlternativa35.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa36 = new QuestaoAlternativa();
		questaoAlternativa36.setId(INICIOQUESTAO.longValue());
		questaoAlternativa36.setAno(ANO);
		questaoAlternativa36.setDescricao("As seguintes expressões regulares denotam as linguagens P, Q, L e R, respectivamente: $(1 + 10)^*, (0 + 01)^*, (0 + 1)^*, 0(11)∗ + 1(00)^*$. Não se pode afirmar que:");
		questaoAlternativa36.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa36.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa36.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa36.setAlternativaCorreta("d");
		questaoAlternativa36.setAlternativasA("$P \\cap Q \\neq \\phi$");
		questaoAlternativa36.setAlternativasB("$P \\cup Q 6= L$");
		questaoAlternativa36.setAlternativasC("$P \\cap Q = \\left\\{\\in\\right\\}$");
		questaoAlternativa36.setAlternativasD("$(1 + 0)^* \\backslash P = Q$ ");
		questaoAlternativa36.setAlternativasE("$R \\subset L \\backslash (P ∪ Q)");
		questaoAlternativa36.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa37 = new QuestaoAlternativa();
		questaoAlternativa37.setId(INICIOQUESTAO.longValue());
		questaoAlternativa37.setAno(ANO);
		questaoAlternativa37.setDescricao("Qual é a função implementada pelo circuito CMOS mostrado na figura abaixo?");
		questaoAlternativa37.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa37.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa37.setDisciplina(EDisciplina.ELETRONICA_DIGITAL);
		questaoAlternativa37.setAlternativaCorreta("a");
		questaoAlternativa37.setImagem(true);
		questaoAlternativa37.setImagemQuestao("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H81T63BGSOuPLvh5cv/5R9SonKP1BqD1RRRkZa5b8rsutSN9kXXuHjHpldemT31udL87b7jm+jsenZ52OKg+DGUkovXB3W/eF++Pv+/N3TzfFlpvAFof3snZPeIiAm2m7CxQE8Gslb9qEuOveve0LeemUCYSWp+/ccLtta+p7I9uNnFTedrH2bBhw8MPP/yjQtbBxo0bQ/O03gClb30wGHz33XdTU1Nr1KiRlJQ0adKkY8eOhT7GQLnzf1bVf37rLYf+2DEmItD4mQ3s4johoPXZS4ak9H9/3uC6kZH1hq0oL3+9YcmSJTVr1pw6deo3hawDa7h06VJridYboJStt0L/6KOPpqSkfPTRR//973/XrVvXp0+fpk2bHjli6IZmuNZnvfNAbERU/dHp7Nw74fnWB/e/2yP1yVWn89eNbRTw13jog0PlYB8nOzu7evXq6enpalwoLS3Nmjx58iStN0ApW//ee++1aNHioj9Q9cQTTwwaNEgNDFO09cfSxqdU8sckj//naTWDMvF66wsyXmjb7sWvrSe+YMfUu2L9ce2mZZq/bff222/37NlTDc7TvXv3d955h9YboJStb9269aJFi9TUOYcOHUpISLBuCNTYJIWtj6zZ4qePDxs5cviQR7qlXhdbsW6H8Yv+wwaOQx5vfe5no1r0+NO+wlv54IE/97A+5Tcau07rS7nRo0eHtrxd1qZNm2vLynqfT548WT2A80yaNGncuHG03gClbH2tWrX27dunps5jvcCsL/LUy0VT06ZNQy9R961bt049gOKE7uubjflk8/Yd2zPWfzpv2sh76lascG2Lge/8i7++64i3W394bu9a9doPHKYMuuf6QETkdYM+0rmhOXbsmPVuuSr2ltVvf/vbsF+kP/bYY9OmTaP1Bihl6xs1apSWlqamzsnJyalcufJXX32lXi6a1Kvzavjuu+/UYyhOmP36gswZnar7I6IbjV3Lhr0DXm59Qea0+1r9ZsWu3T/YuWTkLQF/1e6z9pu9ab9///6qVat+8803alxoz5491uSBAwdovQFK2Xrrue7evfuZM2fUbKGpU6d269ZNDQwT7nuzZ0/M6Rkf4Qu0emmH+fu3V46HW396zVMtu76154KqW/lvF+ePaf2S8T9r+8orr9x0002ffvppaGgdWMNXX33VOqb1Bihl60+ePNmyZcuf//zn1v24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eULrDUDri5ezfdGLgzok172mRu0bG6XceU/nPr98Y1WRG31o8vb3ZhEOrTcArYfLaL08tN4AtB4uo/Xy0HoD0Hq4jNbLQ+sNQOvhMlovD603AK2Hy2i9PLTeALQeLqP18tB6A9B6uIzWy0PrDUDr4TJaLw+tNwCth8tovTy03gC0Hi6j9fLQegPQeriM1stD6w1A6+EyWi8PrTcArYfLaL08tN4AtB4uo/XylNj6hISEqWW1bds2dSKUwoIFC9SF0zRp0iSf71LvPlqPy4vWy5OXl5ebm6sGRaxfv/6XZfXII480aNBAnQgl+eKLL5KSktS10/erX/1KnSic48ePnzlzRg0Ax2g9bBkZGVa81AAlSU9PT0lJUQPA22g9bLReC62HILQeNlqvhdZDEFoPG63XQushCK2HjdZrofUQhNbDRuu10HoIQutho/VaaD0EofWw0XottB6C0HrYaL0WWg9BaD1stF4LrYcgtB42Wq+F1kMQWg8brddC6yEIrYeN1muh9RCE1sNG67XQeghC62Gj9VpoPQSh9bDRei20HoLQethovRZaD0FoPWy0XguthyC0HjZar4XWQxBaD9vWrVs7duyoBijJF1980atXLzUAvI3Ww/b111/Xr19fDVCSNWvWpKamqgHgbbQeNlqvhdZDEFoPG63XQushCK2HjdZrofUQhNbDRuu10HoIQutho/VaaD0EofWw0XottB6C0HrYaL0WWg9BaD1stF4LrYcgtB42Wq+F1kMQWg8brddC6yEIrYeN1muh9RCE1sNG67XQeghC62Gj9VpoPQSh9bDRei20HoLQethovRZaD0FoPWy0XguthyC0HjZar4XWQxBaDxut10LrIQith43Wa6H1EITWw0brtdB6CELrYaP1Wmg9BKH1sNF6LbQegtB62Gi9FloPQWg9bLReC62HILQeNlqvhdZDEFoPG63XQushCK2HjdZrofUQhNbDRuu10HoIQutho/VaaD0EofWw0XottB6C0HrYaL0WWg9BaD1stF4LrYcgtB42Wq+F1kMQWg8brddC6yEIrYeN1muh9RCE1sNG67XQeghC62Gj9VpoPQSh9bDRei20HoLQeti2bNny4IMPqgFKsnjx4ptvvlkNAG+j9bBlZGQkJSWpAUryxz/+MS4uTg0Ab6P1sNF6LbQegtB62Gi9FloPQWg9bLReC62H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");
		questaoAlternativa37.setAlternativasA("F = \\overline{(A · B) + (C · D)}");
		questaoAlternativa37.setAlternativasB("F = \\overline{(A + B) · (C + D)}");
		questaoAlternativa37.setAlternativasC("F = \\overline{(A · B)} + (C · D)");
		questaoAlternativa37.setAlternativasD("F = (A + B) · (C + D)");
		questaoAlternativa37.setAlternativasE("F = (A · B) + (C · D)");
		questaoAlternativa37.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa38 = new QuestaoAlternativa();
		questaoAlternativa38.setId(INICIOQUESTAO.longValue());
		questaoAlternativa38.setAno(ANO);
		questaoAlternativa38.setDescricao("Para um certo problema foram apresentados dois algoritmos de divisão e conquista, A e B, cujos tempos de execução são descritos, respectivamente, por $T_A(n) = 7T_A(n/2) + n^3 e T_B(n) = \\alpha T_B(n/4) + n^2$. Qual é o maior valor inteiro para $\\alpha$, tal que o tempo de execução de B seja assintoticamente menor que o de A, isto é, $T_B(n) \\ \\epsilon  \\ o(T_A(n))$?");
		questaoAlternativa38.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa38.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa38.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa38.setAlternativaCorreta("c");
		questaoAlternativa38.setAlternativasA("16");
		questaoAlternativa38.setAlternativasB("49");
		questaoAlternativa38.setAlternativasC("63");
		questaoAlternativa38.setAlternativasD("64");
		questaoAlternativa38.setAlternativasE("65");
		questaoAlternativa38.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa39 = new QuestaoAlternativa();
		questaoAlternativa39.setId(INICIOQUESTAO.longValue());
		questaoAlternativa39.setAno(ANO);
		questaoAlternativa39.setDescricao("Em um sistema operacional, um processo pode, em um dado instante de tempo, estar em um de três estados: em execução, pronto ou bloqueado. Considere as afirmativas abaixo sobre as possíveis transições entre estes estados que um processo pode realizar. $\\newline$" + 
				"I. Do estado em execução para o estado bloqueado $\\newline$" + 
				"II. Do estado em execução para o estado pronto $\\newline$" + 
				"III. Do estado pronto para o estado em execução $\\newline$" + 
				"IV. Do estado pronto para o estado bloqueado $\\newline$" + 
				"V. Do estado bloqueado para o estado em execução $\\newline$" + 
				"VI. Do estado bloqueado para o estado pronto $\\newline$" + 
				"Quais são as afirmativas verdadeiras?");
		questaoAlternativa39.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa39.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa39.setDisciplina(EDisciplina.SISTEMAS_OPERACIONAIS);
		questaoAlternativa39.setAlternativaCorreta("b");
		questaoAlternativa39.setAlternativasA("Somente as afirmativas I, II e III são verdadeiras.");
		questaoAlternativa39.setAlternativasB("Somente as afirmativas I, II, III e VI são verdadeiras.");
		questaoAlternativa39.setAlternativasC("Somente as afirmativas I, III, IV e VI são verdadeiras.");
		questaoAlternativa39.setAlternativasD("Somente as afirmativas I, III, IV e V são verdadeiras.");
		questaoAlternativa39.setAlternativasE("Todas as afirmativas são verdadeiras");
		questaoAlternativa39.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa40 = new QuestaoAlternativa();
		questaoAlternativa40.setId(INICIOQUESTAO.longValue());
		questaoAlternativa40.setAno(ANO);
		questaoAlternativa40.setDescricao("Dado o trecho de programa, conforme a figura abaixo.\r\n" + 
				"$\\newline$" + 
				"Onde T1 e T2 indicam mecanismos de passagem de parâmetros (por valor ou por referência). A tabela abaixo deve ser preenchida com os valores a serem impressos pelo programa para cada combinção de T1 e T2." + 
				"$\\newline$" + 
				"\\begin{table}[ht]" + 
				"\\centering" + 
				"\\resizebox{\\textwidth}{!}{%\r\n" + 
				"\\begin{tabular}{cc|c|l|}" + 
				"\\cline{3-4}" + 
				"\\multicolumn{1}{l}{}                      & \\multicolumn{1}{l|}{} & \\multicolumn{2}{c|}{T1}                                 \\ \\hline" + 
				"\\multicolumn{1}{|c|}{\\multirow{T2}} & Valor                 & Valor                 & \\multicolumn{1}{c|}{Referência} \\ \\cline{2-4} " + 
				"\\multicolumn{1}{|c|}{}                    & Referência            & \\multicolumn{1}{l|}{} &                                 \\ \\hline" + 
				"\\end{tabular}%" + 
				"}" + 
				"\\end{table}" + 
				"$\\newline$" + 
				"Qual das alternativas abaixo preenche a tabela acima com os valores a serem impressos pelo trecho de programa?");
		questaoAlternativa40.setArea(EArea.FUNDAMENTOS_DE_COMPUTACAO);
		questaoAlternativa40.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa40.setDisciplina(EDisciplina.PROGRAMACAO);
		questaoAlternativa40.setAlternativaCorreta("a");
		questaoAlternativa40.setAlternativasA("$\\begin{table}[]\r\n" + 
				"\\centering\r\n" + 
				"\\resizebox{\\textwidth}{!}{%\r\n" + 
				"\\begin{tabular}{|ll|ll|}\r\n" + 
				"\\hline\r\n" + 
				"2 & 3 & 4 & 3 \\ \\hline\r\n" + 
				"2 & 7 & 4 & 7 \\ \\hline\r\n" + 
				"\\end{tabular}%\r\n" + 
				"}\r\n" + 
				"\\end{table}$");
		questaoAlternativa40.setAlternativasB("$\\begin{table}[]\r\n" + 
				"\\centering\r\n" + 
				"\\resizebox{\\textwidth}{!}{%\r\n" + 
				"\\begin{tabular}{|ll|ll|}\r\n" + 
				"\\hline\r\n" + 
				"2 & 3 & 2 & 7 \\ \\hline\r\n" + 
				"4 & 3 & 4 & 7 \\ \\hline\r\n" + 
				"\\end{tabular}%\r\n" + 
				"}\r\n" + 
				"\\end{table}$");
		questaoAlternativa40.setAlternativasC("$\\begin{table}[]\r\n" + 
				"\\centering\r\n" + 
				"\\resizebox{\\textwidth}{!}{%\r\n" + 
				"\\begin{tabular}{|ll|ll|}\r\n" + 
				"\\hline\r\n" + 
				"2 & 3 & 4 & 7 \\ \\hline\r\n" + 
				"2 & 3 & 4 & 7 \\ \\hline\r\n" + 
				"\\end{tabular}%\r\n" + 
				"}\r\n" + 
				"\\end{table}$");
		questaoAlternativa40.setAlternativasD("$\\begin{table}[]\r\n" + 
				"\\centering\r\n" + 
				"\\resizebox{\\textwidth}{!}{%\r\n" + 
				"\\begin{tabular}{|ll|ll|}\r\n" + 
				"\\hline\r\n" + 
				"2 & 3 & 2 & 3 \\ \\hline\r\n" + 
				"2 & 3 & 2 & 3 \\ \\hline\r\n" + 
				"\\end{tabular}%\r\n" + 
				"}\r\n" + 
				"\\end{table}$");
		questaoAlternativa40.setAlternativasE("$\\begin{table}[]\r\n" + 
				"\\centering\r\n" + 
				"\\resizebox{\\textwidth}{!}{%\r\n" + 
				"\\begin{tabular}{|ll|ll|}\r\n" + 
				"\\hline\r\n" + 
				"4 & 7 & 4 & 7 \\ \\hline\r\n" + 
				"4 & 7 & 4 & 7 \\ \\hline\r\n" + 
				"\\end{tabular}%\r\n" + 
				"}\r\n" + 
				"\\end{table}$");
		questaoAlternativa40.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		
//		TODO FINALIZADO
		
		QuestaoAlternativa questaoAlternativa41 = new QuestaoAlternativa();
		questaoAlternativa41.setId(INICIOQUESTAO.longValue());
		questaoAlternativa41.setAno(ANO);
		questaoAlternativa41.setDescricao("Considere as seguintes tabelas em uma base de dados relacional, contendo informações sobre empregados, departamentos e a vinculação entre eles: $\\newline$ Departamento (CodDepto, NomeDepto) $\\newline$" + 
				"Empregado (CodEmp, NomeEmp, CodDepto) $\\newline$ Deseja-se obter os nomes dos departamentos (NomeDepto) que não estão vinculados a nenhum Empregado. Para obter este resultado a consulta correta em SQL/2 é a seguinte:");
		questaoAlternativa41.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa41.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa41.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa41.setAlternativaCorreta("c");
		questaoAlternativa41.setAlternativasA("SELECT NomeDepto FROM Departamento D, Empregado E WHERE D.CodDepto=E.CodDepto AND E.CodEmp IS NULL");
		questaoAlternativa41.setAlternativasB("SELECT NomeDepto FROM Departamento D WHERE EXISTS (SELECT * FROM Empregado E WHERE CodDepto=D.CodDepto)");
		questaoAlternativa41.setAlternativasC("(SELECT NomeDepto FROM Departamento D) EXCEPT (SELECT NomeDepto FROM Departamento D, Empregado E WHERE D.CodDepto=E.CodDepto)");
		questaoAlternativa41.setAlternativasD("SELECT NomeDepto FROM Departamento D, Empregado E WHERE D.CodDepto<>E.CodDepto");
		questaoAlternativa41.setAlternativasE("SELECT NomeDepto FROM Departamento D WHERE CodDepto IN (SELECT CodDepto FROM Empregado E)");
		questaoAlternativa41.setNumeroQuestao(NUMEROQUESTAO);


		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa42 = new QuestaoAlternativa();
		questaoAlternativa42.setId(INICIOQUESTAO.longValue());
		questaoAlternativa42.setAno(ANO);
		questaoAlternativa42.setDescricao("Considere um modelo entidade-relacionamento de uma indústria. Este modelo representa peças com suas propriedades, bem como a composição de peças (peças podem ser usadas na composição de outras peças). Este modelo entidaderelacionamento contém:\r\n" + 
				"$\\newline$ • Uma entidade Peça, com atributos código e nome e peso.\r\n" + 
				"$\\newline$ • Um auto-relacionamento de Peça, chamado Composição. Neste autorelacionamento uma peça tem papel de componente e outra peça papel de composto. O auto-relacionamento tem cardinalidade n:n e tem um atributo quantidade, que informa quantas unidades da peça componente são usadas na peça composto.\r\n" + 
				"$\\newline$ Uma base de dados relacional que implementa corretamente este modelo entidaderelacionamento e está na terceira forma normal é (chaves primárias estão sublinhadas):");
		questaoAlternativa42.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa42.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa42.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa42.setAlternativaCorreta("a");
		questaoAlternativa42.setAlternativasA("Peca (CodPeca, NomePeca, PesoPeca)\r\n" + 
				"$\\newline$Composicao(CodPecaComposto,CodPecaComponente,Quantidade)\r\n" + 
				"$\\newline$Composição.CodPecaComposto referencia Peca\r\n" + 
				"$\\newline$Composição.CodPecaComponente referencia Peca");
		questaoAlternativa42.setAlternativasB("Peca (CodPeca, NomePeca, PesoPeca, CodPecaComposto,\r\n" + 
				"Quantidade)\r\n" + 
				"$\\newline$Peca.CodPecaComposto referencia Peca");
		questaoAlternativa42.setAlternativasC("Peca (CodPeca, NomePeca, PesoPeca)\r\n" + 
				"$\\newline$Composicao(CodPecaComposto,CodPecaComponente,Quantidade)\r\n" + 
				"$\\newline$Composição.CodPecaComposto referencia Peca\r\n" + 
				"$\\newline$Composição.CodPecaComponente referencia Peca");
		questaoAlternativa42.setAlternativasD("Peca (CodPeca, NomePeca, PesoPeca, CodPecaComposto,\r\n" + 
				"CodPecaComponente,Quantidade)\r\n" + 
				"$\\newline$Peca.CodPecaComposto referencia Peca\r\n" + 
				"$\\newline$Peca.CodPecaComponente referencia Peca");
		questaoAlternativa42.setAlternativasE("Composto (CodPeca, NomePeca, PesoPeca)\r\n" + 
				"$\\newline$Componente (CodPeca, NomePeca, PesoPeca, CodPecaComposto\r\n" + 
				"Quantiade)\r\n" + 
				"$\\newline$Componente.CodPecaComposto referencia Composto");
		questaoAlternativa42.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa43 = new QuestaoAlternativa();
		questaoAlternativa43.setId(INICIOQUESTAO.longValue());
		questaoAlternativa43.setAno(ANO);
		questaoAlternativa43.setDescricao("Na álgebra relacional, a operação de junção interna entre duas tabelas A e B e com critério de junção C tem a função de:");
		questaoAlternativa43.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa43.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa43.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa43.setAlternativaCorreta("a");
		questaoAlternativa43.setAlternativasA("Concatenar cada linha da tabela A com cada linha da tabela B sempre que o critério de junção C for verdadeiro. Linhas de A e B para as quais o critério de junção não é verdadeiro não aparecem no resultado.");
		questaoAlternativa43.setAlternativasB("Concatenar cada linha da tabela A com cada linha da tabela B sempre que o critério de junção C for verdadeiro. Caso para uma linha de A não exista nenhuma linha em B que torne o critério verdadeiro, a linha de A aparece no resultado concatenada com campos vazios (NULL).");
		questaoAlternativa43.setAlternativasC("Concatenar cada linha da tabela A com cada linha da tabela B sempre que o critério de junção C for verdadeiro. Caso para uma linha de B não exista nenhuma linha em A que torne o critério verdadeiro, a linha de A aparece no resultado concatenada com campos vazios (NULL).");
		questaoAlternativa43.setAlternativasD("Concatenar cada linha da tabela A com cada linha da tabela B.");
		questaoAlternativa43.setAlternativasE("Concatenar a tabela A com a tabela B, isto é, formar uma tabela formada por linhas que aparecem em A ou B.");
		questaoAlternativa43.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa44 = new QuestaoAlternativa();
		questaoAlternativa44.setId(INICIOQUESTAO.longValue());
		questaoAlternativa44.setAno(ANO);
		questaoAlternativa44
				.setDescricao("Considere as seguintes tabelas em uma base de dados relacional, contendo informações sobre empregados, departamentos e a vinculação entre eles:\r\n" + 
						"$\\newline$ Departamento (CodDepto, NomeDepto)\r\n" + 
						"$\\newline$ Empregado (CodEmp, NomeEmp, CodDepto, SalarioEmp)\r\n" + 
						"Considere a seguinte consulta sobre esta base de dados:\r\n" + 
						"$\\newline$ SELECT D.CodDepto, AVG(SalarioEmp)\r\n" + 
						"FROM Departamento D, Empregado E\r\n" + 
						"WHERE E.CodDepto=D.CodDepto AND\r\n" + 
						"E.SalarioEmp > 300\r\n" + 
						"GROUP BY D.CodDepto\r\n" + 
						"HAVING COUNT(*) > 20\r\n" + 
						"$\\newline$ Esta consulta SQL tem o seguinte resultado:");

		questaoAlternativa44.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa44.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa44.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa44.setAlternativaCorreta("e");
		questaoAlternativa44.setAlternativasA("Para departamentos com mais que 20 empregados que tenham salário maior que 300, obter o código do departamento e a média salarial dos empregados do departamento.");
		questaoAlternativa44.setAlternativasB("Para departamentos que tem mais que 20 empregados nos quais todos empregados tem salário maior que 300, obter o código do departamento e a média salarial dos empregados que ganham mais que 300.");
		questaoAlternativa44.setAlternativasC("Para departamentos que tem mais que 20 empregados nos quais todos empregados tem salário maior que 300, obter o código do departamento e a média salarial dos empregados do departamento.");
		questaoAlternativa44.setAlternativasD("Para departamentos que tem mais que 20 empregados, obter o código do departamento e a média salarial dos empregados que ganham mais que 300.");
		questaoAlternativa44.setAlternativasE("Para departamentos com mais que 20 empregados que tenham salário maior que 300, obter o código do departamento e a média salarial dos empregados do departamento que ganham mais que 300.");
		questaoAlternativa44.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa45 = new QuestaoAlternativa();
		questaoAlternativa45.setId(INICIOQUESTAO.longValue());
		questaoAlternativa45.setAno(ANO);
		questaoAlternativa45.setDescricao("Transações em SGBD relacionais normalmente preenchem os requisitos ACID (atomicidade, consistência, isolamento e durabilidade). Considere as seguintes afirmações:\r\n" + 
				"$\\newline$I) Isolamento significa que o efeito das operações de alteração efetuadas por uma transação T não são vistas por outras transações, até que a transação T encerre.\r\n" + 
				"$\\newline$II) Isolamento significa que os dados protegidos para alteração por uma transação não podem ser protegidos para alteração por outra transação.\r\n" + 
				"$\\newline$III) Durabilidade significa que o efeito de uma operação (INSERT, DELETE ou UPDATE) sobre a base de dados não pode ser desfeito.\r\n" + 
				"$\\newline$IV)Durabilidade significa que o efeito das operações de alteração executadas por uma transação não pode ser desfeito, após do final bem sucedido (COMMIT) da transação.\r\n" + 
				"$\\newline$ Quanto a estas afirmativas vale que:");
		questaoAlternativa45.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa45.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa45.setDisciplina(EDisciplina.BANCO_DE_DADOS);
		questaoAlternativa45.setAlternativaCorreta("d");
		questaoAlternativa45.setAlternativasA("Somente as afirmativas I) e III) são corretas.");
		questaoAlternativa45.setAlternativasB("Somente as afirmativas I) e IV) são corretas");
		questaoAlternativa45.setAlternativasC("Somente as afirmativas II) e III) são corretas");
		questaoAlternativa45.setAlternativasD("Somente as afirmativas II) e IV) são corretas.");
		questaoAlternativa45.setAlternativasE("Somente a afirmativa I) é correta.");
		questaoAlternativa45.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa46 = new QuestaoAlternativa();
		questaoAlternativa46.setId(INICIOQUESTAO.longValue());
		questaoAlternativa46.setAno(ANO);
		questaoAlternativa46.setDescricao("A construção de sistemas é difícil devido à sua complexidade. Um fator crucial para gerenciar esta complexidade é o processo adotado para o desenvolvimento. O conjunto básico de atividades e a ordem em que são realizadas neste processo definem o que é também denominado de ciclo de vida do software. Analise as seguintes afirmações sobre processos de software:\r\n" + 
				"$\\newline$ I. Um modelo de processo de software é uma representação abstrata de um processo; Exemplos de modelo de processos de software genéricos são o modelo waterfall (cascata) e o spiral (espiral);\r\n" + 
				"$\\newline$ II. O modelo de processo waterfall ainda é hoje em dia um dos mais difundidos e tem por característica principal a codificação de uma versão executável do sistema desde as fases iniciais do desenvolvimento, de modo que o sistema final é incrementalmente construído, daí a alusão à idéia de “cascata” (waterfall);\r\n" + 
				"$\\newline$ III. Em um processo de software incremental, o desenvolvimento do sistema é iterativo e partes de suas funcionalidades (denominadas “incrementos”) são entregues na medida em que são desenvolvidas; assim, estas entregas parciais tentam priorizar as necessidades mais urgentes do usuário e podem auxiliar a revisão e a uma melhor definição das partes ainda não entregues;\r\n" + 
				"$\\newline$ Levando-se em conta as três afirmações I, II e III acima, identifique a única alternativa válida:");
		questaoAlternativa46.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa46.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa46.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa46.setAlternativaCorreta("c");
		questaoAlternativa46.setAlternativasA("apenas a I e a II estão corretas;");
		questaoAlternativa46.setAlternativasB("apenas a II e a III estão corretas;");
		questaoAlternativa46.setAlternativasC("apenas a I e a III estão corretas;");
		questaoAlternativa46.setAlternativasD("as afirmações I, II e III estão corretas;");
		questaoAlternativa46.setAlternativasE("apenas a III está correta;");
		questaoAlternativa46.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa47 = new QuestaoAlternativa();
		questaoAlternativa47.setId(INICIOQUESTAO.longValue());
		questaoAlternativa47.setAno(ANO);
		questaoAlternativa47.setDescricao("Qual das alternativas abaixo não é um dos diagramas existentes na linguagem de modelagem UML (Unified Modeling Language) :");
		questaoAlternativa47.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa47.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa47.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa47.setAlternativaCorreta("d");
		questaoAlternativa47.setAlternativasA("Diagramas de Casos de Uso (use case diagrams);");
		questaoAlternativa47.setAlternativasB("Diagramas de Classes (class diagrams);");
		questaoAlternativa47.setAlternativasC("Diagramas de Seqüência (sequence diagrams);");
		questaoAlternativa47.setAlternativasD("Diagramas Entidade-Relacionamento (entity-relationship diagrams);");
		questaoAlternativa47.setAlternativasE("Diagramas de Estado (statechart diagram);");
		questaoAlternativa47.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa48 = new QuestaoAlternativa();
		questaoAlternativa48.setId(INICIOQUESTAO.longValue());
		questaoAlternativa48.setAno(ANO);
		questaoAlternativa48.setDescricao("A linguagem de modelagem UML contém a definição de vários diagramas que permitem representar diferentes partes de um modelo de sistema tipicamente aplicada a sistemas orientados a objetos. Analise as seguintes afirmações referentes a UML:\r\n" + 
				"$\\newline$ I. Diagramas de Casos de Uso permitem uma descrição do escopo e do comportamento pretendido do sistema através da representação das interações entre atores e o próprio sistema;\r\n" + 
				"$\\newline$ II. Diagramas de Estado são similares a Diagramas de Atividade mas uma diferença básica entre eles é que os primeiros representam comportamento que causa mudanças de estado de um simples elemento (tipicamente um objeto) e são usados geralmente durante o projeto do software enquanto os segundos representam comportamento entre diferentes elementos e geralmente são usados para modelar os fluxos das atividades de negócios durante a análise do software;\r\n" + 
				"$\\newline$ III. Diagramas de Seqüência representam as interações entre objetos para a realização de algum comportamento do sistema, dando ênfase à ordenação temporal das trocas de mensagens entre os objetos;\r\n" + 
				"$\\newline$ Levando-se em conta as três afirmações I, II e III acima, identifique a única alternativa válida:");
		questaoAlternativa48.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa48.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa48.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa48.setAlternativaCorreta("d");
		questaoAlternativa48.setAlternativasA("apenas a I e a II estão corretas;");
		questaoAlternativa48.setAlternativasB("apenas a II e a III estão corretas;");
		questaoAlternativa48.setAlternativasC("apenas a I e a III estão corretas;");
		questaoAlternativa48.setAlternativasD("as afirmações I, II e III estão corretas;");
		questaoAlternativa48.setAlternativasE("apenas a III está correta.");
		questaoAlternativa48.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa49 = new QuestaoAlternativa();
		questaoAlternativa49.setId(INICIOQUESTAO.longValue());
		questaoAlternativa49.setAno(ANO);
		questaoAlternativa49.setDescricao("Engenharia de Software inclui um grande número de teorias, conceitos, modelos, técnicas e métodos. Analise as seguintes definições.\r\n" + 
				"$\\newline$ I. No planejamento de projetos de software, há várias técnicas que podem ser usadas para estimativa de custo e esforço. A técnica de Pontos por Função é uma técnica de estimativa que, embora não seja relacionada diretamente a linhas de código, é utilizada também para a obtenção de métricas de produtividade e qualidade do desenvolvimento de software;\r\n" + 
				"$\\newline$ II. CMM (Capability Maturity Model) é um modelo estabelecido pelo Software Engineering Institute (SEI) que propõe níveis de competência organizacional relacionados à qualidade do processo de desenvolvimento de software;\r\n" + 
				"$\\newline$ III. Engenharia Reversa é o processo de inferir ou reconstruir um modelo de mais alto nível (projeto ou especificação) a partir de um documento de mais baixo nível (tipicamente um código fonte);\r\n" + 
				"$\\newline$ Levando-se em conta as três afirmações I, II e III acima, identifique a única alternativa válida:");
		questaoAlternativa49.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa49.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa49.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa49.setAlternativaCorreta("e");
		questaoAlternativa49.setAlternativasA("apenas a I está correta;");
		questaoAlternativa49.setAlternativasB("apenas a II está correta.");
		questaoAlternativa49.setAlternativasC("apenas a II e a III estão corretas");
		questaoAlternativa49.setAlternativasD("apenas a I e a III estão corretas;");
		questaoAlternativa49.setAlternativasE("as afirmações I, II e III estão corretas");
		questaoAlternativa49.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa50 = new QuestaoAlternativa();
		questaoAlternativa50.setId(INICIOQUESTAO.longValue());
		questaoAlternativa50.setAno(ANO);
		questaoAlternativa50.setDescricao("As seguintes afirmações dizem respeito ao uso de Padrões de Projeto (Design Patterns), mais especificamente os padrões GoF (apresentados e descritos no livro clássico de E. Gamma, R. Helm, R. Johnson e J. Vlissides).\r\n" + 
				"$\\newline$ I. Padrões de Projeto são descrições de grupos de classes (e objetos) que colaboram para resolver um problema geral e recorrente num contexto determinado;\r\n" + 
				"$\\newline$ II. Os padrões GoF são em número de 45 (quarenta e cinco) e dividem-se tipicamente em padrões estruturais (ou de estrutura), comportamentais (ou de comportamento) , de criação, de delegação e de combinação.\r\n" + 
				"$\\newline$ III. Padrões de criação permitem maior flexibilidade na criação de objetos ou de coleções de objetos. O padrão Singleton, por exemplo, assegura que uma classe tem exatamente uma única instância;\r\n" + 
				"$\\newline$ Levando-se em conta as três afirmações I, II e III acima, identifique a única alternativa válida:");
		questaoAlternativa50.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa50.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa50.setDisciplina(EDisciplina.PROGRAMACAO);
		questaoAlternativa50.setAlternativaCorreta("c");
		questaoAlternativa50.setAlternativasA("Apenas a I e a II estão corretas;");
		questaoAlternativa50.setAlternativasB("Apenas a II e a III estão corretas;");
		questaoAlternativa50.setAlternativasC("Apenas a I e a III estão corretas;");
		questaoAlternativa50.setAlternativasD("Todas as afirmações estão corretas;");
		questaoAlternativa50.setAlternativasE("Nenhuma das afirmações está correta;");
		questaoAlternativa50.setNumeroQuestao(NUMEROQUESTAO);


		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		
		QuestaoAlternativa questaoAlternativa51 = new QuestaoAlternativa();
		questaoAlternativa51.setId(INICIOQUESTAO.longValue());
		questaoAlternativa51.setAno(ANO);
		questaoAlternativa51.setDescricao("A situação atual do desenvolvimento de software encontra-se aquém do ideal. Sistemas são invariavelmente entregues com atraso ou com o orçamento estourado, isto quando são efetivamente entregues... E o que é pior, freqüentemente eles não atendem os requisitos dos clientes. Existem várias alternativas de tentar enfrentar este desafio, entre as quais a adoção de métodos formais, a sistematização do\r\n" + 
				"desenvolvimento usando processos tais como o Unified Process e a integração de novas tecnologias. Uma outra abordagem que recentemente vem ganhando adeptos é o Desenvolvimento Ágil de software. As seguintes afirmações dizem respeito a ele.\r\n" + 
				"$\\newline$ I. Suas idéias principais estão divulgadas em um Manifesto para o Desenvolvimento Ágil de Software escrito pela Aliança Ágil (Agile Alliance), que reúne autores famosos como Martin Fowler, Alistair Cockburn, Scott Ambler, Ward Cunningham e Kent Beck;\r\n" + 
				"$\\newline$ II. Desnvolvimento Ágil basicamente concentra-se em melhorias na comunicação (interna à equipe e com os clientes), na entrega incremental de várias versões funcionais do software continuamente até o fim do projeto e na maleabilidade e dinamicidade do desenvolvimento, facilitando as respostas às mudanças que aparecem durante este desenvolvimento. "+ 
				"$\\newline$ III. A técnica mais conhecida de Desenvolvimento Ágil é a Programação eXtrema (Extreme Programming - XP) que entre suas práticas possui programação em pares (pair programming), entregas pequenas (small releases) e frequentes, a propriedade coletiva do código (collective ownership), abolindo as práticas de teste e os padrões de codificação;\r\n" + 
				"$\\newline$ Levando-se em conta as três afirmações I, II III acima, identifique a única alternativa válida:");
		questaoAlternativa51.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa51.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa51.setDisciplina(EDisciplina.ENGENHARIA_DE_SOFTWARE);
		questaoAlternativa51.setAlternativaCorreta("a");
		questaoAlternativa51.setAlternativasA("Apenas a I e a II estão corretas;");
		questaoAlternativa51.setAlternativasB("Apenas a II e a III estão corretas;");
		questaoAlternativa51.setAlternativasC("Apenas a I e a III estão corretas;");
		questaoAlternativa51.setAlternativasD("Todas as afirmações estão corretas;");
		questaoAlternativa51.setAlternativasE("Nenhuma das afirmações está correta;");
		questaoAlternativa51.setNumeroQuestao(NUMEROQUESTAO);


		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa52 = new QuestaoAlternativa();
		questaoAlternativa52.setId(INICIOQUESTAO.longValue());
		questaoAlternativa52.setAno(ANO);
		questaoAlternativa52.setDescricao("Considere as funções booleanas abaixo:\r\n" + 
				"$\\newline$ I. p ^ q (conjunção)\r\n" + 
				"$\\newline$ II. p ↔ q (equivalência)\r\n" + 
				"$\\newline$ III. p → q (implicação)\r\n" + 
				"$\\newline$ Quais destas funções podem ser implementadas por um perceptron elementar?");
		questaoAlternativa52.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa52.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa52.setDisciplina(EDisciplina.INTELIGENCIA_ARTIFICIAL);
		questaoAlternativa52.setAlternativaCorreta("c");
		questaoAlternativa52.setAlternativasA("Somente I;");
		questaoAlternativa52.setAlternativasB("Somente I e II;");
		questaoAlternativa52.setAlternativasC("Somente I e III;");
		questaoAlternativa52.setAlternativasD("Somente II e III;");
		questaoAlternativa52.setAlternativasE(" I, II e III.");
		questaoAlternativa52.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa53 = new QuestaoAlternativa();
		questaoAlternativa53.setId(INICIOQUESTAO.longValue());
		questaoAlternativa53.setAno(ANO);
		questaoAlternativa53.setDescricao("Considere um algoritmo genético que opera sobre três indivíduos A, B, C, descritos respectivamente pelos vetores binários A = [11011000], B = [00010000], C = [11001101], gerando dois novos indivíduos D = [11011001] e E = [11011000] Os novos indivíduos foram gerados através de:");
		questaoAlternativa53.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa53.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa53.setDisciplina(EDisciplina.INTELIGENCIA_ARTIFICIAL);
		questaoAlternativa53.setAlternativaCorreta("d");
		questaoAlternativa53.setAlternativasA("Crossover pelo ponto central dos indivíduos A e C;");
		questaoAlternativa53.setAlternativasB("Crossover pelo ponto central dos indivíduos A e B;");
		questaoAlternativa53.setAlternativasC("Crossover pelo ponto central dos indivíduos A e B seguido de mutação de um bit em cada novo indivíduo (D e E);");
		questaoAlternativa53.setAlternativasD("Crossover pelo ponto central dos indivíduos A e C seguido de mutação de um bit em cada novo indivíduo (D e E);");
		questaoAlternativa53.setAlternativasE("Crossover pelo ponto central dos indivíduos B e C seguido de mutação de um bit em cada novo indivíduo (D e E).");
		questaoAlternativa53.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa54 = new QuestaoAlternativa();
		questaoAlternativa54.setId(INICIOQUESTAO.longValue());
		questaoAlternativa54.setAno(ANO);
		questaoAlternativa54.setDescricao("Considere as afirmações sobre características desejáveis do domínio e da tarefa, para o uso de sistemas especialistas.\r\n" + 
						"$\\newline$ I. O domínio é caracterizado por ser intensivo em conhecimento.\r\n" + 
						"$\\newline$ II. A tarefa requer conhecimento de um grande número de áreas.\r\n" + 
						"$\\newline$ III. Abordagens tradicionais (algorítmicas) para a tarefa não são satisfatórias.\r\n" + 
						"$\\newline$ São corretas:");
		questaoAlternativa54.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa54.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa54.setDisciplina(EDisciplina.INTELIGENCIA_ARTIFICIAL);
		questaoAlternativa54.setAlternativaCorreta("c");
		questaoAlternativa54.setAlternativasA("Apenas II");
		questaoAlternativa54.setAlternativasB("Apenas I e II");
		questaoAlternativa54.setAlternativasC("Apenas I e III");
		questaoAlternativa54.setAlternativasD("Apenas II e III");
		questaoAlternativa54.setAlternativasE("I, II e III");
		questaoAlternativa54.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa55 = new QuestaoAlternativa();
		questaoAlternativa55.setId(INICIOQUESTAO.longValue());
		questaoAlternativa55.setAno(ANO);
		questaoAlternativa55.setDescricao("Considere as afirmações sobre resolução de problemas em IA.\r\n" + 
				"$\\newline$ I. Busca pela melhor escolha é um tipo de busca heurística .\r\n" + 
				"$\\newline$ II. Satisfação de restrições é uma das formas de solução de problemas em IA.\r\n" + 
				"$\\newline$ III. O procedimento Alfa-Beta pode permitir a poda de boa parte de uma árvore de\r\n" + 
				"busca em um jogo de dois jogadores.\r\n" + 
				"São corretas:");
		questaoAlternativa55.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa55.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa55.setDisciplina(EDisciplina.INTELIGENCIA_ARTIFICIAL);
		questaoAlternativa55.setAlternativaCorreta("a");
		questaoAlternativa55.setAlternativasA("Apenas II");
		questaoAlternativa55.setAlternativasB("Apenas I e II");
		questaoAlternativa55.setAlternativasC("Apenas I e III");
		questaoAlternativa55.setAlternativasD("Apenas II e III");
		questaoAlternativa55.setAlternativasE("I, II e III");
		questaoAlternativa55.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa56 = new QuestaoAlternativa();
		questaoAlternativa56.setId(INICIOQUESTAO.longValue());
		questaoAlternativa56.setAno(ANO);
		questaoAlternativa56.setDescricao("Considerando as declarações abaixo, é incorreto afirmar:");
		questaoAlternativa56.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa56.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa56.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa56.setAlternativaCorreta("d");
		questaoAlternativa56.setAlternativasA("Filtros passa-altas são utilizados para detecção de bordas em imagens");
		questaoAlternativa56.setAlternativasB("A transformada discreta de Fourier nos permite obter uma representação de uma imagem no domínio frequência");
		questaoAlternativa56.setAlternativasC("Filtragem no domínio espacial é realizada por meio de uma operação chamada “convolução”");
		questaoAlternativa56.setAlternativasD("Os filtros Gaussiano e Laplaciano são exemplos de filtro passa-baixas");
		questaoAlternativa56.setAlternativasE("O filtro da mediana pode ser utilizado para redução de ruído em uma imagem");
		questaoAlternativa56.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa57 = new QuestaoAlternativa();
		questaoAlternativa57.setId(INICIOQUESTAO.longValue());
		questaoAlternativa57.setAno(ANO);
		questaoAlternativa57.setDescricao("Considere: todas as etapas do processo de visualização de objetos 2D; uma window delimitada pelo par de coordenadas (0,0)-(60,60); uma viewport delimitada pelo par de coordenadas (0,0)-(100,80); e os seguintes parâmetros de instanciamento, aplicados nesta ordem: (1º) Escala em X: 1, Escala em Y: 2; (2º) Rotação: 0º; (3º) Translação X: 10, Translação Y: 0\r\n" + 
				"$\\newline$ Assumindo que, nas opções apresentadas abaixo, os retângulos pontilhados representam a viewport, qual dos desenhos a seguir mais se parece com o desenho do triângulo cuja definição no sistema de referência do universo é dada pelos pares de coordenadas (10,0)-(10,30)-(40,0)? Considere ainda que as coordenadas que definem window e viewport correspondem, respectivamente, aos limites inferior esquerdo e superior direito de ambas.");
		questaoAlternativa57.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa57.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa57.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa57.setAlternativaCorreta("c");
		questaoAlternativa57.setAlternativaImagem(true);
		questaoAlternativa57.setAlternativasA("");
		questaoAlternativa57.setAlternativasB("");
		questaoAlternativa57.setAlternativasC("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");
		questaoAlternativa57.setAlternativasD("");
		questaoAlternativa57.setAlternativasE("");
		questaoAlternativa57.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa58 = new QuestaoAlternativa();
		questaoAlternativa58.setId(INICIOQUESTAO.longValue());
		questaoAlternativa58.setAno(ANO);
		questaoAlternativa58.setDescricao("Identifique a declaração incorreta:");
		questaoAlternativa58.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa58.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa58.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa58.setAlternativaCorreta("e");
		questaoAlternativa58.setAlternativasA("As operações de ajuste de brilho e contraste são operações lineares");
		questaoAlternativa58.setAlternativasB("A equalização de histograma é uma transformação não-linear e específica para cada imagem");
		questaoAlternativa58.setAlternativasC("A transformação necessária para calcular o negativo de uma imagem pode ser aplicada simultaneamente (i.e., em paralelo) a todos pixels da imagem original");
		questaoAlternativa58.setAlternativasD("A equalização de histograma pode ser obtida a partir de um histograma cumulativo da imagem original");
		questaoAlternativa58.setAlternativasE("O objetivo da equalização de histograma é reduzir o constrastre nas regiões da imagem que correspondem à porção do histograma com maior concentração de pixels");
		questaoAlternativa58.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa59 = new QuestaoAlternativa();
		questaoAlternativa59.setId(INICIOQUESTAO.longValue());
		questaoAlternativa59.setAno(ANO);
		questaoAlternativa59.setDescricao("Considerando o pipeline de visualização 3D e o equacionamento da câmera sintética, indique qual das afirmações abaixo está correta:");
		questaoAlternativa59.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa59.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa59.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa59.setAlternativaCorreta("a");
		questaoAlternativa59.setAlternativasA("A transformação de câmera pode ser representada como uma seqüência de transformações geométricas aplicadas ao conjunto de vértices que definem os objetos geométricos de uma cena");
		questaoAlternativa59.setAlternativasB("A transformação de câmera corresponde à última etapa do pipeline de visualização 3D");
		questaoAlternativa59.setAlternativasC("As coordenadas dos objetos da cena, após a transformação de câmera, são relativas ao ponto indicado como posição do observador");
		questaoAlternativa59.setAlternativasD("Considerando w como sendo o vetor da base que determina a direção do eixo z da câmera, pode-se afirmar que w é sempre obtido a partir da posição da câmera e da origem do SRU");
		questaoAlternativa59.setAlternativasE("A transformação de câmera é a operação responsável pelo mapeamento de objetos 3D no espaço 2D");
		questaoAlternativa59.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa60 = new QuestaoAlternativa();
		questaoAlternativa60.setId(INICIOQUESTAO.longValue());
		questaoAlternativa60.setAno(ANO);
		questaoAlternativa60.setDescricao("A técnica de iluminação denominada ray-tracing");
		questaoAlternativa60.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa60.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa60.setDisciplina(EDisciplina.COMPUTACAO_GRAFICA);
		questaoAlternativa60.setAlternativaCorreta("b");
		questaoAlternativa60.setAlternativasA("Determina o grau de visibilidade de superfícies traçando raios de luz imaginários partindo de todos os vértices que definem as superfícies dos objetos da cena");
		questaoAlternativa60.setAlternativasB("Utiliza o modelo de iluminação local de Phong no cálculo parcial da iluminação");
		questaoAlternativa60.setAlternativasC("Considera a interação entre os objetos da cena no cálculo da iluminação, mas só funciona com uma única fonte de luz");
		questaoAlternativa60.setAlternativasD("Apesar de possuir uma fase de pré-processamento custosa, onde é montada uma estrutura de árvore de iluminação, é bastante eficiente em situações em que a câmera se move e as fontes de luz e os objetos permanecem estáticos");
		questaoAlternativa60.setAlternativasE("Se baseia no cálculo recursivo da iluminação transmitida e refletida por cada objeto, sendo que sua eficiência aumenta a medida em que aumenta o nível de transparência dos objetos envolvidos");
		questaoAlternativa60.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa61 = new QuestaoAlternativa();
		questaoAlternativa61.setId(INICIOQUESTAO.longValue());
		questaoAlternativa61.setAno(ANO);
		questaoAlternativa61.setDescricao("Considere as seguintes afirmações sobre as linguagens usadas para análise sintática:\r\n" + 
				"$\\newline$ I – Os analisadores LL(1) aceitam linguagens com produções que apresentem recursões a esquerda\r\n" + 
				"$\\newline$ II – Os analisadores LR(1) reconhecem uma classe de linguagens maior que os analisadores LALR(1)\r\n" + 
				"$\\newline$ III – Os analisadores SLR(1) reconhecem uma classe de linguagens menor que os\r\n" + 
				"analisadores LR(0)\r\n" + 
				"$\\newline$ Selecione a afirmativa correta:");
		questaoAlternativa61.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa61.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa61.setDisciplina(EDisciplina.INTELIGENCIA_ARTIFICIAL);
		questaoAlternativa61.setAlternativaCorreta("e");
		questaoAlternativa61.setAlternativasA("As afirmações I e II são verdadeiras");
		questaoAlternativa61.setAlternativasB("As afirmações I e III são verdadeiras");
		questaoAlternativa61.setAlternativasC("Apenas a afirmativa III é verdadeira");
		questaoAlternativa61.setAlternativasD("As afirmações II e III são verdadeiras");
		questaoAlternativa61.setAlternativasE(" As afirmações I e III são falsas");
		questaoAlternativa61.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa62 = new QuestaoAlternativa();
		questaoAlternativa62.setId(INICIOQUESTAO.longValue());
		questaoAlternativa62.setAno(ANO);
		questaoAlternativa62.setDescricao("Seja a seguinte linguagem, onde ε representa a sentença vazia, $\\newline$"
				+ "S $\\rightarrow$ AB | CD"
				+ "A $\\rightarrow$ a | $\\epsilon$"
				+ "B $\\rightarrow$ b | f"
				+ "C $\\rightarrow$ c | g"
				+ "D $\\rightarrow$ h | i"
				+ "$\\newline$Qual o conjunto de terminais que podem começar sentenças derivadas de S ?");
		questaoAlternativa62.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa62.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa62.setDisciplina(EDisciplina.TEORIA_DA_COMPUTACAO);
		questaoAlternativa62.setAlternativaCorreta("b");
		questaoAlternativa62.setAlternativasA("{a, c, g}");
		questaoAlternativa62.setAlternativasB("{a, b, f, c, g}");
		questaoAlternativa62.setAlternativasC("{a, b, f, c, g, h, i}");
		questaoAlternativa62.setAlternativasD("{a, c, g, h, i}");
		questaoAlternativa62.setAlternativasE("{a, b, f}");
		questaoAlternativa62.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa63 = new QuestaoAlternativa();
		questaoAlternativa63.setId(INICIOQUESTAO.longValue());
		questaoAlternativa63.setAno(ANO);
		questaoAlternativa63.setDescricao("O esquema de tradução dirigida por sintaxe que segue traduz uma linguagem com terminais a, b, c e d em uma linguagem cujos terminais são 1, 2, 3, 4, 5, 6. Usando um parser bottom-up que executa as ações entre parênteses imediatamente após reduzir a regra correspondente, qual o resultado da tradução de “ aaadbc”\r\n" + 
				"$\\newline$ S -> AS {print \"1\"}\r\n" + 
				"$\\newline$ S -> B {print \"2\"}\r\n" + 
				"$\\newline$ A -> a {print \"3\"}\r\n" + 
				"$\\newline$ B -> bC {print \"4\"}\r\n" + 
				"$\\newline$ B -> dB {print \"5\"}\r\n" + 
				"$\\newline$ C -> c {print \"6\"}");
		questaoAlternativa63.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa63.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa63.setDisciplina(EDisciplina.COMPILADORES);
		questaoAlternativa63.setAlternativaCorreta("c");
		questaoAlternativa63.setAlternativasA("1313132546");
		questaoAlternativa63.setAlternativasB("1113332546");
		questaoAlternativa63.setAlternativasC("3336452111");
		questaoAlternativa63.setAlternativasD("6452111333");
		questaoAlternativa63.setAlternativasE("2546131313");
		questaoAlternativa63.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa64 = new QuestaoAlternativa();
		questaoAlternativa64.setId(INICIOQUESTAO.longValue());
		questaoAlternativa64.setAno(ANO);
		questaoAlternativa64.setDescricao("Assinale a opção que melhor completa o parágrafo abaixo: " +
			"$\\newline$ Sistemas distribuídos e computadores paralelos com múltiplos processadores fortemente acoplados possuem algumas características comuns, como a existência de vários processadores e a possibilidade de executar tarefas simultâneas, uma em cada processador, em um dado instante de tempo. Mas um sistema distribuído diferencia-se de um sistema multiprocessador fortemente acoplado principalmente porque o sistema distribuído:");
		questaoAlternativa64.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa64.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa64.setDisciplina(EDisciplina.SISTEMAS_DISTRIBUIDOS);
		questaoAlternativa64.setAlternativaCorreta("c");
		questaoAlternativa64.setAlternativasA("Apresenta suporte de rede de alta velocidade e um relógio global compartilhado.");
		questaoAlternativa64.setAlternativasB("Exige um sistema operacional de rede e hardware padronizado nos computadores.");
		questaoAlternativa64.setAlternativasC("Não apresenta memória compartilhada nem relógio global.");
		questaoAlternativa64.setAlternativasD("Possui memória secundária compartilhada e protocolos de sincronização de estado.");
		questaoAlternativa64.setAlternativasE("Exige um ambiente de administração único e medidas especiais de segurança contra associações ilícitas.");
		questaoAlternativa64.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa65 = new QuestaoAlternativa();
		questaoAlternativa65.setId(INICIOQUESTAO.longValue());
		questaoAlternativa65.setAno(ANO);
		questaoAlternativa65.setDescricao("Considere dois sistemas computacionais formados por múltiplos computadores que manipulam dados comuns. No primeiro, existe um computador central, chamado servidor, que é o único responsável pelos serviços de leitura e escrita desses dados. No segundo, existe um grupo de computadores responsáveis pelos serviços de leitura e escrita, e cada um desses servidores deve manter uma réplica idêntica dos dados.\r\n" + 
				"$\\newline$ Entre as vantagens e desvantagens de um único servidor em relação a vários servidores, podemos afirmar que o servidor único apresenta:\r\n" + 
				"$\\newline$ i. Vantagem de maior velocidade de execução das operações de escrita e leitura e desvantagem de maior custo de armazenamento\r\n" + 
				"$\\newline$ ii. Vantagem de não necessitar de coordenação distribuída para ordenação das operações de escrita e desvantagem de menor velocidade nas leituras devido a serialização de operações\r\n" + 
				"$\\newline$ iii. Vantagem de manter mais facilmente a consistência dos dados mas desvantagem de perda de disponibilidade em caso de falha do servidor.\r\n" + 
				"$\\newline$ Dessas afirmativas são verdadeiras:");
		questaoAlternativa65.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa65.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa65.setDisciplina(EDisciplina.SISTEMAS_DISTRIBUIDOS);
		questaoAlternativa65.setAlternativaCorreta("a");
		questaoAlternativa65.setAlternativasA("(ii) e (iii)");
		questaoAlternativa65.setAlternativasB("Apenas (ii)");
		questaoAlternativa65.setAlternativasC("Apenas (i)");
		questaoAlternativa65.setAlternativasD("(i), (iii)");
		questaoAlternativa65.setAlternativasE("(i), (ii) e (iii)");
		questaoAlternativa65.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa66 = new QuestaoAlternativa();
		questaoAlternativa66.setId(INICIOQUESTAO.longValue());
		questaoAlternativa66.setAno(ANO);
		questaoAlternativa66.setDescricao("Um cluster é definido como um sistema distribuído formado por máquinas homogêneas, executando o mesmo sistema operacional, interligadas por uma rede de alta velocidade. Como vantagens deste cluster em relação a uma máquina de grande porte poderíamos citar:\r\n" + 
				"$\\newline$ i. melhor escalabilidade de unidades de processamento\r\n" + 
				"$\\newline$ ii. possibilidade de executar programas com múltiplas threads\r\n" + 
				"$\\newline$ iii. possibilidade de continuar o processamento isolando máquinas defeituosas\r\n" + 
				"$\\newline$ iv. possibilidade de executar programas Java usando RMI\r\n" + 
				"$\\newline$ Dessas afirmativas são verdadeiras:");
		questaoAlternativa66.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa66.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa66.setDisciplina(EDisciplina.SISTEMAS_DISTRIBUIDOS);
		questaoAlternativa66.setAlternativaCorreta("a");
		questaoAlternativa66.setAlternativasA("É um protocolo do nível de transporte.");
		questaoAlternativa66.setAlternativasB("Usa janelas deslizantes para implementar o controle de fluxo e erro.");
		questaoAlternativa66.setAlternativasC("É um protocolo orientado a conexão.");
		questaoAlternativa66.setAlternativasD(
				"Utiliza portas para permitir a comunicação entre processos localizados em dispositivos diferentes.");
		questaoAlternativa66.setAlternativasE(
				"Possui um campo de checksum que valida as informações de seu cabeçalho, mas não valida as informações de payload (campo de dados).");
		questaoAlternativa66.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa67 = new QuestaoAlternativa();
		questaoAlternativa67.setId(INICIOQUESTAO.longValue());
		questaoAlternativa67.setAno(ANO);
		questaoAlternativa67.setDescricao("Os tipos mais comuns de defeitos em sistemas distribuídos provocados por falhas físicas de componentes ou interferência eletro-magnética são:");
		questaoAlternativa67.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa67.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa67.setDisciplina(EDisciplina.SISTEMAS_DISTRIBUIDOS);
		questaoAlternativa67.setAlternativaCorreta("d");
		questaoAlternativa67.setAlternativasA("perda de arquivos, colapso de servidores, captura de senhas");
		questaoAlternativa67.setAlternativasB("captura de senhas, sobrecarga de servidores, mensagens duplicadas");
		questaoAlternativa67.setAlternativasC("perda de mensagens, mensagens com vírus e mensagens órfãs");
		questaoAlternativa67.setAlternativasD("colapso de servidores, queda do enlace e perda de mensagens");
		questaoAlternativa67.setAlternativasE("páginas web com endereço errado, spam e mensagens duplicadas");
		questaoAlternativa67.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa68 = new QuestaoAlternativa();
		questaoAlternativa68.setId(INICIOQUESTAO.longValue());
		questaoAlternativa68.setAno(ANO);
		questaoAlternativa68.setDescricao("O protocolo padrão para gerenciamento de redes TCP/IP, definido pelo IETF, é:");
		questaoAlternativa68.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa68.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa68.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa68.setAlternativaCorreta("c");
		questaoAlternativa68.setAlternativasA("SMTP");
		questaoAlternativa68.setAlternativasB("HTTP");
		questaoAlternativa68.setAlternativasC("SNMP");
		questaoAlternativa68.setAlternativasD("COPS");
		questaoAlternativa68.setAlternativasE("SSH");
		questaoAlternativa68.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa69 = new QuestaoAlternativa();
		questaoAlternativa69.setId(INICIOQUESTAO.longValue());
		questaoAlternativa69.setAno(ANO);
		questaoAlternativa69.setDescricao("Qual das opções abaixo melhor caracteriza o protocolo IP?");
		questaoAlternativa69.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa69.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa69.setDisciplina(EDisciplina.REDES_DE_COMPUTADORES);
		questaoAlternativa69.setAlternativaCorreta("b");
		questaoAlternativa69.setAlternativasA("Orientado a conexão, com suporte a QoS, com mecanismo de retransmissão");
		questaoAlternativa69.setAlternativasB("Não orientado a conexão, sem suporte a QoS, sem mecanismo de retransmissão");
		questaoAlternativa69.setAlternativasC("Orientado a conexão, sem suporte a QoS, sem mecanismo de retransmissão");
		questaoAlternativa69.setAlternativasD("Orientado a conexão, sem suporte a QoS, com mecanismo de retransmissão");
		questaoAlternativa69.setAlternativasE("Não orientado a conexão, com suporte a QoS, sem mecanismo de retransmissão");
		questaoAlternativa69.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		QuestaoAlternativa questaoAlternativa70 = new QuestaoAlternativa();
		questaoAlternativa70.setId(INICIOQUESTAO.longValue());
		questaoAlternativa70.setAno(ANO);
		questaoAlternativa70.setDescricao("Assinale a alternativa que apresenta um protocolo de roteamento baseado no algoritmo vetor-distância e é classificado como IGP (Interior Gateway Protocol):");
		questaoAlternativa70.setArea(EArea.TECNOLOGIA_DA_COMPUTACAO);
		questaoAlternativa70.setProva(ETipoQuestaoProva.POSCOMP);
		questaoAlternativa70.setDisciplina(EDisciplina.PROGRAMACAO);
		questaoAlternativa70.setAlternativaCorreta("d");
		questaoAlternativa70.setAlternativasA("OSPF");
		questaoAlternativa70.setAlternativasB("ICMP");
		questaoAlternativa70.setAlternativasC("BGP");
		questaoAlternativa70.setAlternativasD("RIP");
		questaoAlternativa70.setAlternativasE("RSVP");
		questaoAlternativa70.setNumeroQuestao(NUMEROQUESTAO);

		NUMEROQUESTAO++;
		INICIOQUESTAO++; //		----------------------------------------------------------- //		-----------------------------------------------------------

		List<Questao> questoes = new ArrayList<>();
		questoes.add(questaoAlternativa1);
		questoes.add(questaoAlternativa2);
		questoes.add(questaoAlternativa3);
		questoes.add(questaoAlternativa4);
		questoes.add(questaoAlternativa5);
		questoes.add(questaoAlternativa6);
		questoes.add(questaoAlternativa7);
		questoes.add(questaoAlternativa8);
		questoes.add(questaoAlternativa9);
		questoes.add(questaoAlternativa10);
		questoes.add(questaoAlternativa11);
		questoes.add(questaoAlternativa12);
		questoes.add(questaoAlternativa13);
		questoes.add(questaoAlternativa14);
		questoes.add(questaoAlternativa15);
		questoes.add(questaoAlternativa16);
		questoes.add(questaoAlternativa17);
		questoes.add(questaoAlternativa18);
		questoes.add(questaoAlternativa19);
		questoes.add(questaoAlternativa20);
		questoes.add(questaoAlternativa21);
		questoes.add(questaoAlternativa22);
		questoes.add(questaoAlternativa23);
		questoes.add(questaoAlternativa24);
		questoes.add(questaoAlternativa25);
		questoes.add(questaoAlternativa26);
		questoes.add(questaoAlternativa27);
		questoes.add(questaoAlternativa28);
		questoes.add(questaoAlternativa29);
		questoes.add(questaoAlternativa30);
		questoes.add(questaoAlternativa31);
		questoes.add(questaoAlternativa32);
		questoes.add(questaoAlternativa33);
		questoes.add(questaoAlternativa34);
		questoes.add(questaoAlternativa35);
		questoes.add(questaoAlternativa36);
		questoes.add(questaoAlternativa37);
		questoes.add(questaoAlternativa38);
		questoes.add(questaoAlternativa39);
		questoes.add(questaoAlternativa40);
		questoes.add(questaoAlternativa41);
		questoes.add(questaoAlternativa42);
		questoes.add(questaoAlternativa43);
		questoes.add(questaoAlternativa44);
		questoes.add(questaoAlternativa45);
		questoes.add(questaoAlternativa46);
		questoes.add(questaoAlternativa47);
		questoes.add(questaoAlternativa48);
		questoes.add(questaoAlternativa49);
		questoes.add(questaoAlternativa50);
		questoes.add(questaoAlternativa51);
		questoes.add(questaoAlternativa52);
		questoes.add(questaoAlternativa53);
		questoes.add(questaoAlternativa54);
		questoes.add(questaoAlternativa55);
		questoes.add(questaoAlternativa56);
		questoes.add(questaoAlternativa57);
		questoes.add(questaoAlternativa58);
		questoes.add(questaoAlternativa59);
		questoes.add(questaoAlternativa60);
		questoes.add(questaoAlternativa61);
		questoes.add(questaoAlternativa62);
		questoes.add(questaoAlternativa63);
		questoes.add(questaoAlternativa64);
		questoes.add(questaoAlternativa65);
		questoes.add(questaoAlternativa66);
		questoes.add(questaoAlternativa67);
		questoes.add(questaoAlternativa68);
		questoes.add(questaoAlternativa69);
		questoes.add(questaoAlternativa70);

		return questoes;
	}

}
